// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/tpu/compile_metadata.proto

package tensorflow.tpu;

public final class CompileMetadata {
  private CompileMetadata() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TPUCompileMetadataProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUCompileMetadataProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg> 
        getArgsList();
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg getArgs(int index);
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    int getArgsCount();
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    java.util.List<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder> 
        getArgsOrBuilderList();
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder getArgsOrBuilder(
        int index);

    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval> 
        getRetvalsList();
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval getRetvals(int index);
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    int getRetvalsCount();
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    java.util.List<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder> 
        getRetvalsOrBuilderList();
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder getRetvalsOrBuilder(
        int index);

    /**
     * <pre>
     * Number of replicas of the computation and number of cores in each replica.
     * TODO(b/140721404): it may not be necessary to state the number of cores per
     * replica here. Reconsider when replicated model-parallelism is implemented
     * in XLA.
     * </pre>
     *
     * <code>int32 num_replicas = 3;</code>
     * @return The numReplicas.
     */
    int getNumReplicas();

    /**
     * <code>int32 num_cores_per_replica = 4;</code>
     * @return The numCoresPerReplica.
     */
    int getNumCoresPerReplica();

    /**
     * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
     * @return Whether the deviceAssignment field is set.
     */
    boolean hasDeviceAssignment();
    /**
     * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
     * @return The deviceAssignment.
     */
    xla.XlaData.DeviceAssignmentProto getDeviceAssignment();
    /**
     * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
     */
    xla.XlaData.DeviceAssignmentProtoOrBuilder getDeviceAssignmentOrBuilder();

    /**
     * <pre>
     * A fingerprint of the function library. Ensures that any functions called
     * by the computation have matching definitions.
     * </pre>
     *
     * <code>uint64 function_library_fingerprint = 6;</code>
     * @return The functionLibraryFingerprint.
     */
    long getFunctionLibraryFingerprint();

    /**
     * <pre>
     * Unique session identifier. Can be empty.
     * </pre>
     *
     * <code>string session_handle = 9;</code>
     * @return The sessionHandle.
     */
    java.lang.String getSessionHandle();
    /**
     * <pre>
     * Unique session identifier. Can be empty.
     * </pre>
     *
     * <code>string session_handle = 9;</code>
     * @return The bytes for sessionHandle.
     */
    com.google.protobuf.ByteString
        getSessionHandleBytes();

    /**
     * <pre>
     * Fingerprint of guaranteed_const value. The fingerprint computation inside
     * tpu_compile_op may be slow. The computation can be avoided by setting the
     * fingerprint value here.
     * </pre>
     *
     * <code>string guaranteed_const_fingerprint = 10;</code>
     * @return The guaranteedConstFingerprint.
     */
    java.lang.String getGuaranteedConstFingerprint();
    /**
     * <pre>
     * Fingerprint of guaranteed_const value. The fingerprint computation inside
     * tpu_compile_op may be slow. The computation can be avoided by setting the
     * fingerprint value here.
     * </pre>
     *
     * <code>string guaranteed_const_fingerprint = 10;</code>
     * @return The bytes for guaranteedConstFingerprint.
     */
    com.google.protobuf.ByteString
        getGuaranteedConstFingerprintBytes();

    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    java.util.List<tensorflow.tpu.DynamicPadding.PaddingMap> 
        getPaddingMapsList();
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    tensorflow.tpu.DynamicPadding.PaddingMap getPaddingMaps(int index);
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    int getPaddingMapsCount();
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    java.util.List<? extends tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder> 
        getPaddingMapsOrBuilderList();
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder getPaddingMapsOrBuilder(
        int index);

    /**
     * <pre>
     * The location of step markers that XLA compile will instrument.
     * </pre>
     *
     * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
     * @return The enum numeric value on the wire for stepMarkerLocation.
     */
    int getStepMarkerLocationValue();
    /**
     * <pre>
     * The location of step markers that XLA compile will instrument.
     * </pre>
     *
     * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
     * @return The stepMarkerLocation.
     */
    xla.Xla.DebugOptions.StepMarkerLocation getStepMarkerLocation();

    /**
     * <pre>
     * Minimum number of batches run through the XLA graph before XLA fusion
     * autotuner is enabled. Default value of zero disables the autotuner.
     * The XLA fusion autotuner can improve performance by executing a heuristic
     * search on the compiler parameters.
     * </pre>
     *
     * <code>int64 xla_fusion_autotuner_thresh = 13;</code>
     * @return The xlaFusionAutotunerThresh.
     */
    long getXlaFusionAutotunerThresh();

    /**
     * <pre>
     * Enables TPU compiler to add partitioning policies for inputs/outputs to
     * the XLA computation for model parallelism.
     * </pre>
     *
     * <code>bool enable_automatic_model_parallelism = 14;</code>
     * @return The enableAutomaticModelParallelism.
     */
    boolean getEnableAutomaticModelParallelism();

    /**
     * <pre>
     * Whether to use XLA's SPMD or MPMD partitioner when compiler partitioning is
     * requested.
     * </pre>
     *
     * <code>bool use_spmd_for_xla_partitioning = 15;</code>
     * @return The useSpmdForXlaPartitioning.
     */
    boolean getUseSpmdForXlaPartitioning();

    /**
     * <pre>
     * A fingerprint generated by hashing the MLIR module content.
     * </pre>
     *
     * <code>uint64 mlir_fingerprint = 17;</code>
     * @return The mlirFingerprint.
     */
    long getMlirFingerprint();
  }
  /**
   * <pre>
   * This is an experimental proto used in the TF/XLA bridge to store metadata to
   * a compile op (e.g. _TPUCompileMlir).
   * TODO(lyandy): Deprecate proto once generic metadata proto is created.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tpu.TPUCompileMetadataProto}
   */
  public static final class TPUCompileMetadataProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUCompileMetadataProto)
      TPUCompileMetadataProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TPUCompileMetadataProto.newBuilder() to construct.
    private TPUCompileMetadataProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TPUCompileMetadataProto() {
      args_ = java.util.Collections.emptyList();
      retvals_ = java.util.Collections.emptyList();
      sessionHandle_ = "";
      guaranteedConstFingerprint_ = "";
      paddingMaps_ = java.util.Collections.emptyList();
      stepMarkerLocation_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TPUCompileMetadataProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.class, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Builder.class);
    }

    public interface ArgOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUCompileMetadataProto.Arg)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return The enum numeric value on the wire for dtype.
       */
      int getDtypeValue();
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return The dtype.
       */
      org.tensorflow.framework.DataType getDtype();

      /**
       * <code>.tensorflow.TensorShapeProto shape = 2;</code>
       * @return Whether the shape field is set.
       */
      boolean hasShape();
      /**
       * <code>.tensorflow.TensorShapeProto shape = 2;</code>
       * @return The shape.
       */
      org.tensorflow.framework.TensorShapeProto getShape();
      /**
       * <code>.tensorflow.TensorShapeProto shape = 2;</code>
       */
      org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder();

      /**
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
       * @return The enum numeric value on the wire for kind.
       */
      int getKindValue();
      /**
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
       * @return The kind.
       */
      tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind getKind();

      /**
       * <pre>
       * The cross-core sharding of this input within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 4;</code>
       * @return Whether the sharding field is set.
       */
      boolean hasSharding();
      /**
       * <pre>
       * The cross-core sharding of this input within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 4;</code>
       * @return The sharding.
       */
      xla.XlaData.OpSharding getSharding();
      /**
       * <pre>
       * The cross-core sharding of this input within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 4;</code>
       */
      xla.XlaData.OpShardingOrBuilder getShardingOrBuilder();

      /**
       * <pre>
       * Whether this argument will receive the same data across all replicas.
       * </pre>
       *
       * <code>bool is_same_data_across_replicas = 5;</code>
       * @return The isSameDataAcrossReplicas.
       */
      boolean getIsSameDataAcrossReplicas();

      /**
       * <pre>
       * Whether to allow XLA to produce separate programs to shard/unshard this
       * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
       * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
       * a variable, and retval_index_for_sharding must be specified for the
       * corresponding updated value.
       * </pre>
       *
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
       * @return The enum numeric value on the wire for enableXlaSharding.
       */
      int getEnableXlaShardingValue();
      /**
       * <pre>
       * Whether to allow XLA to produce separate programs to shard/unshard this
       * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
       * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
       * a variable, and retval_index_for_sharding must be specified for the
       * corresponding updated value.
       * </pre>
       *
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
       * @return The enableXlaSharding.
       */
      tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding getEnableXlaSharding();

      /**
       * <pre>
       * If XLA sharding is allowed on a Kind::PARAMETER, this field is used to
       * specify the corresponding updated value in the return values. Use -1 for
       * variables that are not updated.
       * </pre>
       *
       * <code>int32 retval_index_for_sharding = 8;</code>
       * @return The retvalIndexForSharding.
       */
      int getRetvalIndexForSharding();

      /**
       * <pre>
       * Whether this argument is placed on fast memory or not.
       * </pre>
       *
       * <code>bool fast_mem = 7;</code>
       * @return The fastMem.
       */
      boolean getFastMem();

      /**
       * <pre>
       * Whether to let XLA to decide the layout during compilation, as opposed to
       * using a fixed layout determined by the shape.
       * </pre>
       *
       * <code>bool unrestricted_layout = 9;</code>
       * @return The unrestrictedLayout.
       */
      boolean getUnrestrictedLayout();

      /**
       * <pre>
       * Name of the node that the arg comes from.
       * </pre>
       *
       * <code>string name = 10;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the node that the arg comes from.
       * </pre>
       *
       * <code>string name = 10;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Whether to use XLA collectives to broadcast this parameter to all
       * replicas, instead of using TensorFlow Send/Recv among the tasks.
       * </pre>
       *
       * <code>bool requires_xla_broadcast = 11;</code>
       * @return The requiresXlaBroadcast.
       */
      boolean getRequiresXlaBroadcast();
    }
    /**
     * <pre>
     * Description of the types and shapes of the arguments to a computation.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tpu.TPUCompileMetadataProto.Arg}
     */
    public static final class Arg extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUCompileMetadataProto.Arg)
        ArgOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Arg.newBuilder() to construct.
      private Arg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Arg() {
        dtype_ = 0;
        kind_ = 0;
        enableXlaSharding_ = 0;
        name_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Arg();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.class, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder.class);
      }

      /**
       * Protobuf enum {@code tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind}
       */
      public enum Kind
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>INVALID = 0;</code>
         */
        INVALID(0),
        /**
         * <code>PARAMETER = 1;</code>
         */
        PARAMETER(1),
        /**
         * <code>VARIABLE = 2;</code>
         */
        VARIABLE(2),
        /**
         * <pre>
         * These are args which have been guaranteed to be constants during the
         * session lifetime by the use of the GuaranteeConstOp (or ConstantOp).
         * </pre>
         *
         * <code>GUARANTEED_CONSTANT = 3;</code>
         */
        GUARANTEED_CONSTANT(3),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>INVALID = 0;</code>
         */
        public static final int INVALID_VALUE = 0;
        /**
         * <code>PARAMETER = 1;</code>
         */
        public static final int PARAMETER_VALUE = 1;
        /**
         * <code>VARIABLE = 2;</code>
         */
        public static final int VARIABLE_VALUE = 2;
        /**
         * <pre>
         * These are args which have been guaranteed to be constants during the
         * session lifetime by the use of the GuaranteeConstOp (or ConstantOp).
         * </pre>
         *
         * <code>GUARANTEED_CONSTANT = 3;</code>
         */
        public static final int GUARANTEED_CONSTANT_VALUE = 3;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static Kind valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static Kind forNumber(int value) {
          switch (value) {
            case 0: return INVALID;
            case 1: return PARAMETER;
            case 2: return VARIABLE;
            case 3: return GUARANTEED_CONSTANT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Kind>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            Kind> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
                public Kind findValueByNumber(int number) {
                  return Kind.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.getDescriptor().getEnumTypes().get(0);
        }

        private static final Kind[] VALUES = values();

        public static Kind valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private Kind(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind)
      }

      /**
       * Protobuf enum {@code tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding}
       */
      public enum EnableXlaSharding
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>DISALLOWED = 0;</code>
         */
        DISALLOWED(0),
        /**
         * <pre>
         * Sharding is allowed if host training loop exists.
         * </pre>
         *
         * <code>TENTATIVE = 1;</code>
         */
        TENTATIVE(1),
        /**
         * <code>ALLOWED = 2;</code>
         */
        ALLOWED(2),
        UNRECOGNIZED(-1),
        ;

        /**
         * <code>DISALLOWED = 0;</code>
         */
        public static final int DISALLOWED_VALUE = 0;
        /**
         * <pre>
         * Sharding is allowed if host training loop exists.
         * </pre>
         *
         * <code>TENTATIVE = 1;</code>
         */
        public static final int TENTATIVE_VALUE = 1;
        /**
         * <code>ALLOWED = 2;</code>
         */
        public static final int ALLOWED_VALUE = 2;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static EnableXlaSharding valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static EnableXlaSharding forNumber(int value) {
          switch (value) {
            case 0: return DISALLOWED;
            case 1: return TENTATIVE;
            case 2: return ALLOWED;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<EnableXlaSharding>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            EnableXlaSharding> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<EnableXlaSharding>() {
                public EnableXlaSharding findValueByNumber(int number) {
                  return EnableXlaSharding.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.getDescriptor().getEnumTypes().get(1);
        }

        private static final EnableXlaSharding[] VALUES = values();

        public static EnableXlaSharding valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private EnableXlaSharding(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding)
      }

      public static final int DTYPE_FIELD_NUMBER = 1;
      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return The enum numeric value on the wire for dtype.
       */
      @java.lang.Override public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return The dtype.
       */
      @java.lang.Override public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.forNumber(dtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }

      public static final int SHAPE_FIELD_NUMBER = 2;
      private org.tensorflow.framework.TensorShapeProto shape_;
      /**
       * <code>.tensorflow.TensorShapeProto shape = 2;</code>
       * @return Whether the shape field is set.
       */
      @java.lang.Override
      public boolean hasShape() {
        return shape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 2;</code>
       * @return The shape.
       */
      @java.lang.Override
      public org.tensorflow.framework.TensorShapeProto getShape() {
        return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 2;</code>
       */
      @java.lang.Override
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
      }

      public static final int KIND_FIELD_NUMBER = 3;
      private int kind_ = 0;
      /**
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
       * @return The enum numeric value on the wire for kind.
       */
      @java.lang.Override public int getKindValue() {
        return kind_;
      }
      /**
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
       * @return The kind.
       */
      @java.lang.Override public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind getKind() {
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind result = tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind.forNumber(kind_);
        return result == null ? tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind.UNRECOGNIZED : result;
      }

      public static final int SHARDING_FIELD_NUMBER = 4;
      private xla.XlaData.OpSharding sharding_;
      /**
       * <pre>
       * The cross-core sharding of this input within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 4;</code>
       * @return Whether the sharding field is set.
       */
      @java.lang.Override
      public boolean hasSharding() {
        return sharding_ != null;
      }
      /**
       * <pre>
       * The cross-core sharding of this input within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 4;</code>
       * @return The sharding.
       */
      @java.lang.Override
      public xla.XlaData.OpSharding getSharding() {
        return sharding_ == null ? xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
      }
      /**
       * <pre>
       * The cross-core sharding of this input within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 4;</code>
       */
      @java.lang.Override
      public xla.XlaData.OpShardingOrBuilder getShardingOrBuilder() {
        return sharding_ == null ? xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
      }

      public static final int IS_SAME_DATA_ACROSS_REPLICAS_FIELD_NUMBER = 5;
      private boolean isSameDataAcrossReplicas_ = false;
      /**
       * <pre>
       * Whether this argument will receive the same data across all replicas.
       * </pre>
       *
       * <code>bool is_same_data_across_replicas = 5;</code>
       * @return The isSameDataAcrossReplicas.
       */
      @java.lang.Override
      public boolean getIsSameDataAcrossReplicas() {
        return isSameDataAcrossReplicas_;
      }

      public static final int ENABLE_XLA_SHARDING_FIELD_NUMBER = 6;
      private int enableXlaSharding_ = 0;
      /**
       * <pre>
       * Whether to allow XLA to produce separate programs to shard/unshard this
       * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
       * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
       * a variable, and retval_index_for_sharding must be specified for the
       * corresponding updated value.
       * </pre>
       *
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
       * @return The enum numeric value on the wire for enableXlaSharding.
       */
      @java.lang.Override public int getEnableXlaShardingValue() {
        return enableXlaSharding_;
      }
      /**
       * <pre>
       * Whether to allow XLA to produce separate programs to shard/unshard this
       * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
       * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
       * a variable, and retval_index_for_sharding must be specified for the
       * corresponding updated value.
       * </pre>
       *
       * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
       * @return The enableXlaSharding.
       */
      @java.lang.Override public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding getEnableXlaSharding() {
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding result = tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding.forNumber(enableXlaSharding_);
        return result == null ? tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding.UNRECOGNIZED : result;
      }

      public static final int RETVAL_INDEX_FOR_SHARDING_FIELD_NUMBER = 8;
      private int retvalIndexForSharding_ = 0;
      /**
       * <pre>
       * If XLA sharding is allowed on a Kind::PARAMETER, this field is used to
       * specify the corresponding updated value in the return values. Use -1 for
       * variables that are not updated.
       * </pre>
       *
       * <code>int32 retval_index_for_sharding = 8;</code>
       * @return The retvalIndexForSharding.
       */
      @java.lang.Override
      public int getRetvalIndexForSharding() {
        return retvalIndexForSharding_;
      }

      public static final int FAST_MEM_FIELD_NUMBER = 7;
      private boolean fastMem_ = false;
      /**
       * <pre>
       * Whether this argument is placed on fast memory or not.
       * </pre>
       *
       * <code>bool fast_mem = 7;</code>
       * @return The fastMem.
       */
      @java.lang.Override
      public boolean getFastMem() {
        return fastMem_;
      }

      public static final int UNRESTRICTED_LAYOUT_FIELD_NUMBER = 9;
      private boolean unrestrictedLayout_ = false;
      /**
       * <pre>
       * Whether to let XLA to decide the layout during compilation, as opposed to
       * using a fixed layout determined by the shape.
       * </pre>
       *
       * <code>bool unrestricted_layout = 9;</code>
       * @return The unrestrictedLayout.
       */
      @java.lang.Override
      public boolean getUnrestrictedLayout() {
        return unrestrictedLayout_;
      }

      public static final int NAME_FIELD_NUMBER = 10;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the node that the arg comes from.
       * </pre>
       *
       * <code>string name = 10;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Name of the node that the arg comes from.
       * </pre>
       *
       * <code>string name = 10;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int REQUIRES_XLA_BROADCAST_FIELD_NUMBER = 11;
      private boolean requiresXlaBroadcast_ = false;
      /**
       * <pre>
       * Whether to use XLA collectives to broadcast this parameter to all
       * replicas, instead of using TensorFlow Send/Recv among the tasks.
       * </pre>
       *
       * <code>bool requires_xla_broadcast = 11;</code>
       * @return The requiresXlaBroadcast.
       */
      @java.lang.Override
      public boolean getRequiresXlaBroadcast() {
        return requiresXlaBroadcast_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
          output.writeEnum(1, dtype_);
        }
        if (shape_ != null) {
          output.writeMessage(2, getShape());
        }
        if (kind_ != tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind.INVALID.getNumber()) {
          output.writeEnum(3, kind_);
        }
        if (sharding_ != null) {
          output.writeMessage(4, getSharding());
        }
        if (isSameDataAcrossReplicas_ != false) {
          output.writeBool(5, isSameDataAcrossReplicas_);
        }
        if (enableXlaSharding_ != tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding.DISALLOWED.getNumber()) {
          output.writeEnum(6, enableXlaSharding_);
        }
        if (fastMem_ != false) {
          output.writeBool(7, fastMem_);
        }
        if (retvalIndexForSharding_ != 0) {
          output.writeInt32(8, retvalIndexForSharding_);
        }
        if (unrestrictedLayout_ != false) {
          output.writeBool(9, unrestrictedLayout_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 10, name_);
        }
        if (requiresXlaBroadcast_ != false) {
          output.writeBool(11, requiresXlaBroadcast_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, dtype_);
        }
        if (shape_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getShape());
        }
        if (kind_ != tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind.INVALID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, kind_);
        }
        if (sharding_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getSharding());
        }
        if (isSameDataAcrossReplicas_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, isSameDataAcrossReplicas_);
        }
        if (enableXlaSharding_ != tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding.DISALLOWED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, enableXlaSharding_);
        }
        if (fastMem_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, fastMem_);
        }
        if (retvalIndexForSharding_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, retvalIndexForSharding_);
        }
        if (unrestrictedLayout_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, unrestrictedLayout_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, name_);
        }
        if (requiresXlaBroadcast_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, requiresXlaBroadcast_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg)) {
          return super.equals(obj);
        }
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg other = (tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg) obj;

        if (dtype_ != other.dtype_) return false;
        if (hasShape() != other.hasShape()) return false;
        if (hasShape()) {
          if (!getShape()
              .equals(other.getShape())) return false;
        }
        if (kind_ != other.kind_) return false;
        if (hasSharding() != other.hasSharding()) return false;
        if (hasSharding()) {
          if (!getSharding()
              .equals(other.getSharding())) return false;
        }
        if (getIsSameDataAcrossReplicas()
            != other.getIsSameDataAcrossReplicas()) return false;
        if (enableXlaSharding_ != other.enableXlaSharding_) return false;
        if (getRetvalIndexForSharding()
            != other.getRetvalIndexForSharding()) return false;
        if (getFastMem()
            != other.getFastMem()) return false;
        if (getUnrestrictedLayout()
            != other.getUnrestrictedLayout()) return false;
        if (!getName()
            .equals(other.getName())) return false;
        if (getRequiresXlaBroadcast()
            != other.getRequiresXlaBroadcast()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DTYPE_FIELD_NUMBER;
        hash = (53 * hash) + dtype_;
        if (hasShape()) {
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShape().hashCode();
        }
        hash = (37 * hash) + KIND_FIELD_NUMBER;
        hash = (53 * hash) + kind_;
        if (hasSharding()) {
          hash = (37 * hash) + SHARDING_FIELD_NUMBER;
          hash = (53 * hash) + getSharding().hashCode();
        }
        hash = (37 * hash) + IS_SAME_DATA_ACROSS_REPLICAS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsSameDataAcrossReplicas());
        hash = (37 * hash) + ENABLE_XLA_SHARDING_FIELD_NUMBER;
        hash = (53 * hash) + enableXlaSharding_;
        hash = (37 * hash) + RETVAL_INDEX_FOR_SHARDING_FIELD_NUMBER;
        hash = (53 * hash) + getRetvalIndexForSharding();
        hash = (37 * hash) + FAST_MEM_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFastMem());
        hash = (37 * hash) + UNRESTRICTED_LAYOUT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUnrestrictedLayout());
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + REQUIRES_XLA_BROADCAST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRequiresXlaBroadcast());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Description of the types and shapes of the arguments to a computation.
       * </pre>
       *
       * Protobuf type {@code tensorflow.tpu.TPUCompileMetadataProto.Arg}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUCompileMetadataProto.Arg)
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.class, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder.class);
        }

        // Construct using tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          dtype_ = 0;
          shape_ = null;
          if (shapeBuilder_ != null) {
            shapeBuilder_.dispose();
            shapeBuilder_ = null;
          }
          kind_ = 0;
          sharding_ = null;
          if (shardingBuilder_ != null) {
            shardingBuilder_.dispose();
            shardingBuilder_ = null;
          }
          isSameDataAcrossReplicas_ = false;
          enableXlaSharding_ = 0;
          retvalIndexForSharding_ = 0;
          fastMem_ = false;
          unrestrictedLayout_ = false;
          name_ = "";
          requiresXlaBroadcast_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_descriptor;
        }

        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg getDefaultInstanceForType() {
          return tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.getDefaultInstance();
        }

        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg build() {
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg buildPartial() {
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg result = new tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.dtype_ = dtype_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.shape_ = shapeBuilder_ == null
                ? shape_
                : shapeBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.kind_ = kind_;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.sharding_ = shardingBuilder_ == null
                ? sharding_
                : shardingBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.isSameDataAcrossReplicas_ = isSameDataAcrossReplicas_;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.enableXlaSharding_ = enableXlaSharding_;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.retvalIndexForSharding_ = retvalIndexForSharding_;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.fastMem_ = fastMem_;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.unrestrictedLayout_ = unrestrictedLayout_;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.name_ = name_;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.requiresXlaBroadcast_ = requiresXlaBroadcast_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg) {
            return mergeFrom((tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg other) {
          if (other == tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.getDefaultInstance()) return this;
          if (other.dtype_ != 0) {
            setDtypeValue(other.getDtypeValue());
          }
          if (other.hasShape()) {
            mergeShape(other.getShape());
          }
          if (other.kind_ != 0) {
            setKindValue(other.getKindValue());
          }
          if (other.hasSharding()) {
            mergeSharding(other.getSharding());
          }
          if (other.getIsSameDataAcrossReplicas() != false) {
            setIsSameDataAcrossReplicas(other.getIsSameDataAcrossReplicas());
          }
          if (other.enableXlaSharding_ != 0) {
            setEnableXlaShardingValue(other.getEnableXlaShardingValue());
          }
          if (other.getRetvalIndexForSharding() != 0) {
            setRetvalIndexForSharding(other.getRetvalIndexForSharding());
          }
          if (other.getFastMem() != false) {
            setFastMem(other.getFastMem());
          }
          if (other.getUnrestrictedLayout() != false) {
            setUnrestrictedLayout(other.getUnrestrictedLayout());
          }
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            bitField0_ |= 0x00000200;
            onChanged();
          }
          if (other.getRequiresXlaBroadcast() != false) {
            setRequiresXlaBroadcast(other.getRequiresXlaBroadcast());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  dtype_ = input.readEnum();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  input.readMessage(
                      getShapeFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000002;
                  break;
                } // case 18
                case 24: {
                  kind_ = input.readEnum();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  input.readMessage(
                      getShardingFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 40: {
                  isSameDataAcrossReplicas_ = input.readBool();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  enableXlaSharding_ = input.readEnum();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  fastMem_ = input.readBool();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 56
                case 64: {
                  retvalIndexForSharding_ = input.readInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 64
                case 72: {
                  unrestrictedLayout_ = input.readBool();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                case 82: {
                  name_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 82
                case 88: {
                  requiresXlaBroadcast_ = input.readBool();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 88
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int dtype_ = 0;
        /**
         * <code>.tensorflow.DataType dtype = 1;</code>
         * @return The enum numeric value on the wire for dtype.
         */
        @java.lang.Override public int getDtypeValue() {
          return dtype_;
        }
        /**
         * <code>.tensorflow.DataType dtype = 1;</code>
         * @param value The enum numeric value on the wire for dtype to set.
         * @return This builder for chaining.
         */
        public Builder setDtypeValue(int value) {
          dtype_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.DataType dtype = 1;</code>
         * @return The dtype.
         */
        @java.lang.Override
        public org.tensorflow.framework.DataType getDtype() {
          org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.forNumber(dtype_);
          return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
        }
        /**
         * <code>.tensorflow.DataType dtype = 1;</code>
         * @param value The dtype to set.
         * @return This builder for chaining.
         */
        public Builder setDtype(org.tensorflow.framework.DataType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          dtype_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.DataType dtype = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDtype() {
          bitField0_ = (bitField0_ & ~0x00000001);
          dtype_ = 0;
          onChanged();
          return this;
        }

        private org.tensorflow.framework.TensorShapeProto shape_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> shapeBuilder_;
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         * @return Whether the shape field is set.
         */
        public boolean hasShape() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         * @return The shape.
         */
        public org.tensorflow.framework.TensorShapeProto getShape() {
          if (shapeBuilder_ == null) {
            return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
          } else {
            return shapeBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        public Builder setShape(org.tensorflow.framework.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shape_ = value;
          } else {
            shapeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        public Builder setShape(
            org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
          if (shapeBuilder_ == null) {
            shape_ = builderForValue.build();
          } else {
            shapeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        public Builder mergeShape(org.tensorflow.framework.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0) &&
              shape_ != null &&
              shape_ != org.tensorflow.framework.TensorShapeProto.getDefaultInstance()) {
              getShapeBuilder().mergeFrom(value);
            } else {
              shape_ = value;
            }
          } else {
            shapeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        public Builder clearShape() {
          bitField0_ = (bitField0_ & ~0x00000002);
          shape_ = null;
          if (shapeBuilder_ != null) {
            shapeBuilder_.dispose();
            shapeBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        public org.tensorflow.framework.TensorShapeProto.Builder getShapeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getShapeFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
          if (shapeBuilder_ != null) {
            return shapeBuilder_.getMessageOrBuilder();
          } else {
            return shape_ == null ?
                org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
          }
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
            getShapeFieldBuilder() {
          if (shapeBuilder_ == null) {
            shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                    getShape(),
                    getParentForChildren(),
                    isClean());
            shape_ = null;
          }
          return shapeBuilder_;
        }

        private int kind_ = 0;
        /**
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
         * @return The enum numeric value on the wire for kind.
         */
        @java.lang.Override public int getKindValue() {
          return kind_;
        }
        /**
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
         * @param value The enum numeric value on the wire for kind to set.
         * @return This builder for chaining.
         */
        public Builder setKindValue(int value) {
          kind_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
         * @return The kind.
         */
        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind getKind() {
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind result = tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind.forNumber(kind_);
          return result == null ? tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind.UNRECOGNIZED : result;
        }
        /**
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
         * @param value The kind to set.
         * @return This builder for chaining.
         */
        public Builder setKind(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Kind value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000004;
          kind_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.Kind kind = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearKind() {
          bitField0_ = (bitField0_ & ~0x00000004);
          kind_ = 0;
          onChanged();
          return this;
        }

        private xla.XlaData.OpSharding sharding_;
        private com.google.protobuf.SingleFieldBuilderV3<
            xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder> shardingBuilder_;
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         * @return Whether the sharding field is set.
         */
        public boolean hasSharding() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         * @return The sharding.
         */
        public xla.XlaData.OpSharding getSharding() {
          if (shardingBuilder_ == null) {
            return sharding_ == null ? xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
          } else {
            return shardingBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        public Builder setSharding(xla.XlaData.OpSharding value) {
          if (shardingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sharding_ = value;
          } else {
            shardingBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        public Builder setSharding(
            xla.XlaData.OpSharding.Builder builderForValue) {
          if (shardingBuilder_ == null) {
            sharding_ = builderForValue.build();
          } else {
            shardingBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        public Builder mergeSharding(xla.XlaData.OpSharding value) {
          if (shardingBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              sharding_ != null &&
              sharding_ != xla.XlaData.OpSharding.getDefaultInstance()) {
              getShardingBuilder().mergeFrom(value);
            } else {
              sharding_ = value;
            }
          } else {
            shardingBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        public Builder clearSharding() {
          bitField0_ = (bitField0_ & ~0x00000008);
          sharding_ = null;
          if (shardingBuilder_ != null) {
            shardingBuilder_.dispose();
            shardingBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        public xla.XlaData.OpSharding.Builder getShardingBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getShardingFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        public xla.XlaData.OpShardingOrBuilder getShardingOrBuilder() {
          if (shardingBuilder_ != null) {
            return shardingBuilder_.getMessageOrBuilder();
          } else {
            return sharding_ == null ?
                xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
          }
        }
        /**
         * <pre>
         * The cross-core sharding of this input within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder> 
            getShardingFieldBuilder() {
          if (shardingBuilder_ == null) {
            shardingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder>(
                    getSharding(),
                    getParentForChildren(),
                    isClean());
            sharding_ = null;
          }
          return shardingBuilder_;
        }

        private boolean isSameDataAcrossReplicas_ ;
        /**
         * <pre>
         * Whether this argument will receive the same data across all replicas.
         * </pre>
         *
         * <code>bool is_same_data_across_replicas = 5;</code>
         * @return The isSameDataAcrossReplicas.
         */
        @java.lang.Override
        public boolean getIsSameDataAcrossReplicas() {
          return isSameDataAcrossReplicas_;
        }
        /**
         * <pre>
         * Whether this argument will receive the same data across all replicas.
         * </pre>
         *
         * <code>bool is_same_data_across_replicas = 5;</code>
         * @param value The isSameDataAcrossReplicas to set.
         * @return This builder for chaining.
         */
        public Builder setIsSameDataAcrossReplicas(boolean value) {
          
          isSameDataAcrossReplicas_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether this argument will receive the same data across all replicas.
         * </pre>
         *
         * <code>bool is_same_data_across_replicas = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsSameDataAcrossReplicas() {
          bitField0_ = (bitField0_ & ~0x00000010);
          isSameDataAcrossReplicas_ = false;
          onChanged();
          return this;
        }

        private int enableXlaSharding_ = 0;
        /**
         * <pre>
         * Whether to allow XLA to produce separate programs to shard/unshard this
         * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
         * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
         * a variable, and retval_index_for_sharding must be specified for the
         * corresponding updated value.
         * </pre>
         *
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
         * @return The enum numeric value on the wire for enableXlaSharding.
         */
        @java.lang.Override public int getEnableXlaShardingValue() {
          return enableXlaSharding_;
        }
        /**
         * <pre>
         * Whether to allow XLA to produce separate programs to shard/unshard this
         * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
         * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
         * a variable, and retval_index_for_sharding must be specified for the
         * corresponding updated value.
         * </pre>
         *
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
         * @param value The enum numeric value on the wire for enableXlaSharding to set.
         * @return This builder for chaining.
         */
        public Builder setEnableXlaShardingValue(int value) {
          enableXlaSharding_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether to allow XLA to produce separate programs to shard/unshard this
         * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
         * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
         * a variable, and retval_index_for_sharding must be specified for the
         * corresponding updated value.
         * </pre>
         *
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
         * @return The enableXlaSharding.
         */
        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding getEnableXlaSharding() {
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding result = tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding.forNumber(enableXlaSharding_);
          return result == null ? tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * Whether to allow XLA to produce separate programs to shard/unshard this
         * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
         * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
         * a variable, and retval_index_for_sharding must be specified for the
         * corresponding updated value.
         * </pre>
         *
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
         * @param value The enableXlaSharding to set.
         * @return This builder for chaining.
         */
        public Builder setEnableXlaSharding(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.EnableXlaSharding value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          enableXlaSharding_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether to allow XLA to produce separate programs to shard/unshard this
         * argument. Requires this arg to be an on-device Kind::VARIABLE, or a
         * Kind::PARAMETER. For Kind::PARAMETER, it represents the initial value of
         * a variable, and retval_index_for_sharding must be specified for the
         * corresponding updated value.
         * </pre>
         *
         * <code>.tensorflow.tpu.TPUCompileMetadataProto.Arg.EnableXlaSharding enable_xla_sharding = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearEnableXlaSharding() {
          bitField0_ = (bitField0_ & ~0x00000020);
          enableXlaSharding_ = 0;
          onChanged();
          return this;
        }

        private int retvalIndexForSharding_ ;
        /**
         * <pre>
         * If XLA sharding is allowed on a Kind::PARAMETER, this field is used to
         * specify the corresponding updated value in the return values. Use -1 for
         * variables that are not updated.
         * </pre>
         *
         * <code>int32 retval_index_for_sharding = 8;</code>
         * @return The retvalIndexForSharding.
         */
        @java.lang.Override
        public int getRetvalIndexForSharding() {
          return retvalIndexForSharding_;
        }
        /**
         * <pre>
         * If XLA sharding is allowed on a Kind::PARAMETER, this field is used to
         * specify the corresponding updated value in the return values. Use -1 for
         * variables that are not updated.
         * </pre>
         *
         * <code>int32 retval_index_for_sharding = 8;</code>
         * @param value The retvalIndexForSharding to set.
         * @return This builder for chaining.
         */
        public Builder setRetvalIndexForSharding(int value) {
          
          retvalIndexForSharding_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If XLA sharding is allowed on a Kind::PARAMETER, this field is used to
         * specify the corresponding updated value in the return values. Use -1 for
         * variables that are not updated.
         * </pre>
         *
         * <code>int32 retval_index_for_sharding = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearRetvalIndexForSharding() {
          bitField0_ = (bitField0_ & ~0x00000040);
          retvalIndexForSharding_ = 0;
          onChanged();
          return this;
        }

        private boolean fastMem_ ;
        /**
         * <pre>
         * Whether this argument is placed on fast memory or not.
         * </pre>
         *
         * <code>bool fast_mem = 7;</code>
         * @return The fastMem.
         */
        @java.lang.Override
        public boolean getFastMem() {
          return fastMem_;
        }
        /**
         * <pre>
         * Whether this argument is placed on fast memory or not.
         * </pre>
         *
         * <code>bool fast_mem = 7;</code>
         * @param value The fastMem to set.
         * @return This builder for chaining.
         */
        public Builder setFastMem(boolean value) {
          
          fastMem_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether this argument is placed on fast memory or not.
         * </pre>
         *
         * <code>bool fast_mem = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearFastMem() {
          bitField0_ = (bitField0_ & ~0x00000080);
          fastMem_ = false;
          onChanged();
          return this;
        }

        private boolean unrestrictedLayout_ ;
        /**
         * <pre>
         * Whether to let XLA to decide the layout during compilation, as opposed to
         * using a fixed layout determined by the shape.
         * </pre>
         *
         * <code>bool unrestricted_layout = 9;</code>
         * @return The unrestrictedLayout.
         */
        @java.lang.Override
        public boolean getUnrestrictedLayout() {
          return unrestrictedLayout_;
        }
        /**
         * <pre>
         * Whether to let XLA to decide the layout during compilation, as opposed to
         * using a fixed layout determined by the shape.
         * </pre>
         *
         * <code>bool unrestricted_layout = 9;</code>
         * @param value The unrestrictedLayout to set.
         * @return This builder for chaining.
         */
        public Builder setUnrestrictedLayout(boolean value) {
          
          unrestrictedLayout_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether to let XLA to decide the layout during compilation, as opposed to
         * using a fixed layout determined by the shape.
         * </pre>
         *
         * <code>bool unrestricted_layout = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearUnrestrictedLayout() {
          bitField0_ = (bitField0_ & ~0x00000100);
          unrestrictedLayout_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the node that the arg comes from.
         * </pre>
         *
         * <code>string name = 10;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the node that the arg comes from.
         * </pre>
         *
         * <code>string name = 10;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the node that the arg comes from.
         * </pre>
         *
         * <code>string name = 10;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the node that the arg comes from.
         * </pre>
         *
         * <code>string name = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the node that the arg comes from.
         * </pre>
         *
         * <code>string name = 10;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          name_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }

        private boolean requiresXlaBroadcast_ ;
        /**
         * <pre>
         * Whether to use XLA collectives to broadcast this parameter to all
         * replicas, instead of using TensorFlow Send/Recv among the tasks.
         * </pre>
         *
         * <code>bool requires_xla_broadcast = 11;</code>
         * @return The requiresXlaBroadcast.
         */
        @java.lang.Override
        public boolean getRequiresXlaBroadcast() {
          return requiresXlaBroadcast_;
        }
        /**
         * <pre>
         * Whether to use XLA collectives to broadcast this parameter to all
         * replicas, instead of using TensorFlow Send/Recv among the tasks.
         * </pre>
         *
         * <code>bool requires_xla_broadcast = 11;</code>
         * @param value The requiresXlaBroadcast to set.
         * @return This builder for chaining.
         */
        public Builder setRequiresXlaBroadcast(boolean value) {
          
          requiresXlaBroadcast_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Whether to use XLA collectives to broadcast this parameter to all
         * replicas, instead of using TensorFlow Send/Recv among the tasks.
         * </pre>
         *
         * <code>bool requires_xla_broadcast = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearRequiresXlaBroadcast() {
          bitField0_ = (bitField0_ & ~0x00000400);
          requiresXlaBroadcast_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUCompileMetadataProto.Arg)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileMetadataProto.Arg)
      private static final tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg();
      }

      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Arg>
          PARSER = new com.google.protobuf.AbstractParser<Arg>() {
        @java.lang.Override
        public Arg parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Arg> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Arg> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RetvalOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUCompileMetadataProto.Retval)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The cross-core sharding of this return value within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 1;</code>
       * @return Whether the sharding field is set.
       */
      boolean hasSharding();
      /**
       * <pre>
       * The cross-core sharding of this return value within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 1;</code>
       * @return The sharding.
       */
      xla.XlaData.OpSharding getSharding();
      /**
       * <pre>
       * The cross-core sharding of this return value within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 1;</code>
       */
      xla.XlaData.OpShardingOrBuilder getShardingOrBuilder();
    }
    /**
     * <pre>
     * Description of the return values from a computation.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tpu.TPUCompileMetadataProto.Retval}
     */
    public static final class Retval extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUCompileMetadataProto.Retval)
        RetvalOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Retval.newBuilder() to construct.
      private Retval(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Retval() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Retval();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.class, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder.class);
      }

      public static final int SHARDING_FIELD_NUMBER = 1;
      private xla.XlaData.OpSharding sharding_;
      /**
       * <pre>
       * The cross-core sharding of this return value within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 1;</code>
       * @return Whether the sharding field is set.
       */
      @java.lang.Override
      public boolean hasSharding() {
        return sharding_ != null;
      }
      /**
       * <pre>
       * The cross-core sharding of this return value within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 1;</code>
       * @return The sharding.
       */
      @java.lang.Override
      public xla.XlaData.OpSharding getSharding() {
        return sharding_ == null ? xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
      }
      /**
       * <pre>
       * The cross-core sharding of this return value within each replica, e.g.,
       * assigning to one core, or replicate across all cores.
       * </pre>
       *
       * <code>.xla.OpSharding sharding = 1;</code>
       */
      @java.lang.Override
      public xla.XlaData.OpShardingOrBuilder getShardingOrBuilder() {
        return sharding_ == null ? xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sharding_ != null) {
          output.writeMessage(1, getSharding());
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sharding_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSharding());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval)) {
          return super.equals(obj);
        }
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval other = (tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval) obj;

        if (hasSharding() != other.hasSharding()) return false;
        if (hasSharding()) {
          if (!getSharding()
              .equals(other.getSharding())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSharding()) {
          hash = (37 * hash) + SHARDING_FIELD_NUMBER;
          hash = (53 * hash) + getSharding().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Description of the return values from a computation.
       * </pre>
       *
       * Protobuf type {@code tensorflow.tpu.TPUCompileMetadataProto.Retval}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUCompileMetadataProto.Retval)
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.class, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder.class);
        }

        // Construct using tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          sharding_ = null;
          if (shardingBuilder_ != null) {
            shardingBuilder_.dispose();
            shardingBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_descriptor;
        }

        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval getDefaultInstanceForType() {
          return tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.getDefaultInstance();
        }

        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval build() {
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval buildPartial() {
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval result = new tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.sharding_ = shardingBuilder_ == null
                ? sharding_
                : shardingBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval) {
            return mergeFrom((tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval other) {
          if (other == tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.getDefaultInstance()) return this;
          if (other.hasSharding()) {
            mergeSharding(other.getSharding());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getShardingFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private xla.XlaData.OpSharding sharding_;
        private com.google.protobuf.SingleFieldBuilderV3<
            xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder> shardingBuilder_;
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         * @return Whether the sharding field is set.
         */
        public boolean hasSharding() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         * @return The sharding.
         */
        public xla.XlaData.OpSharding getSharding() {
          if (shardingBuilder_ == null) {
            return sharding_ == null ? xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
          } else {
            return shardingBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        public Builder setSharding(xla.XlaData.OpSharding value) {
          if (shardingBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sharding_ = value;
          } else {
            shardingBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        public Builder setSharding(
            xla.XlaData.OpSharding.Builder builderForValue) {
          if (shardingBuilder_ == null) {
            sharding_ = builderForValue.build();
          } else {
            shardingBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        public Builder mergeSharding(xla.XlaData.OpSharding value) {
          if (shardingBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              sharding_ != null &&
              sharding_ != xla.XlaData.OpSharding.getDefaultInstance()) {
              getShardingBuilder().mergeFrom(value);
            } else {
              sharding_ = value;
            }
          } else {
            shardingBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        public Builder clearSharding() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sharding_ = null;
          if (shardingBuilder_ != null) {
            shardingBuilder_.dispose();
            shardingBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        public xla.XlaData.OpSharding.Builder getShardingBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getShardingFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        public xla.XlaData.OpShardingOrBuilder getShardingOrBuilder() {
          if (shardingBuilder_ != null) {
            return shardingBuilder_.getMessageOrBuilder();
          } else {
            return sharding_ == null ?
                xla.XlaData.OpSharding.getDefaultInstance() : sharding_;
          }
        }
        /**
         * <pre>
         * The cross-core sharding of this return value within each replica, e.g.,
         * assigning to one core, or replicate across all cores.
         * </pre>
         *
         * <code>.xla.OpSharding sharding = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder> 
            getShardingFieldBuilder() {
          if (shardingBuilder_ == null) {
            shardingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder>(
                    getSharding(),
                    getParentForChildren(),
                    isClean());
            sharding_ = null;
          }
          return shardingBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUCompileMetadataProto.Retval)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileMetadataProto.Retval)
      private static final tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval();
      }

      public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Retval>
          PARSER = new com.google.protobuf.AbstractParser<Retval>() {
        @java.lang.Override
        public Retval parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Retval> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Retval> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ARGS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg> args_;
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg> getArgsList() {
      return args_;
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder> 
        getArgsOrBuilderList() {
      return args_;
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    @java.lang.Override
    public int getArgsCount() {
      return args_.size();
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    @java.lang.Override
    public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg getArgs(int index) {
      return args_.get(index);
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
     */
    @java.lang.Override
    public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder getArgsOrBuilder(
        int index) {
      return args_.get(index);
    }

    public static final int RETVALS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval> retvals_;
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval> getRetvalsList() {
      return retvals_;
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder> 
        getRetvalsOrBuilderList() {
      return retvals_;
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    @java.lang.Override
    public int getRetvalsCount() {
      return retvals_.size();
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    @java.lang.Override
    public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval getRetvals(int index) {
      return retvals_.get(index);
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
     */
    @java.lang.Override
    public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder getRetvalsOrBuilder(
        int index) {
      return retvals_.get(index);
    }

    public static final int NUM_REPLICAS_FIELD_NUMBER = 3;
    private int numReplicas_ = 0;
    /**
     * <pre>
     * Number of replicas of the computation and number of cores in each replica.
     * TODO(b/140721404): it may not be necessary to state the number of cores per
     * replica here. Reconsider when replicated model-parallelism is implemented
     * in XLA.
     * </pre>
     *
     * <code>int32 num_replicas = 3;</code>
     * @return The numReplicas.
     */
    @java.lang.Override
    public int getNumReplicas() {
      return numReplicas_;
    }

    public static final int NUM_CORES_PER_REPLICA_FIELD_NUMBER = 4;
    private int numCoresPerReplica_ = 0;
    /**
     * <code>int32 num_cores_per_replica = 4;</code>
     * @return The numCoresPerReplica.
     */
    @java.lang.Override
    public int getNumCoresPerReplica() {
      return numCoresPerReplica_;
    }

    public static final int DEVICE_ASSIGNMENT_FIELD_NUMBER = 8;
    private xla.XlaData.DeviceAssignmentProto deviceAssignment_;
    /**
     * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
     * @return Whether the deviceAssignment field is set.
     */
    @java.lang.Override
    public boolean hasDeviceAssignment() {
      return deviceAssignment_ != null;
    }
    /**
     * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
     * @return The deviceAssignment.
     */
    @java.lang.Override
    public xla.XlaData.DeviceAssignmentProto getDeviceAssignment() {
      return deviceAssignment_ == null ? xla.XlaData.DeviceAssignmentProto.getDefaultInstance() : deviceAssignment_;
    }
    /**
     * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
     */
    @java.lang.Override
    public xla.XlaData.DeviceAssignmentProtoOrBuilder getDeviceAssignmentOrBuilder() {
      return deviceAssignment_ == null ? xla.XlaData.DeviceAssignmentProto.getDefaultInstance() : deviceAssignment_;
    }

    public static final int FUNCTION_LIBRARY_FINGERPRINT_FIELD_NUMBER = 6;
    private long functionLibraryFingerprint_ = 0L;
    /**
     * <pre>
     * A fingerprint of the function library. Ensures that any functions called
     * by the computation have matching definitions.
     * </pre>
     *
     * <code>uint64 function_library_fingerprint = 6;</code>
     * @return The functionLibraryFingerprint.
     */
    @java.lang.Override
    public long getFunctionLibraryFingerprint() {
      return functionLibraryFingerprint_;
    }

    public static final int SESSION_HANDLE_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sessionHandle_ = "";
    /**
     * <pre>
     * Unique session identifier. Can be empty.
     * </pre>
     *
     * <code>string session_handle = 9;</code>
     * @return The sessionHandle.
     */
    @java.lang.Override
    public java.lang.String getSessionHandle() {
      java.lang.Object ref = sessionHandle_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionHandle_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique session identifier. Can be empty.
     * </pre>
     *
     * <code>string session_handle = 9;</code>
     * @return The bytes for sessionHandle.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSessionHandleBytes() {
      java.lang.Object ref = sessionHandle_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GUARANTEED_CONST_FINGERPRINT_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private volatile java.lang.Object guaranteedConstFingerprint_ = "";
    /**
     * <pre>
     * Fingerprint of guaranteed_const value. The fingerprint computation inside
     * tpu_compile_op may be slow. The computation can be avoided by setting the
     * fingerprint value here.
     * </pre>
     *
     * <code>string guaranteed_const_fingerprint = 10;</code>
     * @return The guaranteedConstFingerprint.
     */
    @java.lang.Override
    public java.lang.String getGuaranteedConstFingerprint() {
      java.lang.Object ref = guaranteedConstFingerprint_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        guaranteedConstFingerprint_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Fingerprint of guaranteed_const value. The fingerprint computation inside
     * tpu_compile_op may be slow. The computation can be avoided by setting the
     * fingerprint value here.
     * </pre>
     *
     * <code>string guaranteed_const_fingerprint = 10;</code>
     * @return The bytes for guaranteedConstFingerprint.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGuaranteedConstFingerprintBytes() {
      java.lang.Object ref = guaranteedConstFingerprint_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        guaranteedConstFingerprint_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PADDING_MAPS_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<tensorflow.tpu.DynamicPadding.PaddingMap> paddingMaps_;
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.tpu.DynamicPadding.PaddingMap> getPaddingMapsList() {
      return paddingMaps_;
    }
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder> 
        getPaddingMapsOrBuilderList() {
      return paddingMaps_;
    }
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    @java.lang.Override
    public int getPaddingMapsCount() {
      return paddingMaps_.size();
    }
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    @java.lang.Override
    public tensorflow.tpu.DynamicPadding.PaddingMap getPaddingMaps(int index) {
      return paddingMaps_.get(index);
    }
    /**
     * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
     */
    @java.lang.Override
    public tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder getPaddingMapsOrBuilder(
        int index) {
      return paddingMaps_.get(index);
    }

    public static final int STEP_MARKER_LOCATION_FIELD_NUMBER = 12;
    private int stepMarkerLocation_ = 0;
    /**
     * <pre>
     * The location of step markers that XLA compile will instrument.
     * </pre>
     *
     * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
     * @return The enum numeric value on the wire for stepMarkerLocation.
     */
    @java.lang.Override public int getStepMarkerLocationValue() {
      return stepMarkerLocation_;
    }
    /**
     * <pre>
     * The location of step markers that XLA compile will instrument.
     * </pre>
     *
     * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
     * @return The stepMarkerLocation.
     */
    @java.lang.Override public xla.Xla.DebugOptions.StepMarkerLocation getStepMarkerLocation() {
      xla.Xla.DebugOptions.StepMarkerLocation result = xla.Xla.DebugOptions.StepMarkerLocation.forNumber(stepMarkerLocation_);
      return result == null ? xla.Xla.DebugOptions.StepMarkerLocation.UNRECOGNIZED : result;
    }

    public static final int XLA_FUSION_AUTOTUNER_THRESH_FIELD_NUMBER = 13;
    private long xlaFusionAutotunerThresh_ = 0L;
    /**
     * <pre>
     * Minimum number of batches run through the XLA graph before XLA fusion
     * autotuner is enabled. Default value of zero disables the autotuner.
     * The XLA fusion autotuner can improve performance by executing a heuristic
     * search on the compiler parameters.
     * </pre>
     *
     * <code>int64 xla_fusion_autotuner_thresh = 13;</code>
     * @return The xlaFusionAutotunerThresh.
     */
    @java.lang.Override
    public long getXlaFusionAutotunerThresh() {
      return xlaFusionAutotunerThresh_;
    }

    public static final int ENABLE_AUTOMATIC_MODEL_PARALLELISM_FIELD_NUMBER = 14;
    private boolean enableAutomaticModelParallelism_ = false;
    /**
     * <pre>
     * Enables TPU compiler to add partitioning policies for inputs/outputs to
     * the XLA computation for model parallelism.
     * </pre>
     *
     * <code>bool enable_automatic_model_parallelism = 14;</code>
     * @return The enableAutomaticModelParallelism.
     */
    @java.lang.Override
    public boolean getEnableAutomaticModelParallelism() {
      return enableAutomaticModelParallelism_;
    }

    public static final int USE_SPMD_FOR_XLA_PARTITIONING_FIELD_NUMBER = 15;
    private boolean useSpmdForXlaPartitioning_ = false;
    /**
     * <pre>
     * Whether to use XLA's SPMD or MPMD partitioner when compiler partitioning is
     * requested.
     * </pre>
     *
     * <code>bool use_spmd_for_xla_partitioning = 15;</code>
     * @return The useSpmdForXlaPartitioning.
     */
    @java.lang.Override
    public boolean getUseSpmdForXlaPartitioning() {
      return useSpmdForXlaPartitioning_;
    }

    public static final int MLIR_FINGERPRINT_FIELD_NUMBER = 17;
    private long mlirFingerprint_ = 0L;
    /**
     * <pre>
     * A fingerprint generated by hashing the MLIR module content.
     * </pre>
     *
     * <code>uint64 mlir_fingerprint = 17;</code>
     * @return The mlirFingerprint.
     */
    @java.lang.Override
    public long getMlirFingerprint() {
      return mlirFingerprint_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < args_.size(); i++) {
        output.writeMessage(1, args_.get(i));
      }
      for (int i = 0; i < retvals_.size(); i++) {
        output.writeMessage(2, retvals_.get(i));
      }
      if (numReplicas_ != 0) {
        output.writeInt32(3, numReplicas_);
      }
      if (numCoresPerReplica_ != 0) {
        output.writeInt32(4, numCoresPerReplica_);
      }
      if (functionLibraryFingerprint_ != 0L) {
        output.writeUInt64(6, functionLibraryFingerprint_);
      }
      if (deviceAssignment_ != null) {
        output.writeMessage(8, getDeviceAssignment());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionHandle_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, sessionHandle_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(guaranteedConstFingerprint_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, guaranteedConstFingerprint_);
      }
      for (int i = 0; i < paddingMaps_.size(); i++) {
        output.writeMessage(11, paddingMaps_.get(i));
      }
      if (stepMarkerLocation_ != xla.Xla.DebugOptions.StepMarkerLocation.STEP_MARK_AT_ENTRY.getNumber()) {
        output.writeEnum(12, stepMarkerLocation_);
      }
      if (xlaFusionAutotunerThresh_ != 0L) {
        output.writeInt64(13, xlaFusionAutotunerThresh_);
      }
      if (enableAutomaticModelParallelism_ != false) {
        output.writeBool(14, enableAutomaticModelParallelism_);
      }
      if (useSpmdForXlaPartitioning_ != false) {
        output.writeBool(15, useSpmdForXlaPartitioning_);
      }
      if (mlirFingerprint_ != 0L) {
        output.writeUInt64(17, mlirFingerprint_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < args_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, args_.get(i));
      }
      for (int i = 0; i < retvals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, retvals_.get(i));
      }
      if (numReplicas_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numReplicas_);
      }
      if (numCoresPerReplica_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, numCoresPerReplica_);
      }
      if (functionLibraryFingerprint_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, functionLibraryFingerprint_);
      }
      if (deviceAssignment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getDeviceAssignment());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sessionHandle_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, sessionHandle_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(guaranteedConstFingerprint_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, guaranteedConstFingerprint_);
      }
      for (int i = 0; i < paddingMaps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, paddingMaps_.get(i));
      }
      if (stepMarkerLocation_ != xla.Xla.DebugOptions.StepMarkerLocation.STEP_MARK_AT_ENTRY.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, stepMarkerLocation_);
      }
      if (xlaFusionAutotunerThresh_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, xlaFusionAutotunerThresh_);
      }
      if (enableAutomaticModelParallelism_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, enableAutomaticModelParallelism_);
      }
      if (useSpmdForXlaPartitioning_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, useSpmdForXlaPartitioning_);
      }
      if (mlirFingerprint_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, mlirFingerprint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto)) {
        return super.equals(obj);
      }
      tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto other = (tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto) obj;

      if (!getArgsList()
          .equals(other.getArgsList())) return false;
      if (!getRetvalsList()
          .equals(other.getRetvalsList())) return false;
      if (getNumReplicas()
          != other.getNumReplicas()) return false;
      if (getNumCoresPerReplica()
          != other.getNumCoresPerReplica()) return false;
      if (hasDeviceAssignment() != other.hasDeviceAssignment()) return false;
      if (hasDeviceAssignment()) {
        if (!getDeviceAssignment()
            .equals(other.getDeviceAssignment())) return false;
      }
      if (getFunctionLibraryFingerprint()
          != other.getFunctionLibraryFingerprint()) return false;
      if (!getSessionHandle()
          .equals(other.getSessionHandle())) return false;
      if (!getGuaranteedConstFingerprint()
          .equals(other.getGuaranteedConstFingerprint())) return false;
      if (!getPaddingMapsList()
          .equals(other.getPaddingMapsList())) return false;
      if (stepMarkerLocation_ != other.stepMarkerLocation_) return false;
      if (getXlaFusionAutotunerThresh()
          != other.getXlaFusionAutotunerThresh()) return false;
      if (getEnableAutomaticModelParallelism()
          != other.getEnableAutomaticModelParallelism()) return false;
      if (getUseSpmdForXlaPartitioning()
          != other.getUseSpmdForXlaPartitioning()) return false;
      if (getMlirFingerprint()
          != other.getMlirFingerprint()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getArgsCount() > 0) {
        hash = (37 * hash) + ARGS_FIELD_NUMBER;
        hash = (53 * hash) + getArgsList().hashCode();
      }
      if (getRetvalsCount() > 0) {
        hash = (37 * hash) + RETVALS_FIELD_NUMBER;
        hash = (53 * hash) + getRetvalsList().hashCode();
      }
      hash = (37 * hash) + NUM_REPLICAS_FIELD_NUMBER;
      hash = (53 * hash) + getNumReplicas();
      hash = (37 * hash) + NUM_CORES_PER_REPLICA_FIELD_NUMBER;
      hash = (53 * hash) + getNumCoresPerReplica();
      if (hasDeviceAssignment()) {
        hash = (37 * hash) + DEVICE_ASSIGNMENT_FIELD_NUMBER;
        hash = (53 * hash) + getDeviceAssignment().hashCode();
      }
      hash = (37 * hash) + FUNCTION_LIBRARY_FINGERPRINT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFunctionLibraryFingerprint());
      hash = (37 * hash) + SESSION_HANDLE_FIELD_NUMBER;
      hash = (53 * hash) + getSessionHandle().hashCode();
      hash = (37 * hash) + GUARANTEED_CONST_FINGERPRINT_FIELD_NUMBER;
      hash = (53 * hash) + getGuaranteedConstFingerprint().hashCode();
      if (getPaddingMapsCount() > 0) {
        hash = (37 * hash) + PADDING_MAPS_FIELD_NUMBER;
        hash = (53 * hash) + getPaddingMapsList().hashCode();
      }
      hash = (37 * hash) + STEP_MARKER_LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + stepMarkerLocation_;
      hash = (37 * hash) + XLA_FUSION_AUTOTUNER_THRESH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getXlaFusionAutotunerThresh());
      hash = (37 * hash) + ENABLE_AUTOMATIC_MODEL_PARALLELISM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEnableAutomaticModelParallelism());
      hash = (37 * hash) + USE_SPMD_FOR_XLA_PARTITIONING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUseSpmdForXlaPartitioning());
      hash = (37 * hash) + MLIR_FINGERPRINT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMlirFingerprint());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This is an experimental proto used in the TF/XLA bridge to store metadata to
     * a compile op (e.g. _TPUCompileMlir).
     * TODO(lyandy): Deprecate proto once generic metadata proto is created.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tpu.TPUCompileMetadataProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUCompileMetadataProto)
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.class, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Builder.class);
      }

      // Construct using tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
        } else {
          args_ = null;
          argsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (retvalsBuilder_ == null) {
          retvals_ = java.util.Collections.emptyList();
        } else {
          retvals_ = null;
          retvalsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        numReplicas_ = 0;
        numCoresPerReplica_ = 0;
        deviceAssignment_ = null;
        if (deviceAssignmentBuilder_ != null) {
          deviceAssignmentBuilder_.dispose();
          deviceAssignmentBuilder_ = null;
        }
        functionLibraryFingerprint_ = 0L;
        sessionHandle_ = "";
        guaranteedConstFingerprint_ = "";
        if (paddingMapsBuilder_ == null) {
          paddingMaps_ = java.util.Collections.emptyList();
        } else {
          paddingMaps_ = null;
          paddingMapsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        stepMarkerLocation_ = 0;
        xlaFusionAutotunerThresh_ = 0L;
        enableAutomaticModelParallelism_ = false;
        useSpmdForXlaPartitioning_ = false;
        mlirFingerprint_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tpu.CompileMetadata.internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor;
      }

      @java.lang.Override
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto getDefaultInstanceForType() {
        return tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto build() {
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto buildPartial() {
        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto result = new tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto result) {
        if (argsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            args_ = java.util.Collections.unmodifiableList(args_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.args_ = args_;
        } else {
          result.args_ = argsBuilder_.build();
        }
        if (retvalsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            retvals_ = java.util.Collections.unmodifiableList(retvals_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.retvals_ = retvals_;
        } else {
          result.retvals_ = retvalsBuilder_.build();
        }
        if (paddingMapsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            paddingMaps_ = java.util.Collections.unmodifiableList(paddingMaps_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.paddingMaps_ = paddingMaps_;
        } else {
          result.paddingMaps_ = paddingMapsBuilder_.build();
        }
      }

      private void buildPartial0(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.numReplicas_ = numReplicas_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.numCoresPerReplica_ = numCoresPerReplica_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.deviceAssignment_ = deviceAssignmentBuilder_ == null
              ? deviceAssignment_
              : deviceAssignmentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.functionLibraryFingerprint_ = functionLibraryFingerprint_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.sessionHandle_ = sessionHandle_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.guaranteedConstFingerprint_ = guaranteedConstFingerprint_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.stepMarkerLocation_ = stepMarkerLocation_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.xlaFusionAutotunerThresh_ = xlaFusionAutotunerThresh_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.enableAutomaticModelParallelism_ = enableAutomaticModelParallelism_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.useSpmdForXlaPartitioning_ = useSpmdForXlaPartitioning_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.mlirFingerprint_ = mlirFingerprint_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto) {
          return mergeFrom((tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto other) {
        if (other == tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.getDefaultInstance()) return this;
        if (argsBuilder_ == null) {
          if (!other.args_.isEmpty()) {
            if (args_.isEmpty()) {
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureArgsIsMutable();
              args_.addAll(other.args_);
            }
            onChanged();
          }
        } else {
          if (!other.args_.isEmpty()) {
            if (argsBuilder_.isEmpty()) {
              argsBuilder_.dispose();
              argsBuilder_ = null;
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000001);
              argsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getArgsFieldBuilder() : null;
            } else {
              argsBuilder_.addAllMessages(other.args_);
            }
          }
        }
        if (retvalsBuilder_ == null) {
          if (!other.retvals_.isEmpty()) {
            if (retvals_.isEmpty()) {
              retvals_ = other.retvals_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRetvalsIsMutable();
              retvals_.addAll(other.retvals_);
            }
            onChanged();
          }
        } else {
          if (!other.retvals_.isEmpty()) {
            if (retvalsBuilder_.isEmpty()) {
              retvalsBuilder_.dispose();
              retvalsBuilder_ = null;
              retvals_ = other.retvals_;
              bitField0_ = (bitField0_ & ~0x00000002);
              retvalsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRetvalsFieldBuilder() : null;
            } else {
              retvalsBuilder_.addAllMessages(other.retvals_);
            }
          }
        }
        if (other.getNumReplicas() != 0) {
          setNumReplicas(other.getNumReplicas());
        }
        if (other.getNumCoresPerReplica() != 0) {
          setNumCoresPerReplica(other.getNumCoresPerReplica());
        }
        if (other.hasDeviceAssignment()) {
          mergeDeviceAssignment(other.getDeviceAssignment());
        }
        if (other.getFunctionLibraryFingerprint() != 0L) {
          setFunctionLibraryFingerprint(other.getFunctionLibraryFingerprint());
        }
        if (!other.getSessionHandle().isEmpty()) {
          sessionHandle_ = other.sessionHandle_;
          bitField0_ |= 0x00000040;
          onChanged();
        }
        if (!other.getGuaranteedConstFingerprint().isEmpty()) {
          guaranteedConstFingerprint_ = other.guaranteedConstFingerprint_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (paddingMapsBuilder_ == null) {
          if (!other.paddingMaps_.isEmpty()) {
            if (paddingMaps_.isEmpty()) {
              paddingMaps_ = other.paddingMaps_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensurePaddingMapsIsMutable();
              paddingMaps_.addAll(other.paddingMaps_);
            }
            onChanged();
          }
        } else {
          if (!other.paddingMaps_.isEmpty()) {
            if (paddingMapsBuilder_.isEmpty()) {
              paddingMapsBuilder_.dispose();
              paddingMapsBuilder_ = null;
              paddingMaps_ = other.paddingMaps_;
              bitField0_ = (bitField0_ & ~0x00000100);
              paddingMapsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPaddingMapsFieldBuilder() : null;
            } else {
              paddingMapsBuilder_.addAllMessages(other.paddingMaps_);
            }
          }
        }
        if (other.stepMarkerLocation_ != 0) {
          setStepMarkerLocationValue(other.getStepMarkerLocationValue());
        }
        if (other.getXlaFusionAutotunerThresh() != 0L) {
          setXlaFusionAutotunerThresh(other.getXlaFusionAutotunerThresh());
        }
        if (other.getEnableAutomaticModelParallelism() != false) {
          setEnableAutomaticModelParallelism(other.getEnableAutomaticModelParallelism());
        }
        if (other.getUseSpmdForXlaPartitioning() != false) {
          setUseSpmdForXlaPartitioning(other.getUseSpmdForXlaPartitioning());
        }
        if (other.getMlirFingerprint() != 0L) {
          setMlirFingerprint(other.getMlirFingerprint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg m =
                    input.readMessage(
                        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.parser(),
                        extensionRegistry);
                if (argsBuilder_ == null) {
                  ensureArgsIsMutable();
                  args_.add(m);
                } else {
                  argsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval m =
                    input.readMessage(
                        tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.parser(),
                        extensionRegistry);
                if (retvalsBuilder_ == null) {
                  ensureRetvalsIsMutable();
                  retvals_.add(m);
                } else {
                  retvalsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 24: {
                numReplicas_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                numCoresPerReplica_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 48: {
                functionLibraryFingerprint_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 66: {
                input.readMessage(
                    getDeviceAssignmentFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 66
              case 74: {
                sessionHandle_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000040;
                break;
              } // case 74
              case 82: {
                guaranteedConstFingerprint_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000080;
                break;
              } // case 82
              case 90: {
                tensorflow.tpu.DynamicPadding.PaddingMap m =
                    input.readMessage(
                        tensorflow.tpu.DynamicPadding.PaddingMap.parser(),
                        extensionRegistry);
                if (paddingMapsBuilder_ == null) {
                  ensurePaddingMapsIsMutable();
                  paddingMaps_.add(m);
                } else {
                  paddingMapsBuilder_.addMessage(m);
                }
                break;
              } // case 90
              case 96: {
                stepMarkerLocation_ = input.readEnum();
                bitField0_ |= 0x00000200;
                break;
              } // case 96
              case 104: {
                xlaFusionAutotunerThresh_ = input.readInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 104
              case 112: {
                enableAutomaticModelParallelism_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 112
              case 120: {
                useSpmdForXlaPartitioning_ = input.readBool();
                bitField0_ |= 0x00001000;
                break;
              } // case 120
              case 136: {
                mlirFingerprint_ = input.readUInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 136
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg> args_ =
        java.util.Collections.emptyList();
      private void ensureArgsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          args_ = new java.util.ArrayList<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg>(args_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder> argsBuilder_;

      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg> getArgsList() {
        if (argsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(args_);
        } else {
          return argsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public int getArgsCount() {
        if (argsBuilder_ == null) {
          return args_.size();
        } else {
          return argsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg getArgs(int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);
        } else {
          return argsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder setArgs(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.set(index, value);
          onChanged();
        } else {
          argsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder setArgs(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.set(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder addArgs(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(value);
          onChanged();
        } else {
          argsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder addArgs(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(index, value);
          onChanged();
        } else {
          argsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder addArgs(
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder addArgs(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder addAllArgs(
          java.lang.Iterable<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg> values) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, args_);
          onChanged();
        } else {
          argsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder clearArgs() {
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          argsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public Builder removeArgs(int index) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.remove(index);
          onChanged();
        } else {
          argsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder getArgsBuilder(
          int index) {
        return getArgsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder getArgsOrBuilder(
          int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);  } else {
          return argsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public java.util.List<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder> 
           getArgsOrBuilderList() {
        if (argsBuilder_ != null) {
          return argsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(args_);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder addArgsBuilder() {
        return getArgsFieldBuilder().addBuilder(
            tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder addArgsBuilder(
          int index) {
        return getArgsFieldBuilder().addBuilder(
            index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Arg args = 1;</code>
       */
      public java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder> 
           getArgsBuilderList() {
        return getArgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder> 
          getArgsFieldBuilder() {
        if (argsBuilder_ == null) {
          argsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Arg.Builder, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.ArgOrBuilder>(
                  args_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        return argsBuilder_;
      }

      private java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval> retvals_ =
        java.util.Collections.emptyList();
      private void ensureRetvalsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          retvals_ = new java.util.ArrayList<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval>(retvals_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder> retvalsBuilder_;

      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval> getRetvalsList() {
        if (retvalsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(retvals_);
        } else {
          return retvalsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public int getRetvalsCount() {
        if (retvalsBuilder_ == null) {
          return retvals_.size();
        } else {
          return retvalsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval getRetvals(int index) {
        if (retvalsBuilder_ == null) {
          return retvals_.get(index);
        } else {
          return retvalsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder setRetvals(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval value) {
        if (retvalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRetvalsIsMutable();
          retvals_.set(index, value);
          onChanged();
        } else {
          retvalsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder setRetvals(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder builderForValue) {
        if (retvalsBuilder_ == null) {
          ensureRetvalsIsMutable();
          retvals_.set(index, builderForValue.build());
          onChanged();
        } else {
          retvalsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder addRetvals(tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval value) {
        if (retvalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRetvalsIsMutable();
          retvals_.add(value);
          onChanged();
        } else {
          retvalsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder addRetvals(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval value) {
        if (retvalsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRetvalsIsMutable();
          retvals_.add(index, value);
          onChanged();
        } else {
          retvalsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder addRetvals(
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder builderForValue) {
        if (retvalsBuilder_ == null) {
          ensureRetvalsIsMutable();
          retvals_.add(builderForValue.build());
          onChanged();
        } else {
          retvalsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder addRetvals(
          int index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder builderForValue) {
        if (retvalsBuilder_ == null) {
          ensureRetvalsIsMutable();
          retvals_.add(index, builderForValue.build());
          onChanged();
        } else {
          retvalsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder addAllRetvals(
          java.lang.Iterable<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval> values) {
        if (retvalsBuilder_ == null) {
          ensureRetvalsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, retvals_);
          onChanged();
        } else {
          retvalsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder clearRetvals() {
        if (retvalsBuilder_ == null) {
          retvals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          retvalsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public Builder removeRetvals(int index) {
        if (retvalsBuilder_ == null) {
          ensureRetvalsIsMutable();
          retvals_.remove(index);
          onChanged();
        } else {
          retvalsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder getRetvalsBuilder(
          int index) {
        return getRetvalsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder getRetvalsOrBuilder(
          int index) {
        if (retvalsBuilder_ == null) {
          return retvals_.get(index);  } else {
          return retvalsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public java.util.List<? extends tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder> 
           getRetvalsOrBuilderList() {
        if (retvalsBuilder_ != null) {
          return retvalsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(retvals_);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder addRetvalsBuilder() {
        return getRetvalsFieldBuilder().addBuilder(
            tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder addRetvalsBuilder(
          int index) {
        return getRetvalsFieldBuilder().addBuilder(
            index, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUCompileMetadataProto.Retval retvals = 2;</code>
       */
      public java.util.List<tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder> 
           getRetvalsBuilderList() {
        return getRetvalsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder> 
          getRetvalsFieldBuilder() {
        if (retvalsBuilder_ == null) {
          retvalsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.Retval.Builder, tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto.RetvalOrBuilder>(
                  retvals_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          retvals_ = null;
        }
        return retvalsBuilder_;
      }

      private int numReplicas_ ;
      /**
       * <pre>
       * Number of replicas of the computation and number of cores in each replica.
       * TODO(b/140721404): it may not be necessary to state the number of cores per
       * replica here. Reconsider when replicated model-parallelism is implemented
       * in XLA.
       * </pre>
       *
       * <code>int32 num_replicas = 3;</code>
       * @return The numReplicas.
       */
      @java.lang.Override
      public int getNumReplicas() {
        return numReplicas_;
      }
      /**
       * <pre>
       * Number of replicas of the computation and number of cores in each replica.
       * TODO(b/140721404): it may not be necessary to state the number of cores per
       * replica here. Reconsider when replicated model-parallelism is implemented
       * in XLA.
       * </pre>
       *
       * <code>int32 num_replicas = 3;</code>
       * @param value The numReplicas to set.
       * @return This builder for chaining.
       */
      public Builder setNumReplicas(int value) {
        
        numReplicas_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of replicas of the computation and number of cores in each replica.
       * TODO(b/140721404): it may not be necessary to state the number of cores per
       * replica here. Reconsider when replicated model-parallelism is implemented
       * in XLA.
       * </pre>
       *
       * <code>int32 num_replicas = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumReplicas() {
        bitField0_ = (bitField0_ & ~0x00000004);
        numReplicas_ = 0;
        onChanged();
        return this;
      }

      private int numCoresPerReplica_ ;
      /**
       * <code>int32 num_cores_per_replica = 4;</code>
       * @return The numCoresPerReplica.
       */
      @java.lang.Override
      public int getNumCoresPerReplica() {
        return numCoresPerReplica_;
      }
      /**
       * <code>int32 num_cores_per_replica = 4;</code>
       * @param value The numCoresPerReplica to set.
       * @return This builder for chaining.
       */
      public Builder setNumCoresPerReplica(int value) {
        
        numCoresPerReplica_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_cores_per_replica = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumCoresPerReplica() {
        bitField0_ = (bitField0_ & ~0x00000008);
        numCoresPerReplica_ = 0;
        onChanged();
        return this;
      }

      private xla.XlaData.DeviceAssignmentProto deviceAssignment_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.DeviceAssignmentProto, xla.XlaData.DeviceAssignmentProto.Builder, xla.XlaData.DeviceAssignmentProtoOrBuilder> deviceAssignmentBuilder_;
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       * @return Whether the deviceAssignment field is set.
       */
      public boolean hasDeviceAssignment() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       * @return The deviceAssignment.
       */
      public xla.XlaData.DeviceAssignmentProto getDeviceAssignment() {
        if (deviceAssignmentBuilder_ == null) {
          return deviceAssignment_ == null ? xla.XlaData.DeviceAssignmentProto.getDefaultInstance() : deviceAssignment_;
        } else {
          return deviceAssignmentBuilder_.getMessage();
        }
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      public Builder setDeviceAssignment(xla.XlaData.DeviceAssignmentProto value) {
        if (deviceAssignmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          deviceAssignment_ = value;
        } else {
          deviceAssignmentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      public Builder setDeviceAssignment(
          xla.XlaData.DeviceAssignmentProto.Builder builderForValue) {
        if (deviceAssignmentBuilder_ == null) {
          deviceAssignment_ = builderForValue.build();
        } else {
          deviceAssignmentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      public Builder mergeDeviceAssignment(xla.XlaData.DeviceAssignmentProto value) {
        if (deviceAssignmentBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            deviceAssignment_ != null &&
            deviceAssignment_ != xla.XlaData.DeviceAssignmentProto.getDefaultInstance()) {
            getDeviceAssignmentBuilder().mergeFrom(value);
          } else {
            deviceAssignment_ = value;
          }
        } else {
          deviceAssignmentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      public Builder clearDeviceAssignment() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceAssignment_ = null;
        if (deviceAssignmentBuilder_ != null) {
          deviceAssignmentBuilder_.dispose();
          deviceAssignmentBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      public xla.XlaData.DeviceAssignmentProto.Builder getDeviceAssignmentBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getDeviceAssignmentFieldBuilder().getBuilder();
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      public xla.XlaData.DeviceAssignmentProtoOrBuilder getDeviceAssignmentOrBuilder() {
        if (deviceAssignmentBuilder_ != null) {
          return deviceAssignmentBuilder_.getMessageOrBuilder();
        } else {
          return deviceAssignment_ == null ?
              xla.XlaData.DeviceAssignmentProto.getDefaultInstance() : deviceAssignment_;
        }
      }
      /**
       * <code>.xla.DeviceAssignmentProto device_assignment = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.DeviceAssignmentProto, xla.XlaData.DeviceAssignmentProto.Builder, xla.XlaData.DeviceAssignmentProtoOrBuilder> 
          getDeviceAssignmentFieldBuilder() {
        if (deviceAssignmentBuilder_ == null) {
          deviceAssignmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.DeviceAssignmentProto, xla.XlaData.DeviceAssignmentProto.Builder, xla.XlaData.DeviceAssignmentProtoOrBuilder>(
                  getDeviceAssignment(),
                  getParentForChildren(),
                  isClean());
          deviceAssignment_ = null;
        }
        return deviceAssignmentBuilder_;
      }

      private long functionLibraryFingerprint_ ;
      /**
       * <pre>
       * A fingerprint of the function library. Ensures that any functions called
       * by the computation have matching definitions.
       * </pre>
       *
       * <code>uint64 function_library_fingerprint = 6;</code>
       * @return The functionLibraryFingerprint.
       */
      @java.lang.Override
      public long getFunctionLibraryFingerprint() {
        return functionLibraryFingerprint_;
      }
      /**
       * <pre>
       * A fingerprint of the function library. Ensures that any functions called
       * by the computation have matching definitions.
       * </pre>
       *
       * <code>uint64 function_library_fingerprint = 6;</code>
       * @param value The functionLibraryFingerprint to set.
       * @return This builder for chaining.
       */
      public Builder setFunctionLibraryFingerprint(long value) {
        
        functionLibraryFingerprint_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A fingerprint of the function library. Ensures that any functions called
       * by the computation have matching definitions.
       * </pre>
       *
       * <code>uint64 function_library_fingerprint = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFunctionLibraryFingerprint() {
        bitField0_ = (bitField0_ & ~0x00000020);
        functionLibraryFingerprint_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object sessionHandle_ = "";
      /**
       * <pre>
       * Unique session identifier. Can be empty.
       * </pre>
       *
       * <code>string session_handle = 9;</code>
       * @return The sessionHandle.
       */
      public java.lang.String getSessionHandle() {
        java.lang.Object ref = sessionHandle_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sessionHandle_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique session identifier. Can be empty.
       * </pre>
       *
       * <code>string session_handle = 9;</code>
       * @return The bytes for sessionHandle.
       */
      public com.google.protobuf.ByteString
          getSessionHandleBytes() {
        java.lang.Object ref = sessionHandle_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sessionHandle_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique session identifier. Can be empty.
       * </pre>
       *
       * <code>string session_handle = 9;</code>
       * @param value The sessionHandle to set.
       * @return This builder for chaining.
       */
      public Builder setSessionHandle(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sessionHandle_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique session identifier. Can be empty.
       * </pre>
       *
       * <code>string session_handle = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSessionHandle() {
        sessionHandle_ = getDefaultInstance().getSessionHandle();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique session identifier. Can be empty.
       * </pre>
       *
       * <code>string session_handle = 9;</code>
       * @param value The bytes for sessionHandle to set.
       * @return This builder for chaining.
       */
      public Builder setSessionHandleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sessionHandle_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private java.lang.Object guaranteedConstFingerprint_ = "";
      /**
       * <pre>
       * Fingerprint of guaranteed_const value. The fingerprint computation inside
       * tpu_compile_op may be slow. The computation can be avoided by setting the
       * fingerprint value here.
       * </pre>
       *
       * <code>string guaranteed_const_fingerprint = 10;</code>
       * @return The guaranteedConstFingerprint.
       */
      public java.lang.String getGuaranteedConstFingerprint() {
        java.lang.Object ref = guaranteedConstFingerprint_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          guaranteedConstFingerprint_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fingerprint of guaranteed_const value. The fingerprint computation inside
       * tpu_compile_op may be slow. The computation can be avoided by setting the
       * fingerprint value here.
       * </pre>
       *
       * <code>string guaranteed_const_fingerprint = 10;</code>
       * @return The bytes for guaranteedConstFingerprint.
       */
      public com.google.protobuf.ByteString
          getGuaranteedConstFingerprintBytes() {
        java.lang.Object ref = guaranteedConstFingerprint_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          guaranteedConstFingerprint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fingerprint of guaranteed_const value. The fingerprint computation inside
       * tpu_compile_op may be slow. The computation can be avoided by setting the
       * fingerprint value here.
       * </pre>
       *
       * <code>string guaranteed_const_fingerprint = 10;</code>
       * @param value The guaranteedConstFingerprint to set.
       * @return This builder for chaining.
       */
      public Builder setGuaranteedConstFingerprint(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        guaranteedConstFingerprint_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fingerprint of guaranteed_const value. The fingerprint computation inside
       * tpu_compile_op may be slow. The computation can be avoided by setting the
       * fingerprint value here.
       * </pre>
       *
       * <code>string guaranteed_const_fingerprint = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearGuaranteedConstFingerprint() {
        guaranteedConstFingerprint_ = getDefaultInstance().getGuaranteedConstFingerprint();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fingerprint of guaranteed_const value. The fingerprint computation inside
       * tpu_compile_op may be slow. The computation can be avoided by setting the
       * fingerprint value here.
       * </pre>
       *
       * <code>string guaranteed_const_fingerprint = 10;</code>
       * @param value The bytes for guaranteedConstFingerprint to set.
       * @return This builder for chaining.
       */
      public Builder setGuaranteedConstFingerprintBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        guaranteedConstFingerprint_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private java.util.List<tensorflow.tpu.DynamicPadding.PaddingMap> paddingMaps_ =
        java.util.Collections.emptyList();
      private void ensurePaddingMapsIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          paddingMaps_ = new java.util.ArrayList<tensorflow.tpu.DynamicPadding.PaddingMap>(paddingMaps_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.DynamicPadding.PaddingMap, tensorflow.tpu.DynamicPadding.PaddingMap.Builder, tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder> paddingMapsBuilder_;

      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public java.util.List<tensorflow.tpu.DynamicPadding.PaddingMap> getPaddingMapsList() {
        if (paddingMapsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paddingMaps_);
        } else {
          return paddingMapsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public int getPaddingMapsCount() {
        if (paddingMapsBuilder_ == null) {
          return paddingMaps_.size();
        } else {
          return paddingMapsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public tensorflow.tpu.DynamicPadding.PaddingMap getPaddingMaps(int index) {
        if (paddingMapsBuilder_ == null) {
          return paddingMaps_.get(index);
        } else {
          return paddingMapsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder setPaddingMaps(
          int index, tensorflow.tpu.DynamicPadding.PaddingMap value) {
        if (paddingMapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePaddingMapsIsMutable();
          paddingMaps_.set(index, value);
          onChanged();
        } else {
          paddingMapsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder setPaddingMaps(
          int index, tensorflow.tpu.DynamicPadding.PaddingMap.Builder builderForValue) {
        if (paddingMapsBuilder_ == null) {
          ensurePaddingMapsIsMutable();
          paddingMaps_.set(index, builderForValue.build());
          onChanged();
        } else {
          paddingMapsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder addPaddingMaps(tensorflow.tpu.DynamicPadding.PaddingMap value) {
        if (paddingMapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePaddingMapsIsMutable();
          paddingMaps_.add(value);
          onChanged();
        } else {
          paddingMapsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder addPaddingMaps(
          int index, tensorflow.tpu.DynamicPadding.PaddingMap value) {
        if (paddingMapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePaddingMapsIsMutable();
          paddingMaps_.add(index, value);
          onChanged();
        } else {
          paddingMapsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder addPaddingMaps(
          tensorflow.tpu.DynamicPadding.PaddingMap.Builder builderForValue) {
        if (paddingMapsBuilder_ == null) {
          ensurePaddingMapsIsMutable();
          paddingMaps_.add(builderForValue.build());
          onChanged();
        } else {
          paddingMapsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder addPaddingMaps(
          int index, tensorflow.tpu.DynamicPadding.PaddingMap.Builder builderForValue) {
        if (paddingMapsBuilder_ == null) {
          ensurePaddingMapsIsMutable();
          paddingMaps_.add(index, builderForValue.build());
          onChanged();
        } else {
          paddingMapsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder addAllPaddingMaps(
          java.lang.Iterable<? extends tensorflow.tpu.DynamicPadding.PaddingMap> values) {
        if (paddingMapsBuilder_ == null) {
          ensurePaddingMapsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, paddingMaps_);
          onChanged();
        } else {
          paddingMapsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder clearPaddingMaps() {
        if (paddingMapsBuilder_ == null) {
          paddingMaps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          paddingMapsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public Builder removePaddingMaps(int index) {
        if (paddingMapsBuilder_ == null) {
          ensurePaddingMapsIsMutable();
          paddingMaps_.remove(index);
          onChanged();
        } else {
          paddingMapsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public tensorflow.tpu.DynamicPadding.PaddingMap.Builder getPaddingMapsBuilder(
          int index) {
        return getPaddingMapsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder getPaddingMapsOrBuilder(
          int index) {
        if (paddingMapsBuilder_ == null) {
          return paddingMaps_.get(index);  } else {
          return paddingMapsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public java.util.List<? extends tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder> 
           getPaddingMapsOrBuilderList() {
        if (paddingMapsBuilder_ != null) {
          return paddingMapsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paddingMaps_);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public tensorflow.tpu.DynamicPadding.PaddingMap.Builder addPaddingMapsBuilder() {
        return getPaddingMapsFieldBuilder().addBuilder(
            tensorflow.tpu.DynamicPadding.PaddingMap.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public tensorflow.tpu.DynamicPadding.PaddingMap.Builder addPaddingMapsBuilder(
          int index) {
        return getPaddingMapsFieldBuilder().addBuilder(
            index, tensorflow.tpu.DynamicPadding.PaddingMap.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.PaddingMap padding_maps = 11;</code>
       */
      public java.util.List<tensorflow.tpu.DynamicPadding.PaddingMap.Builder> 
           getPaddingMapsBuilderList() {
        return getPaddingMapsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.DynamicPadding.PaddingMap, tensorflow.tpu.DynamicPadding.PaddingMap.Builder, tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder> 
          getPaddingMapsFieldBuilder() {
        if (paddingMapsBuilder_ == null) {
          paddingMapsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tpu.DynamicPadding.PaddingMap, tensorflow.tpu.DynamicPadding.PaddingMap.Builder, tensorflow.tpu.DynamicPadding.PaddingMapOrBuilder>(
                  paddingMaps_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          paddingMaps_ = null;
        }
        return paddingMapsBuilder_;
      }

      private int stepMarkerLocation_ = 0;
      /**
       * <pre>
       * The location of step markers that XLA compile will instrument.
       * </pre>
       *
       * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
       * @return The enum numeric value on the wire for stepMarkerLocation.
       */
      @java.lang.Override public int getStepMarkerLocationValue() {
        return stepMarkerLocation_;
      }
      /**
       * <pre>
       * The location of step markers that XLA compile will instrument.
       * </pre>
       *
       * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
       * @param value The enum numeric value on the wire for stepMarkerLocation to set.
       * @return This builder for chaining.
       */
      public Builder setStepMarkerLocationValue(int value) {
        stepMarkerLocation_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location of step markers that XLA compile will instrument.
       * </pre>
       *
       * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
       * @return The stepMarkerLocation.
       */
      @java.lang.Override
      public xla.Xla.DebugOptions.StepMarkerLocation getStepMarkerLocation() {
        xla.Xla.DebugOptions.StepMarkerLocation result = xla.Xla.DebugOptions.StepMarkerLocation.forNumber(stepMarkerLocation_);
        return result == null ? xla.Xla.DebugOptions.StepMarkerLocation.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The location of step markers that XLA compile will instrument.
       * </pre>
       *
       * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
       * @param value The stepMarkerLocation to set.
       * @return This builder for chaining.
       */
      public Builder setStepMarkerLocation(xla.Xla.DebugOptions.StepMarkerLocation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        stepMarkerLocation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The location of step markers that XLA compile will instrument.
       * </pre>
       *
       * <code>.xla.DebugOptions.StepMarkerLocation step_marker_location = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearStepMarkerLocation() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stepMarkerLocation_ = 0;
        onChanged();
        return this;
      }

      private long xlaFusionAutotunerThresh_ ;
      /**
       * <pre>
       * Minimum number of batches run through the XLA graph before XLA fusion
       * autotuner is enabled. Default value of zero disables the autotuner.
       * The XLA fusion autotuner can improve performance by executing a heuristic
       * search on the compiler parameters.
       * </pre>
       *
       * <code>int64 xla_fusion_autotuner_thresh = 13;</code>
       * @return The xlaFusionAutotunerThresh.
       */
      @java.lang.Override
      public long getXlaFusionAutotunerThresh() {
        return xlaFusionAutotunerThresh_;
      }
      /**
       * <pre>
       * Minimum number of batches run through the XLA graph before XLA fusion
       * autotuner is enabled. Default value of zero disables the autotuner.
       * The XLA fusion autotuner can improve performance by executing a heuristic
       * search on the compiler parameters.
       * </pre>
       *
       * <code>int64 xla_fusion_autotuner_thresh = 13;</code>
       * @param value The xlaFusionAutotunerThresh to set.
       * @return This builder for chaining.
       */
      public Builder setXlaFusionAutotunerThresh(long value) {
        
        xlaFusionAutotunerThresh_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Minimum number of batches run through the XLA graph before XLA fusion
       * autotuner is enabled. Default value of zero disables the autotuner.
       * The XLA fusion autotuner can improve performance by executing a heuristic
       * search on the compiler parameters.
       * </pre>
       *
       * <code>int64 xla_fusion_autotuner_thresh = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearXlaFusionAutotunerThresh() {
        bitField0_ = (bitField0_ & ~0x00000400);
        xlaFusionAutotunerThresh_ = 0L;
        onChanged();
        return this;
      }

      private boolean enableAutomaticModelParallelism_ ;
      /**
       * <pre>
       * Enables TPU compiler to add partitioning policies for inputs/outputs to
       * the XLA computation for model parallelism.
       * </pre>
       *
       * <code>bool enable_automatic_model_parallelism = 14;</code>
       * @return The enableAutomaticModelParallelism.
       */
      @java.lang.Override
      public boolean getEnableAutomaticModelParallelism() {
        return enableAutomaticModelParallelism_;
      }
      /**
       * <pre>
       * Enables TPU compiler to add partitioning policies for inputs/outputs to
       * the XLA computation for model parallelism.
       * </pre>
       *
       * <code>bool enable_automatic_model_parallelism = 14;</code>
       * @param value The enableAutomaticModelParallelism to set.
       * @return This builder for chaining.
       */
      public Builder setEnableAutomaticModelParallelism(boolean value) {
        
        enableAutomaticModelParallelism_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Enables TPU compiler to add partitioning policies for inputs/outputs to
       * the XLA computation for model parallelism.
       * </pre>
       *
       * <code>bool enable_automatic_model_parallelism = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnableAutomaticModelParallelism() {
        bitField0_ = (bitField0_ & ~0x00000800);
        enableAutomaticModelParallelism_ = false;
        onChanged();
        return this;
      }

      private boolean useSpmdForXlaPartitioning_ ;
      /**
       * <pre>
       * Whether to use XLA's SPMD or MPMD partitioner when compiler partitioning is
       * requested.
       * </pre>
       *
       * <code>bool use_spmd_for_xla_partitioning = 15;</code>
       * @return The useSpmdForXlaPartitioning.
       */
      @java.lang.Override
      public boolean getUseSpmdForXlaPartitioning() {
        return useSpmdForXlaPartitioning_;
      }
      /**
       * <pre>
       * Whether to use XLA's SPMD or MPMD partitioner when compiler partitioning is
       * requested.
       * </pre>
       *
       * <code>bool use_spmd_for_xla_partitioning = 15;</code>
       * @param value The useSpmdForXlaPartitioning to set.
       * @return This builder for chaining.
       */
      public Builder setUseSpmdForXlaPartitioning(boolean value) {
        
        useSpmdForXlaPartitioning_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to use XLA's SPMD or MPMD partitioner when compiler partitioning is
       * requested.
       * </pre>
       *
       * <code>bool use_spmd_for_xla_partitioning = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearUseSpmdForXlaPartitioning() {
        bitField0_ = (bitField0_ & ~0x00001000);
        useSpmdForXlaPartitioning_ = false;
        onChanged();
        return this;
      }

      private long mlirFingerprint_ ;
      /**
       * <pre>
       * A fingerprint generated by hashing the MLIR module content.
       * </pre>
       *
       * <code>uint64 mlir_fingerprint = 17;</code>
       * @return The mlirFingerprint.
       */
      @java.lang.Override
      public long getMlirFingerprint() {
        return mlirFingerprint_;
      }
      /**
       * <pre>
       * A fingerprint generated by hashing the MLIR module content.
       * </pre>
       *
       * <code>uint64 mlir_fingerprint = 17;</code>
       * @param value The mlirFingerprint to set.
       * @return This builder for chaining.
       */
      public Builder setMlirFingerprint(long value) {
        
        mlirFingerprint_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A fingerprint generated by hashing the MLIR module content.
       * </pre>
       *
       * <code>uint64 mlir_fingerprint = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearMlirFingerprint() {
        bitField0_ = (bitField0_ & ~0x00002000);
        mlirFingerprint_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUCompileMetadataProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUCompileMetadataProto)
    private static final tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto();
    }

    public static tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TPUCompileMetadataProto>
        PARSER = new com.google.protobuf.AbstractParser<TPUCompileMetadataProto>() {
      @java.lang.Override
      public TPUCompileMetadataProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TPUCompileMetadataProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TPUCompileMetadataProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.tpu.CompileMetadata.TPUCompileMetadataProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUCompileMetadataProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n3tensorflow/core/protobuf/tpu/compile_m" +
      "etadata.proto\022\016tensorflow.tpu\032!tensorflo" +
      "w/compiler/xla/xla.proto\032&tensorflow/com" +
      "piler/xla/xla_data.proto\032,tensorflow/cor" +
      "e/framework/tensor_shape.proto\032%tensorfl" +
      "ow/core/framework/types.proto\0322tensorflo" +
      "w/core/protobuf/tpu/dynamic_padding.prot" +
      "o\"\367\t\n\027TPUCompileMetadataProto\0229\n\004args\030\001 " +
      "\003(\0132+.tensorflow.tpu.TPUCompileMetadataP" +
      "roto.Arg\022?\n\007retvals\030\002 \003(\0132..tensorflow.t" +
      "pu.TPUCompileMetadataProto.Retval\022\024\n\014num" +
      "_replicas\030\003 \001(\005\022\035\n\025num_cores_per_replica" +
      "\030\004 \001(\005\0225\n\021device_assignment\030\010 \001(\0132\032.xla." +
      "DeviceAssignmentProto\022$\n\034function_librar" +
      "y_fingerprint\030\006 \001(\004\022\026\n\016session_handle\030\t " +
      "\001(\t\022$\n\034guaranteed_const_fingerprint\030\n \001(" +
      "\t\0220\n\014padding_maps\030\013 \003(\0132\032.tensorflow.tpu" +
      ".PaddingMap\022B\n\024step_marker_location\030\014 \001(" +
      "\0162$.xla.DebugOptions.StepMarkerLocation\022" +
      "#\n\033xla_fusion_autotuner_thresh\030\r \001(\003\022*\n\"" +
      "enable_automatic_model_parallelism\030\016 \001(\010" +
      "\022%\n\035use_spmd_for_xla_partitioning\030\017 \001(\010\022" +
      "\030\n\020mlir_fingerprint\030\021 \001(\004\032\310\004\n\003Arg\022#\n\005dty" +
      "pe\030\001 \001(\0162\024.tensorflow.DataType\022+\n\005shape\030" +
      "\002 \001(\0132\034.tensorflow.TensorShapeProto\022>\n\004k" +
      "ind\030\003 \001(\01620.tensorflow.tpu.TPUCompileMet" +
      "adataProto.Arg.Kind\022!\n\010sharding\030\004 \001(\0132\017." +
      "xla.OpSharding\022$\n\034is_same_data_across_re" +
      "plicas\030\005 \001(\010\022Z\n\023enable_xla_sharding\030\006 \001(" +
      "\0162=.tensorflow.tpu.TPUCompileMetadataPro" +
      "to.Arg.EnableXlaSharding\022!\n\031retval_index" +
      "_for_sharding\030\010 \001(\005\022\020\n\010fast_mem\030\007 \001(\010\022\033\n" +
      "\023unrestricted_layout\030\t \001(\010\022\014\n\004name\030\n \001(\t" +
      "\022\036\n\026requires_xla_broadcast\030\013 \001(\010\"I\n\004Kind" +
      "\022\013\n\007INVALID\020\000\022\r\n\tPARAMETER\020\001\022\014\n\010VARIABLE" +
      "\020\002\022\027\n\023GUARANTEED_CONSTANT\020\003\"?\n\021EnableXla" +
      "Sharding\022\016\n\nDISALLOWED\020\000\022\r\n\tTENTATIVE\020\001\022" +
      "\013\n\007ALLOWED\020\002\032+\n\006Retval\022!\n\010sharding\030\001 \001(\013" +
      "2\017.xla.OpShardingJ\004\010\005\020\006J\004\010\007\020\010J\004\010\020\020\021B\003\370\001\001" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          xla.Xla.getDescriptor(),
          xla.XlaData.getDescriptor(),
          org.tensorflow.framework.TensorShapeProtos.getDescriptor(),
          org.tensorflow.framework.TypesProtos.getDescriptor(),
          tensorflow.tpu.DynamicPadding.getDescriptor(),
        });
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor,
        new java.lang.String[] { "Args", "Retvals", "NumReplicas", "NumCoresPerReplica", "DeviceAssignment", "FunctionLibraryFingerprint", "SessionHandle", "GuaranteedConstFingerprint", "PaddingMaps", "StepMarkerLocation", "XlaFusionAutotunerThresh", "EnableAutomaticModelParallelism", "UseSpmdForXlaPartitioning", "MlirFingerprint", });
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_descriptor =
      internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUCompileMetadataProto_Arg_descriptor,
        new java.lang.String[] { "Dtype", "Shape", "Kind", "Sharding", "IsSameDataAcrossReplicas", "EnableXlaSharding", "RetvalIndexForSharding", "FastMem", "UnrestrictedLayout", "Name", "RequiresXlaBroadcast", });
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_descriptor =
      internal_static_tensorflow_tpu_TPUCompileMetadataProto_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUCompileMetadataProto_Retval_descriptor,
        new java.lang.String[] { "Sharding", });
    xla.Xla.getDescriptor();
    xla.XlaData.getDescriptor();
    org.tensorflow.framework.TensorShapeProtos.getDescriptor();
    org.tensorflow.framework.TypesProtos.getDescriptor();
    tensorflow.tpu.DynamicPadding.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
