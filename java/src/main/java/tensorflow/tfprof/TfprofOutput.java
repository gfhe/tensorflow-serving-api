// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/profiler/tfprof_output.proto

package tensorflow.tfprof;

public final class TfprofOutput {
  private TfprofOutput() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TFProfTensorProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.TFProfTensorProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.DataType dtype = 1;</code>
     * @return The enum numeric value on the wire for dtype.
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 1;</code>
     * @return The dtype.
     */
    org.tensorflow.framework.DataType getDtype();

    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     * @return A list containing the valueDouble.
     */
    java.util.List<java.lang.Double> getValueDoubleList();
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     * @return The count of valueDouble.
     */
    int getValueDoubleCount();
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     * @param index The index of the element to return.
     * @return The valueDouble at the given index.
     */
    double getValueDouble(int index);

    /**
     * <code>repeated int64 value_int64 = 3;</code>
     * @return A list containing the valueInt64.
     */
    java.util.List<java.lang.Long> getValueInt64List();
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     * @return The count of valueInt64.
     */
    int getValueInt64Count();
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     * @param index The index of the element to return.
     * @return The valueInt64 at the given index.
     */
    long getValueInt64(int index);

    /**
     * <code>repeated string value_str = 4;</code>
     * @return A list containing the valueStr.
     */
    java.util.List<java.lang.String>
        getValueStrList();
    /**
     * <code>repeated string value_str = 4;</code>
     * @return The count of valueStr.
     */
    int getValueStrCount();
    /**
     * <code>repeated string value_str = 4;</code>
     * @param index The index of the element to return.
     * @return The valueStr at the given index.
     */
    java.lang.String getValueStr(int index);
    /**
     * <code>repeated string value_str = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the valueStr at the given index.
     */
    com.google.protobuf.ByteString
        getValueStrBytes(int index);
  }
  /**
   * Protobuf type {@code tensorflow.tfprof.TFProfTensorProto}
   */
  public static final class TFProfTensorProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tfprof.TFProfTensorProto)
      TFProfTensorProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TFProfTensorProto.newBuilder() to construct.
    private TFProfTensorProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TFProfTensorProto() {
      dtype_ = 0;
      valueDouble_ = emptyDoubleList();
      valueInt64_ = emptyLongList();
      valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TFProfTensorProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto.class, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder.class);
    }

    public static final int DTYPE_FIELD_NUMBER = 1;
    private int dtype_ = 0;
    /**
     * <code>.tensorflow.DataType dtype = 1;</code>
     * @return The enum numeric value on the wire for dtype.
     */
    @java.lang.Override public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 1;</code>
     * @return The dtype.
     */
    @java.lang.Override public org.tensorflow.framework.DataType getDtype() {
      org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.forNumber(dtype_);
      return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
    }

    public static final int VALUE_DOUBLE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList valueDouble_;
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     * @return A list containing the valueDouble.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getValueDoubleList() {
      return valueDouble_;
    }
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     * @return The count of valueDouble.
     */
    public int getValueDoubleCount() {
      return valueDouble_.size();
    }
    /**
     * <pre>
     * Flatten tensor in row-major.
     * Only one of the following array is set.
     * </pre>
     *
     * <code>repeated double value_double = 2;</code>
     * @param index The index of the element to return.
     * @return The valueDouble at the given index.
     */
    public double getValueDouble(int index) {
      return valueDouble_.getDouble(index);
    }
    private int valueDoubleMemoizedSerializedSize = -1;

    public static final int VALUE_INT64_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList valueInt64_;
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     * @return A list containing the valueInt64.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getValueInt64List() {
      return valueInt64_;
    }
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     * @return The count of valueInt64.
     */
    public int getValueInt64Count() {
      return valueInt64_.size();
    }
    /**
     * <code>repeated int64 value_int64 = 3;</code>
     * @param index The index of the element to return.
     * @return The valueInt64 at the given index.
     */
    public long getValueInt64(int index) {
      return valueInt64_.getLong(index);
    }
    private int valueInt64MemoizedSerializedSize = -1;

    public static final int VALUE_STR_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList valueStr_;
    /**
     * <code>repeated string value_str = 4;</code>
     * @return A list containing the valueStr.
     */
    public com.google.protobuf.ProtocolStringList
        getValueStrList() {
      return valueStr_;
    }
    /**
     * <code>repeated string value_str = 4;</code>
     * @return The count of valueStr.
     */
    public int getValueStrCount() {
      return valueStr_.size();
    }
    /**
     * <code>repeated string value_str = 4;</code>
     * @param index The index of the element to return.
     * @return The valueStr at the given index.
     */
    public java.lang.String getValueStr(int index) {
      return valueStr_.get(index);
    }
    /**
     * <code>repeated string value_str = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the valueStr at the given index.
     */
    public com.google.protobuf.ByteString
        getValueStrBytes(int index) {
      return valueStr_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        output.writeEnum(1, dtype_);
      }
      if (getValueDoubleList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(valueDoubleMemoizedSerializedSize);
      }
      for (int i = 0; i < valueDouble_.size(); i++) {
        output.writeDoubleNoTag(valueDouble_.getDouble(i));
      }
      if (getValueInt64List().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(valueInt64MemoizedSerializedSize);
      }
      for (int i = 0; i < valueInt64_.size(); i++) {
        output.writeInt64NoTag(valueInt64_.getLong(i));
      }
      for (int i = 0; i < valueStr_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, valueStr_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, dtype_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getValueDoubleList().size();
        size += dataSize;
        if (!getValueDoubleList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueDoubleMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueInt64_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(valueInt64_.getLong(i));
        }
        size += dataSize;
        if (!getValueInt64List().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueInt64MemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < valueStr_.size(); i++) {
          dataSize += computeStringSizeNoTag(valueStr_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getValueStrList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tfprof.TfprofOutput.TFProfTensorProto)) {
        return super.equals(obj);
      }
      tensorflow.tfprof.TfprofOutput.TFProfTensorProto other = (tensorflow.tfprof.TfprofOutput.TFProfTensorProto) obj;

      if (dtype_ != other.dtype_) return false;
      if (!getValueDoubleList()
          .equals(other.getValueDoubleList())) return false;
      if (!getValueInt64List()
          .equals(other.getValueInt64List())) return false;
      if (!getValueStrList()
          .equals(other.getValueStrList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      if (getValueDoubleCount() > 0) {
        hash = (37 * hash) + VALUE_DOUBLE_FIELD_NUMBER;
        hash = (53 * hash) + getValueDoubleList().hashCode();
      }
      if (getValueInt64Count() > 0) {
        hash = (37 * hash) + VALUE_INT64_FIELD_NUMBER;
        hash = (53 * hash) + getValueInt64List().hashCode();
      }
      if (getValueStrCount() > 0) {
        hash = (37 * hash) + VALUE_STR_FIELD_NUMBER;
        hash = (53 * hash) + getValueStrList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.TFProfTensorProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tfprof.TFProfTensorProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.TFProfTensorProto)
        tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.TFProfTensorProto.class, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder.class);
      }

      // Construct using tensorflow.tfprof.TfprofOutput.TFProfTensorProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        dtype_ = 0;
        valueDouble_ = emptyDoubleList();
        valueInt64_ = emptyLongList();
        valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getDefaultInstanceForType() {
        return tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto build() {
        tensorflow.tfprof.TfprofOutput.TFProfTensorProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto buildPartial() {
        tensorflow.tfprof.TfprofOutput.TFProfTensorProto result = new tensorflow.tfprof.TfprofOutput.TFProfTensorProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(tensorflow.tfprof.TfprofOutput.TFProfTensorProto result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          valueDouble_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.valueDouble_ = valueDouble_;
        if (((bitField0_ & 0x00000004) != 0)) {
          valueInt64_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.valueInt64_ = valueInt64_;
        if (((bitField0_ & 0x00000008) != 0)) {
          valueStr_ = valueStr_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.valueStr_ = valueStr_;
      }

      private void buildPartial0(tensorflow.tfprof.TfprofOutput.TFProfTensorProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.dtype_ = dtype_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tfprof.TfprofOutput.TFProfTensorProto) {
          return mergeFrom((tensorflow.tfprof.TfprofOutput.TFProfTensorProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.TFProfTensorProto other) {
        if (other == tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance()) return this;
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        if (!other.valueDouble_.isEmpty()) {
          if (valueDouble_.isEmpty()) {
            valueDouble_ = other.valueDouble_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueDoubleIsMutable();
            valueDouble_.addAll(other.valueDouble_);
          }
          onChanged();
        }
        if (!other.valueInt64_.isEmpty()) {
          if (valueInt64_.isEmpty()) {
            valueInt64_ = other.valueInt64_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureValueInt64IsMutable();
            valueInt64_.addAll(other.valueInt64_);
          }
          onChanged();
        }
        if (!other.valueStr_.isEmpty()) {
          if (valueStr_.isEmpty()) {
            valueStr_ = other.valueStr_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValueStrIsMutable();
            valueStr_.addAll(other.valueStr_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                dtype_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 17: {
                double v = input.readDouble();
                ensureValueDoubleIsMutable();
                valueDouble_.addDouble(v);
                break;
              } // case 17
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureValueDoubleIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  valueDouble_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readInt64();
                ensureValueInt64IsMutable();
                valueInt64_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureValueInt64IsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  valueInt64_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureValueStrIsMutable();
                valueStr_.add(s);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return The enum numeric value on the wire for dtype.
       */
      @java.lang.Override public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @param value The enum numeric value on the wire for dtype to set.
       * @return This builder for chaining.
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return The dtype.
       */
      @java.lang.Override
      public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.forNumber(dtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @param value The dtype to set.
       * @return This builder for chaining.
       */
      public Builder setDtype(org.tensorflow.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDtype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dtype_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList valueDouble_ = emptyDoubleList();
      private void ensureValueDoubleIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          valueDouble_ = mutableCopy(valueDouble_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @return A list containing the valueDouble.
       */
      public java.util.List<java.lang.Double>
          getValueDoubleList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(valueDouble_) : valueDouble_;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @return The count of valueDouble.
       */
      public int getValueDoubleCount() {
        return valueDouble_.size();
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @param index The index of the element to return.
       * @return The valueDouble at the given index.
       */
      public double getValueDouble(int index) {
        return valueDouble_.getDouble(index);
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @param index The index to set the value at.
       * @param value The valueDouble to set.
       * @return This builder for chaining.
       */
      public Builder setValueDouble(
          int index, double value) {
        
        ensureValueDoubleIsMutable();
        valueDouble_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @param value The valueDouble to add.
       * @return This builder for chaining.
       */
      public Builder addValueDouble(double value) {
        
        ensureValueDoubleIsMutable();
        valueDouble_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @param values The valueDouble to add.
       * @return This builder for chaining.
       */
      public Builder addAllValueDouble(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureValueDoubleIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueDouble_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flatten tensor in row-major.
       * Only one of the following array is set.
       * </pre>
       *
       * <code>repeated double value_double = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueDouble() {
        valueDouble_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList valueInt64_ = emptyLongList();
      private void ensureValueInt64IsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          valueInt64_ = mutableCopy(valueInt64_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @return A list containing the valueInt64.
       */
      public java.util.List<java.lang.Long>
          getValueInt64List() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(valueInt64_) : valueInt64_;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @return The count of valueInt64.
       */
      public int getValueInt64Count() {
        return valueInt64_.size();
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @param index The index of the element to return.
       * @return The valueInt64 at the given index.
       */
      public long getValueInt64(int index) {
        return valueInt64_.getLong(index);
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @param index The index to set the value at.
       * @param value The valueInt64 to set.
       * @return This builder for chaining.
       */
      public Builder setValueInt64(
          int index, long value) {
        
        ensureValueInt64IsMutable();
        valueInt64_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @param value The valueInt64 to add.
       * @return This builder for chaining.
       */
      public Builder addValueInt64(long value) {
        
        ensureValueInt64IsMutable();
        valueInt64_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @param values The valueInt64 to add.
       * @return This builder for chaining.
       */
      public Builder addAllValueInt64(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueInt64IsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueInt64_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value_int64 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueInt64() {
        valueInt64_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueStrIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          valueStr_ = new com.google.protobuf.LazyStringArrayList(valueStr_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @return A list containing the valueStr.
       */
      public com.google.protobuf.ProtocolStringList
          getValueStrList() {
        return valueStr_.getUnmodifiableView();
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @return The count of valueStr.
       */
      public int getValueStrCount() {
        return valueStr_.size();
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @param index The index of the element to return.
       * @return The valueStr at the given index.
       */
      public java.lang.String getValueStr(int index) {
        return valueStr_.get(index);
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the valueStr at the given index.
       */
      public com.google.protobuf.ByteString
          getValueStrBytes(int index) {
        return valueStr_.getByteString(index);
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @param index The index to set the value at.
       * @param value The valueStr to set.
       * @return This builder for chaining.
       */
      public Builder setValueStr(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureValueStrIsMutable();
        valueStr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @param value The valueStr to add.
       * @return This builder for chaining.
       */
      public Builder addValueStr(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureValueStrIsMutable();
        valueStr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @param values The valueStr to add.
       * @return This builder for chaining.
       */
      public Builder addAllValueStr(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueStrIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, valueStr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueStr() {
        valueStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value_str = 4;</code>
       * @param value The bytes of the valueStr to add.
       * @return This builder for chaining.
       */
      public Builder addValueStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureValueStrIsMutable();
        valueStr_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.TFProfTensorProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tfprof.TFProfTensorProto)
    private static final tensorflow.tfprof.TfprofOutput.TFProfTensorProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.TFProfTensorProto();
    }

    public static tensorflow.tfprof.TfprofOutput.TFProfTensorProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TFProfTensorProto>
        PARSER = new com.google.protobuf.AbstractParser<TFProfTensorProto>() {
      @java.lang.Override
      public TFProfTensorProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TFProfTensorProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TFProfTensorProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphNodeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.GraphNodeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     * @return Whether the tensorValue field is set.
     */
    boolean hasTensorValue();
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     * @return The tensorValue.
     */
    tensorflow.tfprof.TfprofOutput.TFProfTensorProto getTensorValue();
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder getTensorValueOrBuilder();

    /**
     * <pre>
     * op execution time.
     * A node can be defined once but run multiple times in tf.while_loop.
     * the times sum up all different runs.
     * </pre>
     *
     * <code>int64 run_count = 21;</code>
     * @return The runCount.
     */
    long getRunCount();

    /**
     * <code>int64 exec_micros = 2;</code>
     * @return The execMicros.
     */
    long getExecMicros();

    /**
     * <code>int64 accelerator_exec_micros = 17;</code>
     * @return The acceleratorExecMicros.
     */
    long getAcceleratorExecMicros();

    /**
     * <code>int64 cpu_exec_micros = 18;</code>
     * @return The cpuExecMicros.
     */
    long getCpuExecMicros();

    /**
     * <pre>
     * Total bytes requested by the op.
     * </pre>
     *
     * <code>int64 requested_bytes = 3;</code>
     * @return The requestedBytes.
     */
    long getRequestedBytes();

    /**
     * <pre>
     * Max bytes allocated and being used by the op at a point.
     * </pre>
     *
     * <code>int64 peak_bytes = 24;</code>
     * @return The peakBytes.
     */
    long getPeakBytes();

    /**
     * <pre>
     * Total bytes requested by the op and not released before end.
     * </pre>
     *
     * <code>int64 residual_bytes = 25;</code>
     * @return The residualBytes.
     */
    long getResidualBytes();

    /**
     * <pre>
     * Total bytes output by the op (not necessarily allocated by the op).
     * </pre>
     *
     * <code>int64 output_bytes = 26;</code>
     * @return The outputBytes.
     */
    long getOutputBytes();

    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>int64 parameters = 4;</code>
     * @return The parameters.
     */
    long getParameters();

    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>int64 float_ops = 13;</code>
     * @return The floatOps.
     */
    long getFloatOps();

    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @return A list containing the devices.
     */
    java.util.List<java.lang.String>
        getDevicesList();
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @return The count of devices.
     */
    int getDevicesCount();
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @param index The index of the element to return.
     * @return The devices at the given index.
     */
    java.lang.String getDevices(int index);
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the devices at the given index.
     */
    com.google.protobuf.ByteString
        getDevicesBytes(int index);

    /**
     * <pre>
     * The following are the aggregated stats from all *accounted* children and
     * the node itself. The actual children depend on the data structure used.
     * In graph view, children are inputs recursively.
     * In scope view, children are nodes under the name scope.
     * </pre>
     *
     * <code>int64 total_definition_count = 23;</code>
     * @return The totalDefinitionCount.
     */
    long getTotalDefinitionCount();

    /**
     * <code>int64 total_run_count = 22;</code>
     * @return The totalRunCount.
     */
    long getTotalRunCount();

    /**
     * <code>int64 total_exec_micros = 6;</code>
     * @return The totalExecMicros.
     */
    long getTotalExecMicros();

    /**
     * <code>int64 total_accelerator_exec_micros = 19;</code>
     * @return The totalAcceleratorExecMicros.
     */
    long getTotalAcceleratorExecMicros();

    /**
     * <code>int64 total_cpu_exec_micros = 20;</code>
     * @return The totalCpuExecMicros.
     */
    long getTotalCpuExecMicros();

    /**
     * <code>int64 total_requested_bytes = 7;</code>
     * @return The totalRequestedBytes.
     */
    long getTotalRequestedBytes();

    /**
     * <code>int64 total_peak_bytes = 27;</code>
     * @return The totalPeakBytes.
     */
    long getTotalPeakBytes();

    /**
     * <code>int64 total_residual_bytes = 28;</code>
     * @return The totalResidualBytes.
     */
    long getTotalResidualBytes();

    /**
     * <code>int64 total_output_bytes = 29;</code>
     * @return The totalOutputBytes.
     */
    long getTotalOutputBytes();

    /**
     * <code>int64 total_parameters = 8;</code>
     * @return The totalParameters.
     */
    long getTotalParameters();

    /**
     * <code>int64 total_float_ops = 14;</code>
     * @return The totalFloatOps.
     */
    long getTotalFloatOps();

    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    java.util.List<org.tensorflow.framework.TensorShapeProto> 
        getShapesList();
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    org.tensorflow.framework.TensorShapeProto getShapes(int index);
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    int getShapesCount();
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    java.util.List<? extends org.tensorflow.framework.TensorShapeProtoOrBuilder> 
        getShapesOrBuilderList();
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    org.tensorflow.framework.TensorShapeProtoOrBuilder getShapesOrBuilder(
        int index);

    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    int getInputShapesCount();
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    boolean containsInputShapes(
        int key);
    /**
     * Use {@link #getInputShapesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
    getInputShapes();
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
    getInputShapesMap();
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    /* nullable */
org.tensorflow.framework.TensorShapeProto getInputShapesOrDefault(
        int key,
        /* nullable */
org.tensorflow.framework.TensorShapeProto defaultValue);
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    org.tensorflow.framework.TensorShapeProto getInputShapesOrThrow(
        int key);

    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> 
        getChildrenList();
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    tensorflow.tfprof.TfprofOutput.GraphNodeProto getChildren(int index);
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    int getChildrenCount();
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    java.util.List<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder getChildrenOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A node in TensorFlow graph. Used by scope/graph view.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tfprof.GraphNodeProto}
   */
  public static final class GraphNodeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tfprof.GraphNodeProto)
      GraphNodeProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GraphNodeProto.newBuilder() to construct.
    private GraphNodeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphNodeProto() {
      name_ = "";
      devices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      shapes_ = java.util.Collections.emptyList();
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GraphNodeProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_GraphNodeProto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 16:
          return internalGetInputShapes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_GraphNodeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tfprof.TfprofOutput.GraphNodeProto.class, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * op name.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TENSOR_VALUE_FIELD_NUMBER = 15;
    private tensorflow.tfprof.TfprofOutput.TFProfTensorProto tensorValue_;
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     * @return Whether the tensorValue field is set.
     */
    @java.lang.Override
    public boolean hasTensorValue() {
      return tensorValue_ != null;
    }
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     * @return The tensorValue.
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getTensorValue() {
      return tensorValue_ == null ? tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
    }
    /**
     * <pre>
     * tensor value restored from checkpoint.
     * </pre>
     *
     * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder getTensorValueOrBuilder() {
      return tensorValue_ == null ? tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
    }

    public static final int RUN_COUNT_FIELD_NUMBER = 21;
    private long runCount_ = 0L;
    /**
     * <pre>
     * op execution time.
     * A node can be defined once but run multiple times in tf.while_loop.
     * the times sum up all different runs.
     * </pre>
     *
     * <code>int64 run_count = 21;</code>
     * @return The runCount.
     */
    @java.lang.Override
    public long getRunCount() {
      return runCount_;
    }

    public static final int EXEC_MICROS_FIELD_NUMBER = 2;
    private long execMicros_ = 0L;
    /**
     * <code>int64 exec_micros = 2;</code>
     * @return The execMicros.
     */
    @java.lang.Override
    public long getExecMicros() {
      return execMicros_;
    }

    public static final int ACCELERATOR_EXEC_MICROS_FIELD_NUMBER = 17;
    private long acceleratorExecMicros_ = 0L;
    /**
     * <code>int64 accelerator_exec_micros = 17;</code>
     * @return The acceleratorExecMicros.
     */
    @java.lang.Override
    public long getAcceleratorExecMicros() {
      return acceleratorExecMicros_;
    }

    public static final int CPU_EXEC_MICROS_FIELD_NUMBER = 18;
    private long cpuExecMicros_ = 0L;
    /**
     * <code>int64 cpu_exec_micros = 18;</code>
     * @return The cpuExecMicros.
     */
    @java.lang.Override
    public long getCpuExecMicros() {
      return cpuExecMicros_;
    }

    public static final int REQUESTED_BYTES_FIELD_NUMBER = 3;
    private long requestedBytes_ = 0L;
    /**
     * <pre>
     * Total bytes requested by the op.
     * </pre>
     *
     * <code>int64 requested_bytes = 3;</code>
     * @return The requestedBytes.
     */
    @java.lang.Override
    public long getRequestedBytes() {
      return requestedBytes_;
    }

    public static final int PEAK_BYTES_FIELD_NUMBER = 24;
    private long peakBytes_ = 0L;
    /**
     * <pre>
     * Max bytes allocated and being used by the op at a point.
     * </pre>
     *
     * <code>int64 peak_bytes = 24;</code>
     * @return The peakBytes.
     */
    @java.lang.Override
    public long getPeakBytes() {
      return peakBytes_;
    }

    public static final int RESIDUAL_BYTES_FIELD_NUMBER = 25;
    private long residualBytes_ = 0L;
    /**
     * <pre>
     * Total bytes requested by the op and not released before end.
     * </pre>
     *
     * <code>int64 residual_bytes = 25;</code>
     * @return The residualBytes.
     */
    @java.lang.Override
    public long getResidualBytes() {
      return residualBytes_;
    }

    public static final int OUTPUT_BYTES_FIELD_NUMBER = 26;
    private long outputBytes_ = 0L;
    /**
     * <pre>
     * Total bytes output by the op (not necessarily allocated by the op).
     * </pre>
     *
     * <code>int64 output_bytes = 26;</code>
     * @return The outputBytes.
     */
    @java.lang.Override
    public long getOutputBytes() {
      return outputBytes_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 4;
    private long parameters_ = 0L;
    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>int64 parameters = 4;</code>
     * @return The parameters.
     */
    @java.lang.Override
    public long getParameters() {
      return parameters_;
    }

    public static final int FLOAT_OPS_FIELD_NUMBER = 13;
    private long floatOps_ = 0L;
    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>int64 float_ops = 13;</code>
     * @return The floatOps.
     */
    @java.lang.Override
    public long getFloatOps() {
      return floatOps_;
    }

    public static final int DEVICES_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList devices_;
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @return A list containing the devices.
     */
    public com.google.protobuf.ProtocolStringList
        getDevicesList() {
      return devices_;
    }
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @return The count of devices.
     */
    public int getDevicesCount() {
      return devices_.size();
    }
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @param index The index of the element to return.
     * @return The devices at the given index.
     */
    public java.lang.String getDevices(int index) {
      return devices_.get(index);
    }
    /**
     * <pre>
     * Device the op is assigned to.
     * Since an op can fire multiple kernel calls, there can be multiple devices.
     * </pre>
     *
     * <code>repeated string devices = 10;</code>
     * @param index The index of the value to return.
     * @return The bytes of the devices at the given index.
     */
    public com.google.protobuf.ByteString
        getDevicesBytes(int index) {
      return devices_.getByteString(index);
    }

    public static final int TOTAL_DEFINITION_COUNT_FIELD_NUMBER = 23;
    private long totalDefinitionCount_ = 0L;
    /**
     * <pre>
     * The following are the aggregated stats from all *accounted* children and
     * the node itself. The actual children depend on the data structure used.
     * In graph view, children are inputs recursively.
     * In scope view, children are nodes under the name scope.
     * </pre>
     *
     * <code>int64 total_definition_count = 23;</code>
     * @return The totalDefinitionCount.
     */
    @java.lang.Override
    public long getTotalDefinitionCount() {
      return totalDefinitionCount_;
    }

    public static final int TOTAL_RUN_COUNT_FIELD_NUMBER = 22;
    private long totalRunCount_ = 0L;
    /**
     * <code>int64 total_run_count = 22;</code>
     * @return The totalRunCount.
     */
    @java.lang.Override
    public long getTotalRunCount() {
      return totalRunCount_;
    }

    public static final int TOTAL_EXEC_MICROS_FIELD_NUMBER = 6;
    private long totalExecMicros_ = 0L;
    /**
     * <code>int64 total_exec_micros = 6;</code>
     * @return The totalExecMicros.
     */
    @java.lang.Override
    public long getTotalExecMicros() {
      return totalExecMicros_;
    }

    public static final int TOTAL_ACCELERATOR_EXEC_MICROS_FIELD_NUMBER = 19;
    private long totalAcceleratorExecMicros_ = 0L;
    /**
     * <code>int64 total_accelerator_exec_micros = 19;</code>
     * @return The totalAcceleratorExecMicros.
     */
    @java.lang.Override
    public long getTotalAcceleratorExecMicros() {
      return totalAcceleratorExecMicros_;
    }

    public static final int TOTAL_CPU_EXEC_MICROS_FIELD_NUMBER = 20;
    private long totalCpuExecMicros_ = 0L;
    /**
     * <code>int64 total_cpu_exec_micros = 20;</code>
     * @return The totalCpuExecMicros.
     */
    @java.lang.Override
    public long getTotalCpuExecMicros() {
      return totalCpuExecMicros_;
    }

    public static final int TOTAL_REQUESTED_BYTES_FIELD_NUMBER = 7;
    private long totalRequestedBytes_ = 0L;
    /**
     * <code>int64 total_requested_bytes = 7;</code>
     * @return The totalRequestedBytes.
     */
    @java.lang.Override
    public long getTotalRequestedBytes() {
      return totalRequestedBytes_;
    }

    public static final int TOTAL_PEAK_BYTES_FIELD_NUMBER = 27;
    private long totalPeakBytes_ = 0L;
    /**
     * <code>int64 total_peak_bytes = 27;</code>
     * @return The totalPeakBytes.
     */
    @java.lang.Override
    public long getTotalPeakBytes() {
      return totalPeakBytes_;
    }

    public static final int TOTAL_RESIDUAL_BYTES_FIELD_NUMBER = 28;
    private long totalResidualBytes_ = 0L;
    /**
     * <code>int64 total_residual_bytes = 28;</code>
     * @return The totalResidualBytes.
     */
    @java.lang.Override
    public long getTotalResidualBytes() {
      return totalResidualBytes_;
    }

    public static final int TOTAL_OUTPUT_BYTES_FIELD_NUMBER = 29;
    private long totalOutputBytes_ = 0L;
    /**
     * <code>int64 total_output_bytes = 29;</code>
     * @return The totalOutputBytes.
     */
    @java.lang.Override
    public long getTotalOutputBytes() {
      return totalOutputBytes_;
    }

    public static final int TOTAL_PARAMETERS_FIELD_NUMBER = 8;
    private long totalParameters_ = 0L;
    /**
     * <code>int64 total_parameters = 8;</code>
     * @return The totalParameters.
     */
    @java.lang.Override
    public long getTotalParameters() {
      return totalParameters_;
    }

    public static final int TOTAL_FLOAT_OPS_FIELD_NUMBER = 14;
    private long totalFloatOps_ = 0L;
    /**
     * <code>int64 total_float_ops = 14;</code>
     * @return The totalFloatOps.
     */
    @java.lang.Override
    public long getTotalFloatOps() {
      return totalFloatOps_;
    }

    public static final int SHAPES_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<org.tensorflow.framework.TensorShapeProto> shapes_;
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.tensorflow.framework.TensorShapeProto> getShapesList() {
      return shapes_;
    }
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.tensorflow.framework.TensorShapeProtoOrBuilder> 
        getShapesOrBuilderList() {
      return shapes_;
    }
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    @java.lang.Override
    public int getShapesCount() {
      return shapes_.size();
    }
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    @java.lang.Override
    public org.tensorflow.framework.TensorShapeProto getShapes(int index) {
      return shapes_.get(index);
    }
    /**
     * <pre>
     * shape information, if available.
     * TODO(xpan): Why is this repeated?
     * </pre>
     *
     * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
     */
    @java.lang.Override
    public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapesOrBuilder(
        int index) {
      return shapes_.get(index);
    }

    public static final int INPUT_SHAPES_FIELD_NUMBER = 16;
    private static final class InputShapesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, org.tensorflow.framework.TensorShapeProto> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>newDefaultInstance(
                  tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_GraphNodeProto_InputShapesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.tensorflow.framework.TensorShapeProto.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.Integer, org.tensorflow.framework.TensorShapeProto> inputShapes_;
    private com.google.protobuf.MapField<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
    internalGetInputShapes() {
      if (inputShapes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InputShapesDefaultEntryHolder.defaultEntry);
      }
      return inputShapes_;
    }
    public int getInputShapesCount() {
      return internalGetInputShapes().getMap().size();
    }
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    @java.lang.Override
    public boolean containsInputShapes(
        int key) {
      
      return internalGetInputShapes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInputShapesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> getInputShapes() {
      return getInputShapesMap();
    }
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> getInputShapesMap() {
      return internalGetInputShapes().getMap();
    }
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    @java.lang.Override
    public /* nullable */
org.tensorflow.framework.TensorShapeProto getInputShapesOrDefault(
        int key,
        /* nullable */
org.tensorflow.framework.TensorShapeProto defaultValue) {
      
      java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> map =
          internalGetInputShapes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
     */
    @java.lang.Override
    public org.tensorflow.framework.TensorShapeProto getInputShapesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> map =
          internalGetInputShapes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CHILDREN_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> children_;
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> getChildrenList() {
      return children_;
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    @java.lang.Override
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.GraphNodeProto getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <pre>
     * Descendants of the graph. The actual descendants depend on the data
     * structure used (scope, graph).
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (execMicros_ != 0L) {
        output.writeInt64(2, execMicros_);
      }
      if (requestedBytes_ != 0L) {
        output.writeInt64(3, requestedBytes_);
      }
      if (parameters_ != 0L) {
        output.writeInt64(4, parameters_);
      }
      if (totalExecMicros_ != 0L) {
        output.writeInt64(6, totalExecMicros_);
      }
      if (totalRequestedBytes_ != 0L) {
        output.writeInt64(7, totalRequestedBytes_);
      }
      if (totalParameters_ != 0L) {
        output.writeInt64(8, totalParameters_);
      }
      for (int i = 0; i < devices_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, devices_.getRaw(i));
      }
      for (int i = 0; i < shapes_.size(); i++) {
        output.writeMessage(11, shapes_.get(i));
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(12, children_.get(i));
      }
      if (floatOps_ != 0L) {
        output.writeInt64(13, floatOps_);
      }
      if (totalFloatOps_ != 0L) {
        output.writeInt64(14, totalFloatOps_);
      }
      if (tensorValue_ != null) {
        output.writeMessage(15, getTensorValue());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetInputShapes(),
          InputShapesDefaultEntryHolder.defaultEntry,
          16);
      if (acceleratorExecMicros_ != 0L) {
        output.writeInt64(17, acceleratorExecMicros_);
      }
      if (cpuExecMicros_ != 0L) {
        output.writeInt64(18, cpuExecMicros_);
      }
      if (totalAcceleratorExecMicros_ != 0L) {
        output.writeInt64(19, totalAcceleratorExecMicros_);
      }
      if (totalCpuExecMicros_ != 0L) {
        output.writeInt64(20, totalCpuExecMicros_);
      }
      if (runCount_ != 0L) {
        output.writeInt64(21, runCount_);
      }
      if (totalRunCount_ != 0L) {
        output.writeInt64(22, totalRunCount_);
      }
      if (totalDefinitionCount_ != 0L) {
        output.writeInt64(23, totalDefinitionCount_);
      }
      if (peakBytes_ != 0L) {
        output.writeInt64(24, peakBytes_);
      }
      if (residualBytes_ != 0L) {
        output.writeInt64(25, residualBytes_);
      }
      if (outputBytes_ != 0L) {
        output.writeInt64(26, outputBytes_);
      }
      if (totalPeakBytes_ != 0L) {
        output.writeInt64(27, totalPeakBytes_);
      }
      if (totalResidualBytes_ != 0L) {
        output.writeInt64(28, totalResidualBytes_);
      }
      if (totalOutputBytes_ != 0L) {
        output.writeInt64(29, totalOutputBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (execMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, execMicros_);
      }
      if (requestedBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, requestedBytes_);
      }
      if (parameters_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, parameters_);
      }
      if (totalExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, totalExecMicros_);
      }
      if (totalRequestedBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, totalRequestedBytes_);
      }
      if (totalParameters_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, totalParameters_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < devices_.size(); i++) {
          dataSize += computeStringSizeNoTag(devices_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDevicesList().size();
      }
      for (int i = 0; i < shapes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, shapes_.get(i));
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, children_.get(i));
      }
      if (floatOps_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, floatOps_);
      }
      if (totalFloatOps_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, totalFloatOps_);
      }
      if (tensorValue_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getTensorValue());
      }
      for (java.util.Map.Entry<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> entry
           : internalGetInputShapes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
        inputShapes__ = InputShapesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(16, inputShapes__);
      }
      if (acceleratorExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, acceleratorExecMicros_);
      }
      if (cpuExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, cpuExecMicros_);
      }
      if (totalAcceleratorExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, totalAcceleratorExecMicros_);
      }
      if (totalCpuExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, totalCpuExecMicros_);
      }
      if (runCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, runCount_);
      }
      if (totalRunCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(22, totalRunCount_);
      }
      if (totalDefinitionCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, totalDefinitionCount_);
      }
      if (peakBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, peakBytes_);
      }
      if (residualBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, residualBytes_);
      }
      if (outputBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, outputBytes_);
      }
      if (totalPeakBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(27, totalPeakBytes_);
      }
      if (totalResidualBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(28, totalResidualBytes_);
      }
      if (totalOutputBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(29, totalOutputBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tfprof.TfprofOutput.GraphNodeProto)) {
        return super.equals(obj);
      }
      tensorflow.tfprof.TfprofOutput.GraphNodeProto other = (tensorflow.tfprof.TfprofOutput.GraphNodeProto) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasTensorValue() != other.hasTensorValue()) return false;
      if (hasTensorValue()) {
        if (!getTensorValue()
            .equals(other.getTensorValue())) return false;
      }
      if (getRunCount()
          != other.getRunCount()) return false;
      if (getExecMicros()
          != other.getExecMicros()) return false;
      if (getAcceleratorExecMicros()
          != other.getAcceleratorExecMicros()) return false;
      if (getCpuExecMicros()
          != other.getCpuExecMicros()) return false;
      if (getRequestedBytes()
          != other.getRequestedBytes()) return false;
      if (getPeakBytes()
          != other.getPeakBytes()) return false;
      if (getResidualBytes()
          != other.getResidualBytes()) return false;
      if (getOutputBytes()
          != other.getOutputBytes()) return false;
      if (getParameters()
          != other.getParameters()) return false;
      if (getFloatOps()
          != other.getFloatOps()) return false;
      if (!getDevicesList()
          .equals(other.getDevicesList())) return false;
      if (getTotalDefinitionCount()
          != other.getTotalDefinitionCount()) return false;
      if (getTotalRunCount()
          != other.getTotalRunCount()) return false;
      if (getTotalExecMicros()
          != other.getTotalExecMicros()) return false;
      if (getTotalAcceleratorExecMicros()
          != other.getTotalAcceleratorExecMicros()) return false;
      if (getTotalCpuExecMicros()
          != other.getTotalCpuExecMicros()) return false;
      if (getTotalRequestedBytes()
          != other.getTotalRequestedBytes()) return false;
      if (getTotalPeakBytes()
          != other.getTotalPeakBytes()) return false;
      if (getTotalResidualBytes()
          != other.getTotalResidualBytes()) return false;
      if (getTotalOutputBytes()
          != other.getTotalOutputBytes()) return false;
      if (getTotalParameters()
          != other.getTotalParameters()) return false;
      if (getTotalFloatOps()
          != other.getTotalFloatOps()) return false;
      if (!getShapesList()
          .equals(other.getShapesList())) return false;
      if (!internalGetInputShapes().equals(
          other.internalGetInputShapes())) return false;
      if (!getChildrenList()
          .equals(other.getChildrenList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasTensorValue()) {
        hash = (37 * hash) + TENSOR_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getTensorValue().hashCode();
      }
      hash = (37 * hash) + RUN_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRunCount());
      hash = (37 * hash) + EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecMicros());
      hash = (37 * hash) + ACCELERATOR_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAcceleratorExecMicros());
      hash = (37 * hash) + CPU_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCpuExecMicros());
      hash = (37 * hash) + REQUESTED_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRequestedBytes());
      hash = (37 * hash) + PEAK_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPeakBytes());
      hash = (37 * hash) + RESIDUAL_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getResidualBytes());
      hash = (37 * hash) + OUTPUT_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOutputBytes());
      hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getParameters());
      hash = (37 * hash) + FLOAT_OPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFloatOps());
      if (getDevicesCount() > 0) {
        hash = (37 * hash) + DEVICES_FIELD_NUMBER;
        hash = (53 * hash) + getDevicesList().hashCode();
      }
      hash = (37 * hash) + TOTAL_DEFINITION_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalDefinitionCount());
      hash = (37 * hash) + TOTAL_RUN_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalRunCount());
      hash = (37 * hash) + TOTAL_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalExecMicros());
      hash = (37 * hash) + TOTAL_ACCELERATOR_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalAcceleratorExecMicros());
      hash = (37 * hash) + TOTAL_CPU_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalCpuExecMicros());
      hash = (37 * hash) + TOTAL_REQUESTED_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalRequestedBytes());
      hash = (37 * hash) + TOTAL_PEAK_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalPeakBytes());
      hash = (37 * hash) + TOTAL_RESIDUAL_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalResidualBytes());
      hash = (37 * hash) + TOTAL_OUTPUT_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalOutputBytes());
      hash = (37 * hash) + TOTAL_PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalParameters());
      hash = (37 * hash) + TOTAL_FLOAT_OPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalFloatOps());
      if (getShapesCount() > 0) {
        hash = (37 * hash) + SHAPES_FIELD_NUMBER;
        hash = (53 * hash) + getShapesList().hashCode();
      }
      if (!internalGetInputShapes().getMap().isEmpty()) {
        hash = (37 * hash) + INPUT_SHAPES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInputShapes().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.GraphNodeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A node in TensorFlow graph. Used by scope/graph view.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tfprof.GraphNodeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.GraphNodeProto)
        tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_GraphNodeProto_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetInputShapes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 16:
            return internalGetMutableInputShapes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_GraphNodeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.GraphNodeProto.class, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder.class);
      }

      // Construct using tensorflow.tfprof.TfprofOutput.GraphNodeProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        tensorValue_ = null;
        if (tensorValueBuilder_ != null) {
          tensorValueBuilder_.dispose();
          tensorValueBuilder_ = null;
        }
        runCount_ = 0L;
        execMicros_ = 0L;
        acceleratorExecMicros_ = 0L;
        cpuExecMicros_ = 0L;
        requestedBytes_ = 0L;
        peakBytes_ = 0L;
        residualBytes_ = 0L;
        outputBytes_ = 0L;
        parameters_ = 0L;
        floatOps_ = 0L;
        devices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        totalDefinitionCount_ = 0L;
        totalRunCount_ = 0L;
        totalExecMicros_ = 0L;
        totalAcceleratorExecMicros_ = 0L;
        totalCpuExecMicros_ = 0L;
        totalRequestedBytes_ = 0L;
        totalPeakBytes_ = 0L;
        totalResidualBytes_ = 0L;
        totalOutputBytes_ = 0L;
        totalParameters_ = 0L;
        totalFloatOps_ = 0L;
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
        } else {
          shapes_ = null;
          shapesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        internalGetMutableInputShapes().clear();
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
        } else {
          children_ = null;
          childrenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_GraphNodeProto_descriptor;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto getDefaultInstanceForType() {
        return tensorflow.tfprof.TfprofOutput.GraphNodeProto.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto build() {
        tensorflow.tfprof.TfprofOutput.GraphNodeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto buildPartial() {
        tensorflow.tfprof.TfprofOutput.GraphNodeProto result = new tensorflow.tfprof.TfprofOutput.GraphNodeProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(tensorflow.tfprof.TfprofOutput.GraphNodeProto result) {
        if (((bitField0_ & 0x00001000) != 0)) {
          devices_ = devices_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.devices_ = devices_;
        if (shapesBuilder_ == null) {
          if (((bitField0_ & 0x01000000) != 0)) {
            shapes_ = java.util.Collections.unmodifiableList(shapes_);
            bitField0_ = (bitField0_ & ~0x01000000);
          }
          result.shapes_ = shapes_;
        } else {
          result.shapes_ = shapesBuilder_.build();
        }
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x04000000) != 0)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x04000000);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
      }

      private void buildPartial0(tensorflow.tfprof.TfprofOutput.GraphNodeProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tensorValue_ = tensorValueBuilder_ == null
              ? tensorValue_
              : tensorValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.runCount_ = runCount_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.execMicros_ = execMicros_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.acceleratorExecMicros_ = acceleratorExecMicros_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.cpuExecMicros_ = cpuExecMicros_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.requestedBytes_ = requestedBytes_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.peakBytes_ = peakBytes_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.residualBytes_ = residualBytes_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.outputBytes_ = outputBytes_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.parameters_ = parameters_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.floatOps_ = floatOps_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.totalDefinitionCount_ = totalDefinitionCount_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.totalRunCount_ = totalRunCount_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.totalExecMicros_ = totalExecMicros_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.totalAcceleratorExecMicros_ = totalAcceleratorExecMicros_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.totalCpuExecMicros_ = totalCpuExecMicros_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.totalRequestedBytes_ = totalRequestedBytes_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.totalPeakBytes_ = totalPeakBytes_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.totalResidualBytes_ = totalResidualBytes_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.totalOutputBytes_ = totalOutputBytes_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.totalParameters_ = totalParameters_;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.totalFloatOps_ = totalFloatOps_;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.inputShapes_ = internalGetInputShapes();
          result.inputShapes_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tfprof.TfprofOutput.GraphNodeProto) {
          return mergeFrom((tensorflow.tfprof.TfprofOutput.GraphNodeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.GraphNodeProto other) {
        if (other == tensorflow.tfprof.TfprofOutput.GraphNodeProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasTensorValue()) {
          mergeTensorValue(other.getTensorValue());
        }
        if (other.getRunCount() != 0L) {
          setRunCount(other.getRunCount());
        }
        if (other.getExecMicros() != 0L) {
          setExecMicros(other.getExecMicros());
        }
        if (other.getAcceleratorExecMicros() != 0L) {
          setAcceleratorExecMicros(other.getAcceleratorExecMicros());
        }
        if (other.getCpuExecMicros() != 0L) {
          setCpuExecMicros(other.getCpuExecMicros());
        }
        if (other.getRequestedBytes() != 0L) {
          setRequestedBytes(other.getRequestedBytes());
        }
        if (other.getPeakBytes() != 0L) {
          setPeakBytes(other.getPeakBytes());
        }
        if (other.getResidualBytes() != 0L) {
          setResidualBytes(other.getResidualBytes());
        }
        if (other.getOutputBytes() != 0L) {
          setOutputBytes(other.getOutputBytes());
        }
        if (other.getParameters() != 0L) {
          setParameters(other.getParameters());
        }
        if (other.getFloatOps() != 0L) {
          setFloatOps(other.getFloatOps());
        }
        if (!other.devices_.isEmpty()) {
          if (devices_.isEmpty()) {
            devices_ = other.devices_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureDevicesIsMutable();
            devices_.addAll(other.devices_);
          }
          onChanged();
        }
        if (other.getTotalDefinitionCount() != 0L) {
          setTotalDefinitionCount(other.getTotalDefinitionCount());
        }
        if (other.getTotalRunCount() != 0L) {
          setTotalRunCount(other.getTotalRunCount());
        }
        if (other.getTotalExecMicros() != 0L) {
          setTotalExecMicros(other.getTotalExecMicros());
        }
        if (other.getTotalAcceleratorExecMicros() != 0L) {
          setTotalAcceleratorExecMicros(other.getTotalAcceleratorExecMicros());
        }
        if (other.getTotalCpuExecMicros() != 0L) {
          setTotalCpuExecMicros(other.getTotalCpuExecMicros());
        }
        if (other.getTotalRequestedBytes() != 0L) {
          setTotalRequestedBytes(other.getTotalRequestedBytes());
        }
        if (other.getTotalPeakBytes() != 0L) {
          setTotalPeakBytes(other.getTotalPeakBytes());
        }
        if (other.getTotalResidualBytes() != 0L) {
          setTotalResidualBytes(other.getTotalResidualBytes());
        }
        if (other.getTotalOutputBytes() != 0L) {
          setTotalOutputBytes(other.getTotalOutputBytes());
        }
        if (other.getTotalParameters() != 0L) {
          setTotalParameters(other.getTotalParameters());
        }
        if (other.getTotalFloatOps() != 0L) {
          setTotalFloatOps(other.getTotalFloatOps());
        }
        if (shapesBuilder_ == null) {
          if (!other.shapes_.isEmpty()) {
            if (shapes_.isEmpty()) {
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x01000000);
            } else {
              ensureShapesIsMutable();
              shapes_.addAll(other.shapes_);
            }
            onChanged();
          }
        } else {
          if (!other.shapes_.isEmpty()) {
            if (shapesBuilder_.isEmpty()) {
              shapesBuilder_.dispose();
              shapesBuilder_ = null;
              shapes_ = other.shapes_;
              bitField0_ = (bitField0_ & ~0x01000000);
              shapesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getShapesFieldBuilder() : null;
            } else {
              shapesBuilder_.addAllMessages(other.shapes_);
            }
          }
        }
        internalGetMutableInputShapes().mergeFrom(
            other.internalGetInputShapes());
        bitField0_ |= 0x02000000;
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x04000000);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x04000000);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                execMicros_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 16
              case 24: {
                requestedBytes_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 24
              case 32: {
                parameters_ = input.readInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 32
              case 48: {
                totalExecMicros_ = input.readInt64();
                bitField0_ |= 0x00008000;
                break;
              } // case 48
              case 56: {
                totalRequestedBytes_ = input.readInt64();
                bitField0_ |= 0x00040000;
                break;
              } // case 56
              case 64: {
                totalParameters_ = input.readInt64();
                bitField0_ |= 0x00400000;
                break;
              } // case 64
              case 82: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureDevicesIsMutable();
                devices_.add(s);
                break;
              } // case 82
              case 90: {
                org.tensorflow.framework.TensorShapeProto m =
                    input.readMessage(
                        org.tensorflow.framework.TensorShapeProto.parser(),
                        extensionRegistry);
                if (shapesBuilder_ == null) {
                  ensureShapesIsMutable();
                  shapes_.add(m);
                } else {
                  shapesBuilder_.addMessage(m);
                }
                break;
              } // case 90
              case 98: {
                tensorflow.tfprof.TfprofOutput.GraphNodeProto m =
                    input.readMessage(
                        tensorflow.tfprof.TfprofOutput.GraphNodeProto.parser(),
                        extensionRegistry);
                if (childrenBuilder_ == null) {
                  ensureChildrenIsMutable();
                  children_.add(m);
                } else {
                  childrenBuilder_.addMessage(m);
                }
                break;
              } // case 98
              case 104: {
                floatOps_ = input.readInt64();
                bitField0_ |= 0x00000800;
                break;
              } // case 104
              case 112: {
                totalFloatOps_ = input.readInt64();
                bitField0_ |= 0x00800000;
                break;
              } // case 112
              case 122: {
                input.readMessage(
                    getTensorValueFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 122
              case 130: {
                com.google.protobuf.MapEntry<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
                inputShapes__ = input.readMessage(
                    InputShapesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableInputShapes().getMutableMap().put(
                    inputShapes__.getKey(), inputShapes__.getValue());
                bitField0_ |= 0x02000000;
                break;
              } // case 130
              case 136: {
                acceleratorExecMicros_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 136
              case 144: {
                cpuExecMicros_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 144
              case 152: {
                totalAcceleratorExecMicros_ = input.readInt64();
                bitField0_ |= 0x00010000;
                break;
              } // case 152
              case 160: {
                totalCpuExecMicros_ = input.readInt64();
                bitField0_ |= 0x00020000;
                break;
              } // case 160
              case 168: {
                runCount_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 168
              case 176: {
                totalRunCount_ = input.readInt64();
                bitField0_ |= 0x00004000;
                break;
              } // case 176
              case 184: {
                totalDefinitionCount_ = input.readInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 184
              case 192: {
                peakBytes_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 192
              case 200: {
                residualBytes_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 200
              case 208: {
                outputBytes_ = input.readInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 208
              case 216: {
                totalPeakBytes_ = input.readInt64();
                bitField0_ |= 0x00080000;
                break;
              } // case 216
              case 224: {
                totalResidualBytes_ = input.readInt64();
                bitField0_ |= 0x00100000;
                break;
              } // case 224
              case 232: {
                totalOutputBytes_ = input.readInt64();
                bitField0_ |= 0x00200000;
                break;
              } // case 232
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * op name.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private tensorflow.tfprof.TfprofOutput.TFProfTensorProto tensorValue_;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.TFProfTensorProto, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder, tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder> tensorValueBuilder_;
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       * @return Whether the tensorValue field is set.
       */
      public boolean hasTensorValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       * @return The tensorValue.
       */
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto getTensorValue() {
        if (tensorValueBuilder_ == null) {
          return tensorValue_ == null ? tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
        } else {
          return tensorValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder setTensorValue(tensorflow.tfprof.TfprofOutput.TFProfTensorProto value) {
        if (tensorValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tensorValue_ = value;
        } else {
          tensorValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder setTensorValue(
          tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder builderForValue) {
        if (tensorValueBuilder_ == null) {
          tensorValue_ = builderForValue.build();
        } else {
          tensorValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder mergeTensorValue(tensorflow.tfprof.TfprofOutput.TFProfTensorProto value) {
        if (tensorValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tensorValue_ != null &&
            tensorValue_ != tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance()) {
            getTensorValueBuilder().mergeFrom(value);
          } else {
            tensorValue_ = value;
          }
        } else {
          tensorValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public Builder clearTensorValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tensorValue_ = null;
        if (tensorValueBuilder_ != null) {
          tensorValueBuilder_.dispose();
          tensorValueBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder getTensorValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTensorValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      public tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder getTensorValueOrBuilder() {
        if (tensorValueBuilder_ != null) {
          return tensorValueBuilder_.getMessageOrBuilder();
        } else {
          return tensorValue_ == null ?
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto.getDefaultInstance() : tensorValue_;
        }
      }
      /**
       * <pre>
       * tensor value restored from checkpoint.
       * </pre>
       *
       * <code>.tensorflow.tfprof.TFProfTensorProto tensor_value = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.TFProfTensorProto, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder, tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder> 
          getTensorValueFieldBuilder() {
        if (tensorValueBuilder_ == null) {
          tensorValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tfprof.TfprofOutput.TFProfTensorProto, tensorflow.tfprof.TfprofOutput.TFProfTensorProto.Builder, tensorflow.tfprof.TfprofOutput.TFProfTensorProtoOrBuilder>(
                  getTensorValue(),
                  getParentForChildren(),
                  isClean());
          tensorValue_ = null;
        }
        return tensorValueBuilder_;
      }

      private long runCount_ ;
      /**
       * <pre>
       * op execution time.
       * A node can be defined once but run multiple times in tf.while_loop.
       * the times sum up all different runs.
       * </pre>
       *
       * <code>int64 run_count = 21;</code>
       * @return The runCount.
       */
      @java.lang.Override
      public long getRunCount() {
        return runCount_;
      }
      /**
       * <pre>
       * op execution time.
       * A node can be defined once but run multiple times in tf.while_loop.
       * the times sum up all different runs.
       * </pre>
       *
       * <code>int64 run_count = 21;</code>
       * @param value The runCount to set.
       * @return This builder for chaining.
       */
      public Builder setRunCount(long value) {
        
        runCount_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * op execution time.
       * A node can be defined once but run multiple times in tf.while_loop.
       * the times sum up all different runs.
       * </pre>
       *
       * <code>int64 run_count = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearRunCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        runCount_ = 0L;
        onChanged();
        return this;
      }

      private long execMicros_ ;
      /**
       * <code>int64 exec_micros = 2;</code>
       * @return The execMicros.
       */
      @java.lang.Override
      public long getExecMicros() {
        return execMicros_;
      }
      /**
       * <code>int64 exec_micros = 2;</code>
       * @param value The execMicros to set.
       * @return This builder for chaining.
       */
      public Builder setExecMicros(long value) {
        
        execMicros_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 exec_micros = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000008);
        execMicros_ = 0L;
        onChanged();
        return this;
      }

      private long acceleratorExecMicros_ ;
      /**
       * <code>int64 accelerator_exec_micros = 17;</code>
       * @return The acceleratorExecMicros.
       */
      @java.lang.Override
      public long getAcceleratorExecMicros() {
        return acceleratorExecMicros_;
      }
      /**
       * <code>int64 accelerator_exec_micros = 17;</code>
       * @param value The acceleratorExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setAcceleratorExecMicros(long value) {
        
        acceleratorExecMicros_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int64 accelerator_exec_micros = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearAcceleratorExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000010);
        acceleratorExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long cpuExecMicros_ ;
      /**
       * <code>int64 cpu_exec_micros = 18;</code>
       * @return The cpuExecMicros.
       */
      @java.lang.Override
      public long getCpuExecMicros() {
        return cpuExecMicros_;
      }
      /**
       * <code>int64 cpu_exec_micros = 18;</code>
       * @param value The cpuExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setCpuExecMicros(long value) {
        
        cpuExecMicros_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>int64 cpu_exec_micros = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpuExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cpuExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long requestedBytes_ ;
      /**
       * <pre>
       * Total bytes requested by the op.
       * </pre>
       *
       * <code>int64 requested_bytes = 3;</code>
       * @return The requestedBytes.
       */
      @java.lang.Override
      public long getRequestedBytes() {
        return requestedBytes_;
      }
      /**
       * <pre>
       * Total bytes requested by the op.
       * </pre>
       *
       * <code>int64 requested_bytes = 3;</code>
       * @param value The requestedBytes to set.
       * @return This builder for chaining.
       */
      public Builder setRequestedBytes(long value) {
        
        requestedBytes_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total bytes requested by the op.
       * </pre>
       *
       * <code>int64 requested_bytes = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestedBytes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        requestedBytes_ = 0L;
        onChanged();
        return this;
      }

      private long peakBytes_ ;
      /**
       * <pre>
       * Max bytes allocated and being used by the op at a point.
       * </pre>
       *
       * <code>int64 peak_bytes = 24;</code>
       * @return The peakBytes.
       */
      @java.lang.Override
      public long getPeakBytes() {
        return peakBytes_;
      }
      /**
       * <pre>
       * Max bytes allocated and being used by the op at a point.
       * </pre>
       *
       * <code>int64 peak_bytes = 24;</code>
       * @param value The peakBytes to set.
       * @return This builder for chaining.
       */
      public Builder setPeakBytes(long value) {
        
        peakBytes_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max bytes allocated and being used by the op at a point.
       * </pre>
       *
       * <code>int64 peak_bytes = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeakBytes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        peakBytes_ = 0L;
        onChanged();
        return this;
      }

      private long residualBytes_ ;
      /**
       * <pre>
       * Total bytes requested by the op and not released before end.
       * </pre>
       *
       * <code>int64 residual_bytes = 25;</code>
       * @return The residualBytes.
       */
      @java.lang.Override
      public long getResidualBytes() {
        return residualBytes_;
      }
      /**
       * <pre>
       * Total bytes requested by the op and not released before end.
       * </pre>
       *
       * <code>int64 residual_bytes = 25;</code>
       * @param value The residualBytes to set.
       * @return This builder for chaining.
       */
      public Builder setResidualBytes(long value) {
        
        residualBytes_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total bytes requested by the op and not released before end.
       * </pre>
       *
       * <code>int64 residual_bytes = 25;</code>
       * @return This builder for chaining.
       */
      public Builder clearResidualBytes() {
        bitField0_ = (bitField0_ & ~0x00000100);
        residualBytes_ = 0L;
        onChanged();
        return this;
      }

      private long outputBytes_ ;
      /**
       * <pre>
       * Total bytes output by the op (not necessarily allocated by the op).
       * </pre>
       *
       * <code>int64 output_bytes = 26;</code>
       * @return The outputBytes.
       */
      @java.lang.Override
      public long getOutputBytes() {
        return outputBytes_;
      }
      /**
       * <pre>
       * Total bytes output by the op (not necessarily allocated by the op).
       * </pre>
       *
       * <code>int64 output_bytes = 26;</code>
       * @param value The outputBytes to set.
       * @return This builder for chaining.
       */
      public Builder setOutputBytes(long value) {
        
        outputBytes_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total bytes output by the op (not necessarily allocated by the op).
       * </pre>
       *
       * <code>int64 output_bytes = 26;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputBytes() {
        bitField0_ = (bitField0_ & ~0x00000200);
        outputBytes_ = 0L;
        onChanged();
        return this;
      }

      private long parameters_ ;
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>int64 parameters = 4;</code>
       * @return The parameters.
       */
      @java.lang.Override
      public long getParameters() {
        return parameters_;
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>int64 parameters = 4;</code>
       * @param value The parameters to set.
       * @return This builder for chaining.
       */
      public Builder setParameters(long value) {
        
        parameters_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>int64 parameters = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000400);
        parameters_ = 0L;
        onChanged();
        return this;
      }

      private long floatOps_ ;
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>int64 float_ops = 13;</code>
       * @return The floatOps.
       */
      @java.lang.Override
      public long getFloatOps() {
        return floatOps_;
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>int64 float_ops = 13;</code>
       * @param value The floatOps to set.
       * @return This builder for chaining.
       */
      public Builder setFloatOps(long value) {
        
        floatOps_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>int64 float_ops = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatOps() {
        bitField0_ = (bitField0_ & ~0x00000800);
        floatOps_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList devices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDevicesIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          devices_ = new com.google.protobuf.LazyStringArrayList(devices_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @return A list containing the devices.
       */
      public com.google.protobuf.ProtocolStringList
          getDevicesList() {
        return devices_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @return The count of devices.
       */
      public int getDevicesCount() {
        return devices_.size();
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @param index The index of the element to return.
       * @return The devices at the given index.
       */
      public java.lang.String getDevices(int index) {
        return devices_.get(index);
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @param index The index of the value to return.
       * @return The bytes of the devices at the given index.
       */
      public com.google.protobuf.ByteString
          getDevicesBytes(int index) {
        return devices_.getByteString(index);
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @param index The index to set the value at.
       * @param value The devices to set.
       * @return This builder for chaining.
       */
      public Builder setDevices(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDevicesIsMutable();
        devices_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @param value The devices to add.
       * @return This builder for chaining.
       */
      public Builder addDevices(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDevicesIsMutable();
        devices_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @param values The devices to add.
       * @return This builder for chaining.
       */
      public Builder addAllDevices(
          java.lang.Iterable<java.lang.String> values) {
        ensureDevicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, devices_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDevices() {
        devices_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Device the op is assigned to.
       * Since an op can fire multiple kernel calls, there can be multiple devices.
       * </pre>
       *
       * <code>repeated string devices = 10;</code>
       * @param value The bytes of the devices to add.
       * @return This builder for chaining.
       */
      public Builder addDevicesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureDevicesIsMutable();
        devices_.add(value);
        onChanged();
        return this;
      }

      private long totalDefinitionCount_ ;
      /**
       * <pre>
       * The following are the aggregated stats from all *accounted* children and
       * the node itself. The actual children depend on the data structure used.
       * In graph view, children are inputs recursively.
       * In scope view, children are nodes under the name scope.
       * </pre>
       *
       * <code>int64 total_definition_count = 23;</code>
       * @return The totalDefinitionCount.
       */
      @java.lang.Override
      public long getTotalDefinitionCount() {
        return totalDefinitionCount_;
      }
      /**
       * <pre>
       * The following are the aggregated stats from all *accounted* children and
       * the node itself. The actual children depend on the data structure used.
       * In graph view, children are inputs recursively.
       * In scope view, children are nodes under the name scope.
       * </pre>
       *
       * <code>int64 total_definition_count = 23;</code>
       * @param value The totalDefinitionCount to set.
       * @return This builder for chaining.
       */
      public Builder setTotalDefinitionCount(long value) {
        
        totalDefinitionCount_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The following are the aggregated stats from all *accounted* children and
       * the node itself. The actual children depend on the data structure used.
       * In graph view, children are inputs recursively.
       * In scope view, children are nodes under the name scope.
       * </pre>
       *
       * <code>int64 total_definition_count = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalDefinitionCount() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalDefinitionCount_ = 0L;
        onChanged();
        return this;
      }

      private long totalRunCount_ ;
      /**
       * <code>int64 total_run_count = 22;</code>
       * @return The totalRunCount.
       */
      @java.lang.Override
      public long getTotalRunCount() {
        return totalRunCount_;
      }
      /**
       * <code>int64 total_run_count = 22;</code>
       * @param value The totalRunCount to set.
       * @return This builder for chaining.
       */
      public Builder setTotalRunCount(long value) {
        
        totalRunCount_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_run_count = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalRunCount() {
        bitField0_ = (bitField0_ & ~0x00004000);
        totalRunCount_ = 0L;
        onChanged();
        return this;
      }

      private long totalExecMicros_ ;
      /**
       * <code>int64 total_exec_micros = 6;</code>
       * @return The totalExecMicros.
       */
      @java.lang.Override
      public long getTotalExecMicros() {
        return totalExecMicros_;
      }
      /**
       * <code>int64 total_exec_micros = 6;</code>
       * @param value The totalExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setTotalExecMicros(long value) {
        
        totalExecMicros_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_exec_micros = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalExecMicros() {
        bitField0_ = (bitField0_ & ~0x00008000);
        totalExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalAcceleratorExecMicros_ ;
      /**
       * <code>int64 total_accelerator_exec_micros = 19;</code>
       * @return The totalAcceleratorExecMicros.
       */
      @java.lang.Override
      public long getTotalAcceleratorExecMicros() {
        return totalAcceleratorExecMicros_;
      }
      /**
       * <code>int64 total_accelerator_exec_micros = 19;</code>
       * @param value The totalAcceleratorExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setTotalAcceleratorExecMicros(long value) {
        
        totalAcceleratorExecMicros_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_accelerator_exec_micros = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalAcceleratorExecMicros() {
        bitField0_ = (bitField0_ & ~0x00010000);
        totalAcceleratorExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalCpuExecMicros_ ;
      /**
       * <code>int64 total_cpu_exec_micros = 20;</code>
       * @return The totalCpuExecMicros.
       */
      @java.lang.Override
      public long getTotalCpuExecMicros() {
        return totalCpuExecMicros_;
      }
      /**
       * <code>int64 total_cpu_exec_micros = 20;</code>
       * @param value The totalCpuExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setTotalCpuExecMicros(long value) {
        
        totalCpuExecMicros_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_cpu_exec_micros = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalCpuExecMicros() {
        bitField0_ = (bitField0_ & ~0x00020000);
        totalCpuExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalRequestedBytes_ ;
      /**
       * <code>int64 total_requested_bytes = 7;</code>
       * @return The totalRequestedBytes.
       */
      @java.lang.Override
      public long getTotalRequestedBytes() {
        return totalRequestedBytes_;
      }
      /**
       * <code>int64 total_requested_bytes = 7;</code>
       * @param value The totalRequestedBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalRequestedBytes(long value) {
        
        totalRequestedBytes_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_requested_bytes = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalRequestedBytes() {
        bitField0_ = (bitField0_ & ~0x00040000);
        totalRequestedBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalPeakBytes_ ;
      /**
       * <code>int64 total_peak_bytes = 27;</code>
       * @return The totalPeakBytes.
       */
      @java.lang.Override
      public long getTotalPeakBytes() {
        return totalPeakBytes_;
      }
      /**
       * <code>int64 total_peak_bytes = 27;</code>
       * @param value The totalPeakBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPeakBytes(long value) {
        
        totalPeakBytes_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_peak_bytes = 27;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPeakBytes() {
        bitField0_ = (bitField0_ & ~0x00080000);
        totalPeakBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalResidualBytes_ ;
      /**
       * <code>int64 total_residual_bytes = 28;</code>
       * @return The totalResidualBytes.
       */
      @java.lang.Override
      public long getTotalResidualBytes() {
        return totalResidualBytes_;
      }
      /**
       * <code>int64 total_residual_bytes = 28;</code>
       * @param value The totalResidualBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalResidualBytes(long value) {
        
        totalResidualBytes_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_residual_bytes = 28;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalResidualBytes() {
        bitField0_ = (bitField0_ & ~0x00100000);
        totalResidualBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalOutputBytes_ ;
      /**
       * <code>int64 total_output_bytes = 29;</code>
       * @return The totalOutputBytes.
       */
      @java.lang.Override
      public long getTotalOutputBytes() {
        return totalOutputBytes_;
      }
      /**
       * <code>int64 total_output_bytes = 29;</code>
       * @param value The totalOutputBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalOutputBytes(long value) {
        
        totalOutputBytes_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_output_bytes = 29;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalOutputBytes() {
        bitField0_ = (bitField0_ & ~0x00200000);
        totalOutputBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalParameters_ ;
      /**
       * <code>int64 total_parameters = 8;</code>
       * @return The totalParameters.
       */
      @java.lang.Override
      public long getTotalParameters() {
        return totalParameters_;
      }
      /**
       * <code>int64 total_parameters = 8;</code>
       * @param value The totalParameters to set.
       * @return This builder for chaining.
       */
      public Builder setTotalParameters(long value) {
        
        totalParameters_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_parameters = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalParameters() {
        bitField0_ = (bitField0_ & ~0x00400000);
        totalParameters_ = 0L;
        onChanged();
        return this;
      }

      private long totalFloatOps_ ;
      /**
       * <code>int64 total_float_ops = 14;</code>
       * @return The totalFloatOps.
       */
      @java.lang.Override
      public long getTotalFloatOps() {
        return totalFloatOps_;
      }
      /**
       * <code>int64 total_float_ops = 14;</code>
       * @param value The totalFloatOps to set.
       * @return This builder for chaining.
       */
      public Builder setTotalFloatOps(long value) {
        
        totalFloatOps_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_float_ops = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalFloatOps() {
        bitField0_ = (bitField0_ & ~0x00800000);
        totalFloatOps_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<org.tensorflow.framework.TensorShapeProto> shapes_ =
        java.util.Collections.emptyList();
      private void ensureShapesIsMutable() {
        if (!((bitField0_ & 0x01000000) != 0)) {
          shapes_ = new java.util.ArrayList<org.tensorflow.framework.TensorShapeProto>(shapes_);
          bitField0_ |= 0x01000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> shapesBuilder_;

      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public java.util.List<org.tensorflow.framework.TensorShapeProto> getShapesList() {
        if (shapesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(shapes_);
        } else {
          return shapesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public int getShapesCount() {
        if (shapesBuilder_ == null) {
          return shapes_.size();
        } else {
          return shapesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto getShapes(int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);
        } else {
          return shapesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder setShapes(
          int index, org.tensorflow.framework.TensorShapeProto value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.set(index, value);
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder setShapes(
          int index, org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.set(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(org.tensorflow.framework.TensorShapeProto value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(
          int index, org.tensorflow.framework.TensorShapeProto value) {
        if (shapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureShapesIsMutable();
          shapes_.add(index, value);
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(
          org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addShapes(
          int index, org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.add(index, builderForValue.build());
          onChanged();
        } else {
          shapesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder addAllShapes(
          java.lang.Iterable<? extends org.tensorflow.framework.TensorShapeProto> values) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, shapes_);
          onChanged();
        } else {
          shapesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder clearShapes() {
        if (shapesBuilder_ == null) {
          shapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
          onChanged();
        } else {
          shapesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public Builder removeShapes(int index) {
        if (shapesBuilder_ == null) {
          ensureShapesIsMutable();
          shapes_.remove(index);
          onChanged();
        } else {
          shapesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder getShapesBuilder(
          int index) {
        return getShapesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapesOrBuilder(
          int index) {
        if (shapesBuilder_ == null) {
          return shapes_.get(index);  } else {
          return shapesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public java.util.List<? extends org.tensorflow.framework.TensorShapeProtoOrBuilder> 
           getShapesOrBuilderList() {
        if (shapesBuilder_ != null) {
          return shapesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(shapes_);
        }
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder addShapesBuilder() {
        return getShapesFieldBuilder().addBuilder(
            org.tensorflow.framework.TensorShapeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder addShapesBuilder(
          int index) {
        return getShapesFieldBuilder().addBuilder(
            index, org.tensorflow.framework.TensorShapeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * shape information, if available.
       * TODO(xpan): Why is this repeated?
       * </pre>
       *
       * <code>repeated .tensorflow.TensorShapeProto shapes = 11;</code>
       */
      public java.util.List<org.tensorflow.framework.TensorShapeProto.Builder> 
           getShapesBuilderList() {
        return getShapesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
          getShapesFieldBuilder() {
        if (shapesBuilder_ == null) {
          shapesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                  shapes_,
                  ((bitField0_ & 0x01000000) != 0),
                  getParentForChildren(),
                  isClean());
          shapes_ = null;
        }
        return shapesBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, org.tensorflow.framework.TensorShapeProto> inputShapes_;
      private com.google.protobuf.MapField<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
          internalGetInputShapes() {
        if (inputShapes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InputShapesDefaultEntryHolder.defaultEntry);
        }
        return inputShapes_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
          internalGetMutableInputShapes() {
        if (inputShapes_ == null) {
          inputShapes_ = com.google.protobuf.MapField.newMapField(
              InputShapesDefaultEntryHolder.defaultEntry);
        }
        if (!inputShapes_.isMutable()) {
          inputShapes_ = inputShapes_.copy();
        }
        bitField0_ |= 0x02000000;
        onChanged();
        return inputShapes_;
      }
      public int getInputShapesCount() {
        return internalGetInputShapes().getMap().size();
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      @java.lang.Override
      public boolean containsInputShapes(
          int key) {
        
        return internalGetInputShapes().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInputShapesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> getInputShapes() {
        return getInputShapesMap();
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> getInputShapesMap() {
        return internalGetInputShapes().getMap();
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      @java.lang.Override
      public /* nullable */
org.tensorflow.framework.TensorShapeProto getInputShapesOrDefault(
          int key,
          /* nullable */
org.tensorflow.framework.TensorShapeProto defaultValue) {
        
        java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> map =
            internalGetInputShapes().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      @java.lang.Override
      public org.tensorflow.framework.TensorShapeProto getInputShapesOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> map =
            internalGetInputShapes().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearInputShapes() {
        bitField0_ = (bitField0_ & ~0x02000000);
        internalGetMutableInputShapes().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      public Builder removeInputShapes(
          int key) {
        
        internalGetMutableInputShapes().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto>
          getMutableInputShapes() {
        bitField0_ |= 0x02000000;
        return internalGetMutableInputShapes().getMutableMap();
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      public Builder putInputShapes(
          int key,
          org.tensorflow.framework.TensorShapeProto value) {
        
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableInputShapes().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>map&lt;int32, .tensorflow.TensorShapeProto&gt; input_shapes = 16;</code>
       */
      public Builder putAllInputShapes(
          java.util.Map<java.lang.Integer, org.tensorflow.framework.TensorShapeProto> values) {
        internalGetMutableInputShapes().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x02000000;
        return this;
      }

      private java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x04000000) != 0)) {
          children_ = new java.util.ArrayList<tensorflow.tfprof.TfprofOutput.GraphNodeProto>(children_);
          bitField0_ |= 0x04000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.GraphNodeProto, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> childrenBuilder_;

      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder setChildren(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder setChildren(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder addChildren(tensorflow.tfprof.TfprofOutput.GraphNodeProto value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder addChildren(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder addChildren(
          tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder addChildren(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProto> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x04000000);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public java.util.List<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            tensorflow.tfprof.TfprofOutput.GraphNodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, tensorflow.tfprof.TfprofOutput.GraphNodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Descendants of the graph. The actual descendants depend on the data
       * structure used (scope, graph).
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto children = 12;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.GraphNodeProto, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tfprof.TfprofOutput.GraphNodeProto, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder>(
                  children_,
                  ((bitField0_ & 0x04000000) != 0),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.GraphNodeProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tfprof.GraphNodeProto)
    private static final tensorflow.tfprof.TfprofOutput.GraphNodeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.GraphNodeProto();
    }

    public static tensorflow.tfprof.TfprofOutput.GraphNodeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphNodeProto>
        PARSER = new com.google.protobuf.AbstractParser<GraphNodeProto>() {
      @java.lang.Override
      public GraphNodeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GraphNodeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphNodeProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.GraphNodeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultiGraphNodeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.MultiGraphNodeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Name of the node.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * Name of the node.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * code execution time.
     * </pre>
     *
     * <code>int64 exec_micros = 2;</code>
     * @return The execMicros.
     */
    long getExecMicros();

    /**
     * <code>int64 accelerator_exec_micros = 12;</code>
     * @return The acceleratorExecMicros.
     */
    long getAcceleratorExecMicros();

    /**
     * <code>int64 cpu_exec_micros = 13;</code>
     * @return The cpuExecMicros.
     */
    long getCpuExecMicros();

    /**
     * <pre>
     * Total requested bytes by the code.
     * </pre>
     *
     * <code>int64 requested_bytes = 3;</code>
     * @return The requestedBytes.
     */
    long getRequestedBytes();

    /**
     * <pre>
     * Max bytes allocated and being used by the op at a point.
     * </pre>
     *
     * <code>int64 peak_bytes = 16;</code>
     * @return The peakBytes.
     */
    long getPeakBytes();

    /**
     * <pre>
     * Total bytes requested by the op and not released before end.
     * </pre>
     *
     * <code>int64 residual_bytes = 17;</code>
     * @return The residualBytes.
     */
    long getResidualBytes();

    /**
     * <pre>
     * Total bytes output by the op (not necessarily allocated by the op).
     * </pre>
     *
     * <code>int64 output_bytes = 18;</code>
     * @return The outputBytes.
     */
    long getOutputBytes();

    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>int64 parameters = 4;</code>
     * @return The parameters.
     */
    long getParameters();

    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>int64 float_ops = 5;</code>
     * @return The floatOps.
     */
    long getFloatOps();

    /**
     * <pre>
     * The following are the aggregated stats from descendants.
     * The actual descendants depend on the data structure used.
     * </pre>
     *
     * <code>int64 total_exec_micros = 6;</code>
     * @return The totalExecMicros.
     */
    long getTotalExecMicros();

    /**
     * <code>int64 total_accelerator_exec_micros = 14;</code>
     * @return The totalAcceleratorExecMicros.
     */
    long getTotalAcceleratorExecMicros();

    /**
     * <code>int64 total_cpu_exec_micros = 15;</code>
     * @return The totalCpuExecMicros.
     */
    long getTotalCpuExecMicros();

    /**
     * <code>int64 total_requested_bytes = 7;</code>
     * @return The totalRequestedBytes.
     */
    long getTotalRequestedBytes();

    /**
     * <code>int64 total_peak_bytes = 19;</code>
     * @return The totalPeakBytes.
     */
    long getTotalPeakBytes();

    /**
     * <code>int64 total_residual_bytes = 20;</code>
     * @return The totalResidualBytes.
     */
    long getTotalResidualBytes();

    /**
     * <code>int64 total_output_bytes = 21;</code>
     * @return The totalOutputBytes.
     */
    long getTotalOutputBytes();

    /**
     * <code>int64 total_parameters = 8;</code>
     * @return The totalParameters.
     */
    long getTotalParameters();

    /**
     * <code>int64 total_float_ops = 9;</code>
     * @return The totalFloatOps.
     */
    long getTotalFloatOps();

    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> 
        getGraphNodesList();
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    tensorflow.tfprof.TfprofOutput.GraphNodeProto getGraphNodes(int index);
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    int getGraphNodesCount();
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    java.util.List<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
        getGraphNodesOrBuilderList();
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder getGraphNodesOrBuilder(
        int index);

    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    java.util.List<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto> 
        getChildrenList();
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto getChildren(int index);
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    int getChildrenCount();
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    java.util.List<? extends tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder> 
        getChildrenOrBuilderList();
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder getChildrenOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A node that groups multiple GraphNodeProto.
   * Depending on the 'view', the semantics of the TFmultiGraphNodeProto
   * is different:
   * code view: A node groups all TensorFlow graph nodes created by the
   *            Python code.
   * op view:   A node groups all TensorFlow graph nodes that are of type
   *            of the op (e.g. MatMul, Conv2D).
   * </pre>
   *
   * Protobuf type {@code tensorflow.tfprof.MultiGraphNodeProto}
   */
  public static final class MultiGraphNodeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tfprof.MultiGraphNodeProto)
      MultiGraphNodeProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultiGraphNodeProto.newBuilder() to construct.
    private MultiGraphNodeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultiGraphNodeProto() {
      name_ = "";
      graphNodes_ = java.util.Collections.emptyList();
      children_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultiGraphNodeProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_MultiGraphNodeProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_MultiGraphNodeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.class, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of the node.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Name of the node.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXEC_MICROS_FIELD_NUMBER = 2;
    private long execMicros_ = 0L;
    /**
     * <pre>
     * code execution time.
     * </pre>
     *
     * <code>int64 exec_micros = 2;</code>
     * @return The execMicros.
     */
    @java.lang.Override
    public long getExecMicros() {
      return execMicros_;
    }

    public static final int ACCELERATOR_EXEC_MICROS_FIELD_NUMBER = 12;
    private long acceleratorExecMicros_ = 0L;
    /**
     * <code>int64 accelerator_exec_micros = 12;</code>
     * @return The acceleratorExecMicros.
     */
    @java.lang.Override
    public long getAcceleratorExecMicros() {
      return acceleratorExecMicros_;
    }

    public static final int CPU_EXEC_MICROS_FIELD_NUMBER = 13;
    private long cpuExecMicros_ = 0L;
    /**
     * <code>int64 cpu_exec_micros = 13;</code>
     * @return The cpuExecMicros.
     */
    @java.lang.Override
    public long getCpuExecMicros() {
      return cpuExecMicros_;
    }

    public static final int REQUESTED_BYTES_FIELD_NUMBER = 3;
    private long requestedBytes_ = 0L;
    /**
     * <pre>
     * Total requested bytes by the code.
     * </pre>
     *
     * <code>int64 requested_bytes = 3;</code>
     * @return The requestedBytes.
     */
    @java.lang.Override
    public long getRequestedBytes() {
      return requestedBytes_;
    }

    public static final int PEAK_BYTES_FIELD_NUMBER = 16;
    private long peakBytes_ = 0L;
    /**
     * <pre>
     * Max bytes allocated and being used by the op at a point.
     * </pre>
     *
     * <code>int64 peak_bytes = 16;</code>
     * @return The peakBytes.
     */
    @java.lang.Override
    public long getPeakBytes() {
      return peakBytes_;
    }

    public static final int RESIDUAL_BYTES_FIELD_NUMBER = 17;
    private long residualBytes_ = 0L;
    /**
     * <pre>
     * Total bytes requested by the op and not released before end.
     * </pre>
     *
     * <code>int64 residual_bytes = 17;</code>
     * @return The residualBytes.
     */
    @java.lang.Override
    public long getResidualBytes() {
      return residualBytes_;
    }

    public static final int OUTPUT_BYTES_FIELD_NUMBER = 18;
    private long outputBytes_ = 0L;
    /**
     * <pre>
     * Total bytes output by the op (not necessarily allocated by the op).
     * </pre>
     *
     * <code>int64 output_bytes = 18;</code>
     * @return The outputBytes.
     */
    @java.lang.Override
    public long getOutputBytes() {
      return outputBytes_;
    }

    public static final int PARAMETERS_FIELD_NUMBER = 4;
    private long parameters_ = 0L;
    /**
     * <pre>
     * Number of parameters if available.
     * </pre>
     *
     * <code>int64 parameters = 4;</code>
     * @return The parameters.
     */
    @java.lang.Override
    public long getParameters() {
      return parameters_;
    }

    public static final int FLOAT_OPS_FIELD_NUMBER = 5;
    private long floatOps_ = 0L;
    /**
     * <pre>
     * Number of float operations.
     * </pre>
     *
     * <code>int64 float_ops = 5;</code>
     * @return The floatOps.
     */
    @java.lang.Override
    public long getFloatOps() {
      return floatOps_;
    }

    public static final int TOTAL_EXEC_MICROS_FIELD_NUMBER = 6;
    private long totalExecMicros_ = 0L;
    /**
     * <pre>
     * The following are the aggregated stats from descendants.
     * The actual descendants depend on the data structure used.
     * </pre>
     *
     * <code>int64 total_exec_micros = 6;</code>
     * @return The totalExecMicros.
     */
    @java.lang.Override
    public long getTotalExecMicros() {
      return totalExecMicros_;
    }

    public static final int TOTAL_ACCELERATOR_EXEC_MICROS_FIELD_NUMBER = 14;
    private long totalAcceleratorExecMicros_ = 0L;
    /**
     * <code>int64 total_accelerator_exec_micros = 14;</code>
     * @return The totalAcceleratorExecMicros.
     */
    @java.lang.Override
    public long getTotalAcceleratorExecMicros() {
      return totalAcceleratorExecMicros_;
    }

    public static final int TOTAL_CPU_EXEC_MICROS_FIELD_NUMBER = 15;
    private long totalCpuExecMicros_ = 0L;
    /**
     * <code>int64 total_cpu_exec_micros = 15;</code>
     * @return The totalCpuExecMicros.
     */
    @java.lang.Override
    public long getTotalCpuExecMicros() {
      return totalCpuExecMicros_;
    }

    public static final int TOTAL_REQUESTED_BYTES_FIELD_NUMBER = 7;
    private long totalRequestedBytes_ = 0L;
    /**
     * <code>int64 total_requested_bytes = 7;</code>
     * @return The totalRequestedBytes.
     */
    @java.lang.Override
    public long getTotalRequestedBytes() {
      return totalRequestedBytes_;
    }

    public static final int TOTAL_PEAK_BYTES_FIELD_NUMBER = 19;
    private long totalPeakBytes_ = 0L;
    /**
     * <code>int64 total_peak_bytes = 19;</code>
     * @return The totalPeakBytes.
     */
    @java.lang.Override
    public long getTotalPeakBytes() {
      return totalPeakBytes_;
    }

    public static final int TOTAL_RESIDUAL_BYTES_FIELD_NUMBER = 20;
    private long totalResidualBytes_ = 0L;
    /**
     * <code>int64 total_residual_bytes = 20;</code>
     * @return The totalResidualBytes.
     */
    @java.lang.Override
    public long getTotalResidualBytes() {
      return totalResidualBytes_;
    }

    public static final int TOTAL_OUTPUT_BYTES_FIELD_NUMBER = 21;
    private long totalOutputBytes_ = 0L;
    /**
     * <code>int64 total_output_bytes = 21;</code>
     * @return The totalOutputBytes.
     */
    @java.lang.Override
    public long getTotalOutputBytes() {
      return totalOutputBytes_;
    }

    public static final int TOTAL_PARAMETERS_FIELD_NUMBER = 8;
    private long totalParameters_ = 0L;
    /**
     * <code>int64 total_parameters = 8;</code>
     * @return The totalParameters.
     */
    @java.lang.Override
    public long getTotalParameters() {
      return totalParameters_;
    }

    public static final int TOTAL_FLOAT_OPS_FIELD_NUMBER = 9;
    private long totalFloatOps_ = 0L;
    /**
     * <code>int64 total_float_ops = 9;</code>
     * @return The totalFloatOps.
     */
    @java.lang.Override
    public long getTotalFloatOps() {
      return totalFloatOps_;
    }

    public static final int GRAPH_NODES_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> graphNodes_;
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> getGraphNodesList() {
      return graphNodes_;
    }
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
        getGraphNodesOrBuilderList() {
      return graphNodes_;
    }
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    @java.lang.Override
    public int getGraphNodesCount() {
      return graphNodes_.size();
    }
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.GraphNodeProto getGraphNodes(int index) {
      return graphNodes_.get(index);
    }
    /**
     * <pre>
     * TensorFlow graph nodes contained by the MultiGraphNodeProto.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder getGraphNodesOrBuilder(
        int index) {
      return graphNodes_.get(index);
    }

    public static final int CHILDREN_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto> children_;
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    @java.lang.Override
    public java.util.List<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto> getChildrenList() {
      return children_;
    }
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder> 
        getChildrenOrBuilderList() {
      return children_;
    }
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    @java.lang.Override
    public int getChildrenCount() {
      return children_.size();
    }
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto getChildren(int index) {
      return children_.get(index);
    }
    /**
     * <pre>
     * Descendants of the node. The actual descendants depend on the data
     * structure used.
     * </pre>
     *
     * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder getChildrenOrBuilder(
        int index) {
      return children_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (execMicros_ != 0L) {
        output.writeInt64(2, execMicros_);
      }
      if (requestedBytes_ != 0L) {
        output.writeInt64(3, requestedBytes_);
      }
      if (parameters_ != 0L) {
        output.writeInt64(4, parameters_);
      }
      if (floatOps_ != 0L) {
        output.writeInt64(5, floatOps_);
      }
      if (totalExecMicros_ != 0L) {
        output.writeInt64(6, totalExecMicros_);
      }
      if (totalRequestedBytes_ != 0L) {
        output.writeInt64(7, totalRequestedBytes_);
      }
      if (totalParameters_ != 0L) {
        output.writeInt64(8, totalParameters_);
      }
      if (totalFloatOps_ != 0L) {
        output.writeInt64(9, totalFloatOps_);
      }
      for (int i = 0; i < graphNodes_.size(); i++) {
        output.writeMessage(10, graphNodes_.get(i));
      }
      for (int i = 0; i < children_.size(); i++) {
        output.writeMessage(11, children_.get(i));
      }
      if (acceleratorExecMicros_ != 0L) {
        output.writeInt64(12, acceleratorExecMicros_);
      }
      if (cpuExecMicros_ != 0L) {
        output.writeInt64(13, cpuExecMicros_);
      }
      if (totalAcceleratorExecMicros_ != 0L) {
        output.writeInt64(14, totalAcceleratorExecMicros_);
      }
      if (totalCpuExecMicros_ != 0L) {
        output.writeInt64(15, totalCpuExecMicros_);
      }
      if (peakBytes_ != 0L) {
        output.writeInt64(16, peakBytes_);
      }
      if (residualBytes_ != 0L) {
        output.writeInt64(17, residualBytes_);
      }
      if (outputBytes_ != 0L) {
        output.writeInt64(18, outputBytes_);
      }
      if (totalPeakBytes_ != 0L) {
        output.writeInt64(19, totalPeakBytes_);
      }
      if (totalResidualBytes_ != 0L) {
        output.writeInt64(20, totalResidualBytes_);
      }
      if (totalOutputBytes_ != 0L) {
        output.writeInt64(21, totalOutputBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (execMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, execMicros_);
      }
      if (requestedBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, requestedBytes_);
      }
      if (parameters_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, parameters_);
      }
      if (floatOps_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, floatOps_);
      }
      if (totalExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, totalExecMicros_);
      }
      if (totalRequestedBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, totalRequestedBytes_);
      }
      if (totalParameters_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, totalParameters_);
      }
      if (totalFloatOps_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, totalFloatOps_);
      }
      for (int i = 0; i < graphNodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, graphNodes_.get(i));
      }
      for (int i = 0; i < children_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, children_.get(i));
      }
      if (acceleratorExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, acceleratorExecMicros_);
      }
      if (cpuExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, cpuExecMicros_);
      }
      if (totalAcceleratorExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, totalAcceleratorExecMicros_);
      }
      if (totalCpuExecMicros_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, totalCpuExecMicros_);
      }
      if (peakBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, peakBytes_);
      }
      if (residualBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, residualBytes_);
      }
      if (outputBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, outputBytes_);
      }
      if (totalPeakBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, totalPeakBytes_);
      }
      if (totalResidualBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, totalResidualBytes_);
      }
      if (totalOutputBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, totalOutputBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto)) {
        return super.equals(obj);
      }
      tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto other = (tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (getExecMicros()
          != other.getExecMicros()) return false;
      if (getAcceleratorExecMicros()
          != other.getAcceleratorExecMicros()) return false;
      if (getCpuExecMicros()
          != other.getCpuExecMicros()) return false;
      if (getRequestedBytes()
          != other.getRequestedBytes()) return false;
      if (getPeakBytes()
          != other.getPeakBytes()) return false;
      if (getResidualBytes()
          != other.getResidualBytes()) return false;
      if (getOutputBytes()
          != other.getOutputBytes()) return false;
      if (getParameters()
          != other.getParameters()) return false;
      if (getFloatOps()
          != other.getFloatOps()) return false;
      if (getTotalExecMicros()
          != other.getTotalExecMicros()) return false;
      if (getTotalAcceleratorExecMicros()
          != other.getTotalAcceleratorExecMicros()) return false;
      if (getTotalCpuExecMicros()
          != other.getTotalCpuExecMicros()) return false;
      if (getTotalRequestedBytes()
          != other.getTotalRequestedBytes()) return false;
      if (getTotalPeakBytes()
          != other.getTotalPeakBytes()) return false;
      if (getTotalResidualBytes()
          != other.getTotalResidualBytes()) return false;
      if (getTotalOutputBytes()
          != other.getTotalOutputBytes()) return false;
      if (getTotalParameters()
          != other.getTotalParameters()) return false;
      if (getTotalFloatOps()
          != other.getTotalFloatOps()) return false;
      if (!getGraphNodesList()
          .equals(other.getGraphNodesList())) return false;
      if (!getChildrenList()
          .equals(other.getChildrenList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecMicros());
      hash = (37 * hash) + ACCELERATOR_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAcceleratorExecMicros());
      hash = (37 * hash) + CPU_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCpuExecMicros());
      hash = (37 * hash) + REQUESTED_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getRequestedBytes());
      hash = (37 * hash) + PEAK_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPeakBytes());
      hash = (37 * hash) + RESIDUAL_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getResidualBytes());
      hash = (37 * hash) + OUTPUT_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOutputBytes());
      hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getParameters());
      hash = (37 * hash) + FLOAT_OPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFloatOps());
      hash = (37 * hash) + TOTAL_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalExecMicros());
      hash = (37 * hash) + TOTAL_ACCELERATOR_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalAcceleratorExecMicros());
      hash = (37 * hash) + TOTAL_CPU_EXEC_MICROS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalCpuExecMicros());
      hash = (37 * hash) + TOTAL_REQUESTED_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalRequestedBytes());
      hash = (37 * hash) + TOTAL_PEAK_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalPeakBytes());
      hash = (37 * hash) + TOTAL_RESIDUAL_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalResidualBytes());
      hash = (37 * hash) + TOTAL_OUTPUT_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalOutputBytes());
      hash = (37 * hash) + TOTAL_PARAMETERS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalParameters());
      hash = (37 * hash) + TOTAL_FLOAT_OPS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTotalFloatOps());
      if (getGraphNodesCount() > 0) {
        hash = (37 * hash) + GRAPH_NODES_FIELD_NUMBER;
        hash = (53 * hash) + getGraphNodesList().hashCode();
      }
      if (getChildrenCount() > 0) {
        hash = (37 * hash) + CHILDREN_FIELD_NUMBER;
        hash = (53 * hash) + getChildrenList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A node that groups multiple GraphNodeProto.
     * Depending on the 'view', the semantics of the TFmultiGraphNodeProto
     * is different:
     * code view: A node groups all TensorFlow graph nodes created by the
     *            Python code.
     * op view:   A node groups all TensorFlow graph nodes that are of type
     *            of the op (e.g. MatMul, Conv2D).
     * </pre>
     *
     * Protobuf type {@code tensorflow.tfprof.MultiGraphNodeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.MultiGraphNodeProto)
        tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_MultiGraphNodeProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_MultiGraphNodeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.class, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder.class);
      }

      // Construct using tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        execMicros_ = 0L;
        acceleratorExecMicros_ = 0L;
        cpuExecMicros_ = 0L;
        requestedBytes_ = 0L;
        peakBytes_ = 0L;
        residualBytes_ = 0L;
        outputBytes_ = 0L;
        parameters_ = 0L;
        floatOps_ = 0L;
        totalExecMicros_ = 0L;
        totalAcceleratorExecMicros_ = 0L;
        totalCpuExecMicros_ = 0L;
        totalRequestedBytes_ = 0L;
        totalPeakBytes_ = 0L;
        totalResidualBytes_ = 0L;
        totalOutputBytes_ = 0L;
        totalParameters_ = 0L;
        totalFloatOps_ = 0L;
        if (graphNodesBuilder_ == null) {
          graphNodes_ = java.util.Collections.emptyList();
        } else {
          graphNodes_ = null;
          graphNodesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
        } else {
          children_ = null;
          childrenBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_MultiGraphNodeProto_descriptor;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto getDefaultInstanceForType() {
        return tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto build() {
        tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto buildPartial() {
        tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto result = new tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto result) {
        if (graphNodesBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0)) {
            graphNodes_ = java.util.Collections.unmodifiableList(graphNodes_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.graphNodes_ = graphNodes_;
        } else {
          result.graphNodes_ = graphNodesBuilder_.build();
        }
        if (childrenBuilder_ == null) {
          if (((bitField0_ & 0x00100000) != 0)) {
            children_ = java.util.Collections.unmodifiableList(children_);
            bitField0_ = (bitField0_ & ~0x00100000);
          }
          result.children_ = children_;
        } else {
          result.children_ = childrenBuilder_.build();
        }
      }

      private void buildPartial0(tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.execMicros_ = execMicros_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.acceleratorExecMicros_ = acceleratorExecMicros_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.cpuExecMicros_ = cpuExecMicros_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.requestedBytes_ = requestedBytes_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.peakBytes_ = peakBytes_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.residualBytes_ = residualBytes_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.outputBytes_ = outputBytes_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.parameters_ = parameters_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.floatOps_ = floatOps_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.totalExecMicros_ = totalExecMicros_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.totalAcceleratorExecMicros_ = totalAcceleratorExecMicros_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.totalCpuExecMicros_ = totalCpuExecMicros_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.totalRequestedBytes_ = totalRequestedBytes_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.totalPeakBytes_ = totalPeakBytes_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.totalResidualBytes_ = totalResidualBytes_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.totalOutputBytes_ = totalOutputBytes_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.totalParameters_ = totalParameters_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.totalFloatOps_ = totalFloatOps_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto) {
          return mergeFrom((tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto other) {
        if (other == tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getExecMicros() != 0L) {
          setExecMicros(other.getExecMicros());
        }
        if (other.getAcceleratorExecMicros() != 0L) {
          setAcceleratorExecMicros(other.getAcceleratorExecMicros());
        }
        if (other.getCpuExecMicros() != 0L) {
          setCpuExecMicros(other.getCpuExecMicros());
        }
        if (other.getRequestedBytes() != 0L) {
          setRequestedBytes(other.getRequestedBytes());
        }
        if (other.getPeakBytes() != 0L) {
          setPeakBytes(other.getPeakBytes());
        }
        if (other.getResidualBytes() != 0L) {
          setResidualBytes(other.getResidualBytes());
        }
        if (other.getOutputBytes() != 0L) {
          setOutputBytes(other.getOutputBytes());
        }
        if (other.getParameters() != 0L) {
          setParameters(other.getParameters());
        }
        if (other.getFloatOps() != 0L) {
          setFloatOps(other.getFloatOps());
        }
        if (other.getTotalExecMicros() != 0L) {
          setTotalExecMicros(other.getTotalExecMicros());
        }
        if (other.getTotalAcceleratorExecMicros() != 0L) {
          setTotalAcceleratorExecMicros(other.getTotalAcceleratorExecMicros());
        }
        if (other.getTotalCpuExecMicros() != 0L) {
          setTotalCpuExecMicros(other.getTotalCpuExecMicros());
        }
        if (other.getTotalRequestedBytes() != 0L) {
          setTotalRequestedBytes(other.getTotalRequestedBytes());
        }
        if (other.getTotalPeakBytes() != 0L) {
          setTotalPeakBytes(other.getTotalPeakBytes());
        }
        if (other.getTotalResidualBytes() != 0L) {
          setTotalResidualBytes(other.getTotalResidualBytes());
        }
        if (other.getTotalOutputBytes() != 0L) {
          setTotalOutputBytes(other.getTotalOutputBytes());
        }
        if (other.getTotalParameters() != 0L) {
          setTotalParameters(other.getTotalParameters());
        }
        if (other.getTotalFloatOps() != 0L) {
          setTotalFloatOps(other.getTotalFloatOps());
        }
        if (graphNodesBuilder_ == null) {
          if (!other.graphNodes_.isEmpty()) {
            if (graphNodes_.isEmpty()) {
              graphNodes_ = other.graphNodes_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureGraphNodesIsMutable();
              graphNodes_.addAll(other.graphNodes_);
            }
            onChanged();
          }
        } else {
          if (!other.graphNodes_.isEmpty()) {
            if (graphNodesBuilder_.isEmpty()) {
              graphNodesBuilder_.dispose();
              graphNodesBuilder_ = null;
              graphNodes_ = other.graphNodes_;
              bitField0_ = (bitField0_ & ~0x00080000);
              graphNodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGraphNodesFieldBuilder() : null;
            } else {
              graphNodesBuilder_.addAllMessages(other.graphNodes_);
            }
          }
        }
        if (childrenBuilder_ == null) {
          if (!other.children_.isEmpty()) {
            if (children_.isEmpty()) {
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00100000);
            } else {
              ensureChildrenIsMutable();
              children_.addAll(other.children_);
            }
            onChanged();
          }
        } else {
          if (!other.children_.isEmpty()) {
            if (childrenBuilder_.isEmpty()) {
              childrenBuilder_.dispose();
              childrenBuilder_ = null;
              children_ = other.children_;
              bitField0_ = (bitField0_ & ~0x00100000);
              childrenBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChildrenFieldBuilder() : null;
            } else {
              childrenBuilder_.addAllMessages(other.children_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                execMicros_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                requestedBytes_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 24
              case 32: {
                parameters_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 32
              case 40: {
                floatOps_ = input.readInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 40
              case 48: {
                totalExecMicros_ = input.readInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 48
              case 56: {
                totalRequestedBytes_ = input.readInt64();
                bitField0_ |= 0x00002000;
                break;
              } // case 56
              case 64: {
                totalParameters_ = input.readInt64();
                bitField0_ |= 0x00020000;
                break;
              } // case 64
              case 72: {
                totalFloatOps_ = input.readInt64();
                bitField0_ |= 0x00040000;
                break;
              } // case 72
              case 82: {
                tensorflow.tfprof.TfprofOutput.GraphNodeProto m =
                    input.readMessage(
                        tensorflow.tfprof.TfprofOutput.GraphNodeProto.parser(),
                        extensionRegistry);
                if (graphNodesBuilder_ == null) {
                  ensureGraphNodesIsMutable();
                  graphNodes_.add(m);
                } else {
                  graphNodesBuilder_.addMessage(m);
                }
                break;
              } // case 82
              case 90: {
                tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto m =
                    input.readMessage(
                        tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.parser(),
                        extensionRegistry);
                if (childrenBuilder_ == null) {
                  ensureChildrenIsMutable();
                  children_.add(m);
                } else {
                  childrenBuilder_.addMessage(m);
                }
                break;
              } // case 90
              case 96: {
                acceleratorExecMicros_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 96
              case 104: {
                cpuExecMicros_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 104
              case 112: {
                totalAcceleratorExecMicros_ = input.readInt64();
                bitField0_ |= 0x00000800;
                break;
              } // case 112
              case 120: {
                totalCpuExecMicros_ = input.readInt64();
                bitField0_ |= 0x00001000;
                break;
              } // case 120
              case 128: {
                peakBytes_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 128
              case 136: {
                residualBytes_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 136
              case 144: {
                outputBytes_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 144
              case 152: {
                totalPeakBytes_ = input.readInt64();
                bitField0_ |= 0x00004000;
                break;
              } // case 152
              case 160: {
                totalResidualBytes_ = input.readInt64();
                bitField0_ |= 0x00008000;
                break;
              } // case 160
              case 168: {
                totalOutputBytes_ = input.readInt64();
                bitField0_ |= 0x00010000;
                break;
              } // case 168
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * Name of the node.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Name of the node.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Name of the node.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the node.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Name of the node.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private long execMicros_ ;
      /**
       * <pre>
       * code execution time.
       * </pre>
       *
       * <code>int64 exec_micros = 2;</code>
       * @return The execMicros.
       */
      @java.lang.Override
      public long getExecMicros() {
        return execMicros_;
      }
      /**
       * <pre>
       * code execution time.
       * </pre>
       *
       * <code>int64 exec_micros = 2;</code>
       * @param value The execMicros to set.
       * @return This builder for chaining.
       */
      public Builder setExecMicros(long value) {
        
        execMicros_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * code execution time.
       * </pre>
       *
       * <code>int64 exec_micros = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000002);
        execMicros_ = 0L;
        onChanged();
        return this;
      }

      private long acceleratorExecMicros_ ;
      /**
       * <code>int64 accelerator_exec_micros = 12;</code>
       * @return The acceleratorExecMicros.
       */
      @java.lang.Override
      public long getAcceleratorExecMicros() {
        return acceleratorExecMicros_;
      }
      /**
       * <code>int64 accelerator_exec_micros = 12;</code>
       * @param value The acceleratorExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setAcceleratorExecMicros(long value) {
        
        acceleratorExecMicros_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int64 accelerator_exec_micros = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAcceleratorExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000004);
        acceleratorExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long cpuExecMicros_ ;
      /**
       * <code>int64 cpu_exec_micros = 13;</code>
       * @return The cpuExecMicros.
       */
      @java.lang.Override
      public long getCpuExecMicros() {
        return cpuExecMicros_;
      }
      /**
       * <code>int64 cpu_exec_micros = 13;</code>
       * @param value The cpuExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setCpuExecMicros(long value) {
        
        cpuExecMicros_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 cpu_exec_micros = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpuExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long requestedBytes_ ;
      /**
       * <pre>
       * Total requested bytes by the code.
       * </pre>
       *
       * <code>int64 requested_bytes = 3;</code>
       * @return The requestedBytes.
       */
      @java.lang.Override
      public long getRequestedBytes() {
        return requestedBytes_;
      }
      /**
       * <pre>
       * Total requested bytes by the code.
       * </pre>
       *
       * <code>int64 requested_bytes = 3;</code>
       * @param value The requestedBytes to set.
       * @return This builder for chaining.
       */
      public Builder setRequestedBytes(long value) {
        
        requestedBytes_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total requested bytes by the code.
       * </pre>
       *
       * <code>int64 requested_bytes = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestedBytes() {
        bitField0_ = (bitField0_ & ~0x00000010);
        requestedBytes_ = 0L;
        onChanged();
        return this;
      }

      private long peakBytes_ ;
      /**
       * <pre>
       * Max bytes allocated and being used by the op at a point.
       * </pre>
       *
       * <code>int64 peak_bytes = 16;</code>
       * @return The peakBytes.
       */
      @java.lang.Override
      public long getPeakBytes() {
        return peakBytes_;
      }
      /**
       * <pre>
       * Max bytes allocated and being used by the op at a point.
       * </pre>
       *
       * <code>int64 peak_bytes = 16;</code>
       * @param value The peakBytes to set.
       * @return This builder for chaining.
       */
      public Builder setPeakBytes(long value) {
        
        peakBytes_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max bytes allocated and being used by the op at a point.
       * </pre>
       *
       * <code>int64 peak_bytes = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeakBytes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        peakBytes_ = 0L;
        onChanged();
        return this;
      }

      private long residualBytes_ ;
      /**
       * <pre>
       * Total bytes requested by the op and not released before end.
       * </pre>
       *
       * <code>int64 residual_bytes = 17;</code>
       * @return The residualBytes.
       */
      @java.lang.Override
      public long getResidualBytes() {
        return residualBytes_;
      }
      /**
       * <pre>
       * Total bytes requested by the op and not released before end.
       * </pre>
       *
       * <code>int64 residual_bytes = 17;</code>
       * @param value The residualBytes to set.
       * @return This builder for chaining.
       */
      public Builder setResidualBytes(long value) {
        
        residualBytes_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total bytes requested by the op and not released before end.
       * </pre>
       *
       * <code>int64 residual_bytes = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearResidualBytes() {
        bitField0_ = (bitField0_ & ~0x00000040);
        residualBytes_ = 0L;
        onChanged();
        return this;
      }

      private long outputBytes_ ;
      /**
       * <pre>
       * Total bytes output by the op (not necessarily allocated by the op).
       * </pre>
       *
       * <code>int64 output_bytes = 18;</code>
       * @return The outputBytes.
       */
      @java.lang.Override
      public long getOutputBytes() {
        return outputBytes_;
      }
      /**
       * <pre>
       * Total bytes output by the op (not necessarily allocated by the op).
       * </pre>
       *
       * <code>int64 output_bytes = 18;</code>
       * @param value The outputBytes to set.
       * @return This builder for chaining.
       */
      public Builder setOutputBytes(long value) {
        
        outputBytes_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total bytes output by the op (not necessarily allocated by the op).
       * </pre>
       *
       * <code>int64 output_bytes = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputBytes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        outputBytes_ = 0L;
        onChanged();
        return this;
      }

      private long parameters_ ;
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>int64 parameters = 4;</code>
       * @return The parameters.
       */
      @java.lang.Override
      public long getParameters() {
        return parameters_;
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>int64 parameters = 4;</code>
       * @param value The parameters to set.
       * @return This builder for chaining.
       */
      public Builder setParameters(long value) {
        
        parameters_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of parameters if available.
       * </pre>
       *
       * <code>int64 parameters = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000100);
        parameters_ = 0L;
        onChanged();
        return this;
      }

      private long floatOps_ ;
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>int64 float_ops = 5;</code>
       * @return The floatOps.
       */
      @java.lang.Override
      public long getFloatOps() {
        return floatOps_;
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>int64 float_ops = 5;</code>
       * @param value The floatOps to set.
       * @return This builder for chaining.
       */
      public Builder setFloatOps(long value) {
        
        floatOps_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of float operations.
       * </pre>
       *
       * <code>int64 float_ops = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloatOps() {
        bitField0_ = (bitField0_ & ~0x00000200);
        floatOps_ = 0L;
        onChanged();
        return this;
      }

      private long totalExecMicros_ ;
      /**
       * <pre>
       * The following are the aggregated stats from descendants.
       * The actual descendants depend on the data structure used.
       * </pre>
       *
       * <code>int64 total_exec_micros = 6;</code>
       * @return The totalExecMicros.
       */
      @java.lang.Override
      public long getTotalExecMicros() {
        return totalExecMicros_;
      }
      /**
       * <pre>
       * The following are the aggregated stats from descendants.
       * The actual descendants depend on the data structure used.
       * </pre>
       *
       * <code>int64 total_exec_micros = 6;</code>
       * @param value The totalExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setTotalExecMicros(long value) {
        
        totalExecMicros_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The following are the aggregated stats from descendants.
       * The actual descendants depend on the data structure used.
       * </pre>
       *
       * <code>int64 total_exec_micros = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000400);
        totalExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalAcceleratorExecMicros_ ;
      /**
       * <code>int64 total_accelerator_exec_micros = 14;</code>
       * @return The totalAcceleratorExecMicros.
       */
      @java.lang.Override
      public long getTotalAcceleratorExecMicros() {
        return totalAcceleratorExecMicros_;
      }
      /**
       * <code>int64 total_accelerator_exec_micros = 14;</code>
       * @param value The totalAcceleratorExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setTotalAcceleratorExecMicros(long value) {
        
        totalAcceleratorExecMicros_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_accelerator_exec_micros = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalAcceleratorExecMicros() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalAcceleratorExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalCpuExecMicros_ ;
      /**
       * <code>int64 total_cpu_exec_micros = 15;</code>
       * @return The totalCpuExecMicros.
       */
      @java.lang.Override
      public long getTotalCpuExecMicros() {
        return totalCpuExecMicros_;
      }
      /**
       * <code>int64 total_cpu_exec_micros = 15;</code>
       * @param value The totalCpuExecMicros to set.
       * @return This builder for chaining.
       */
      public Builder setTotalCpuExecMicros(long value) {
        
        totalCpuExecMicros_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_cpu_exec_micros = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalCpuExecMicros() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalCpuExecMicros_ = 0L;
        onChanged();
        return this;
      }

      private long totalRequestedBytes_ ;
      /**
       * <code>int64 total_requested_bytes = 7;</code>
       * @return The totalRequestedBytes.
       */
      @java.lang.Override
      public long getTotalRequestedBytes() {
        return totalRequestedBytes_;
      }
      /**
       * <code>int64 total_requested_bytes = 7;</code>
       * @param value The totalRequestedBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalRequestedBytes(long value) {
        
        totalRequestedBytes_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_requested_bytes = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalRequestedBytes() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalRequestedBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalPeakBytes_ ;
      /**
       * <code>int64 total_peak_bytes = 19;</code>
       * @return The totalPeakBytes.
       */
      @java.lang.Override
      public long getTotalPeakBytes() {
        return totalPeakBytes_;
      }
      /**
       * <code>int64 total_peak_bytes = 19;</code>
       * @param value The totalPeakBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPeakBytes(long value) {
        
        totalPeakBytes_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_peak_bytes = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPeakBytes() {
        bitField0_ = (bitField0_ & ~0x00004000);
        totalPeakBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalResidualBytes_ ;
      /**
       * <code>int64 total_residual_bytes = 20;</code>
       * @return The totalResidualBytes.
       */
      @java.lang.Override
      public long getTotalResidualBytes() {
        return totalResidualBytes_;
      }
      /**
       * <code>int64 total_residual_bytes = 20;</code>
       * @param value The totalResidualBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalResidualBytes(long value) {
        
        totalResidualBytes_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_residual_bytes = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalResidualBytes() {
        bitField0_ = (bitField0_ & ~0x00008000);
        totalResidualBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalOutputBytes_ ;
      /**
       * <code>int64 total_output_bytes = 21;</code>
       * @return The totalOutputBytes.
       */
      @java.lang.Override
      public long getTotalOutputBytes() {
        return totalOutputBytes_;
      }
      /**
       * <code>int64 total_output_bytes = 21;</code>
       * @param value The totalOutputBytes to set.
       * @return This builder for chaining.
       */
      public Builder setTotalOutputBytes(long value) {
        
        totalOutputBytes_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_output_bytes = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalOutputBytes() {
        bitField0_ = (bitField0_ & ~0x00010000);
        totalOutputBytes_ = 0L;
        onChanged();
        return this;
      }

      private long totalParameters_ ;
      /**
       * <code>int64 total_parameters = 8;</code>
       * @return The totalParameters.
       */
      @java.lang.Override
      public long getTotalParameters() {
        return totalParameters_;
      }
      /**
       * <code>int64 total_parameters = 8;</code>
       * @param value The totalParameters to set.
       * @return This builder for chaining.
       */
      public Builder setTotalParameters(long value) {
        
        totalParameters_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_parameters = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalParameters() {
        bitField0_ = (bitField0_ & ~0x00020000);
        totalParameters_ = 0L;
        onChanged();
        return this;
      }

      private long totalFloatOps_ ;
      /**
       * <code>int64 total_float_ops = 9;</code>
       * @return The totalFloatOps.
       */
      @java.lang.Override
      public long getTotalFloatOps() {
        return totalFloatOps_;
      }
      /**
       * <code>int64 total_float_ops = 9;</code>
       * @param value The totalFloatOps to set.
       * @return This builder for chaining.
       */
      public Builder setTotalFloatOps(long value) {
        
        totalFloatOps_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 total_float_ops = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalFloatOps() {
        bitField0_ = (bitField0_ & ~0x00040000);
        totalFloatOps_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> graphNodes_ =
        java.util.Collections.emptyList();
      private void ensureGraphNodesIsMutable() {
        if (!((bitField0_ & 0x00080000) != 0)) {
          graphNodes_ = new java.util.ArrayList<tensorflow.tfprof.TfprofOutput.GraphNodeProto>(graphNodes_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.GraphNodeProto, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> graphNodesBuilder_;

      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto> getGraphNodesList() {
        if (graphNodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(graphNodes_);
        } else {
          return graphNodesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public int getGraphNodesCount() {
        if (graphNodesBuilder_ == null) {
          return graphNodes_.size();
        } else {
          return graphNodesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto getGraphNodes(int index) {
        if (graphNodesBuilder_ == null) {
          return graphNodes_.get(index);
        } else {
          return graphNodesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder setGraphNodes(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto value) {
        if (graphNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphNodesIsMutable();
          graphNodes_.set(index, value);
          onChanged();
        } else {
          graphNodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder setGraphNodes(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder builderForValue) {
        if (graphNodesBuilder_ == null) {
          ensureGraphNodesIsMutable();
          graphNodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          graphNodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder addGraphNodes(tensorflow.tfprof.TfprofOutput.GraphNodeProto value) {
        if (graphNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphNodesIsMutable();
          graphNodes_.add(value);
          onChanged();
        } else {
          graphNodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder addGraphNodes(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto value) {
        if (graphNodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphNodesIsMutable();
          graphNodes_.add(index, value);
          onChanged();
        } else {
          graphNodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder addGraphNodes(
          tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder builderForValue) {
        if (graphNodesBuilder_ == null) {
          ensureGraphNodesIsMutable();
          graphNodes_.add(builderForValue.build());
          onChanged();
        } else {
          graphNodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder addGraphNodes(
          int index, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder builderForValue) {
        if (graphNodesBuilder_ == null) {
          ensureGraphNodesIsMutable();
          graphNodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          graphNodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder addAllGraphNodes(
          java.lang.Iterable<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProto> values) {
        if (graphNodesBuilder_ == null) {
          ensureGraphNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphNodes_);
          onChanged();
        } else {
          graphNodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder clearGraphNodes() {
        if (graphNodesBuilder_ == null) {
          graphNodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          graphNodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public Builder removeGraphNodes(int index) {
        if (graphNodesBuilder_ == null) {
          ensureGraphNodesIsMutable();
          graphNodes_.remove(index);
          onChanged();
        } else {
          graphNodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder getGraphNodesBuilder(
          int index) {
        return getGraphNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder getGraphNodesOrBuilder(
          int index) {
        if (graphNodesBuilder_ == null) {
          return graphNodes_.get(index);  } else {
          return graphNodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public java.util.List<? extends tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
           getGraphNodesOrBuilderList() {
        if (graphNodesBuilder_ != null) {
          return graphNodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(graphNodes_);
        }
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder addGraphNodesBuilder() {
        return getGraphNodesFieldBuilder().addBuilder(
            tensorflow.tfprof.TfprofOutput.GraphNodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder addGraphNodesBuilder(
          int index) {
        return getGraphNodesFieldBuilder().addBuilder(
            index, tensorflow.tfprof.TfprofOutput.GraphNodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * TensorFlow graph nodes contained by the MultiGraphNodeProto.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.GraphNodeProto graph_nodes = 10;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder> 
           getGraphNodesBuilderList() {
        return getGraphNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.GraphNodeProto, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder> 
          getGraphNodesFieldBuilder() {
        if (graphNodesBuilder_ == null) {
          graphNodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tfprof.TfprofOutput.GraphNodeProto, tensorflow.tfprof.TfprofOutput.GraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.GraphNodeProtoOrBuilder>(
                  graphNodes_,
                  ((bitField0_ & 0x00080000) != 0),
                  getParentForChildren(),
                  isClean());
          graphNodes_ = null;
        }
        return graphNodesBuilder_;
      }

      private java.util.List<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto> children_ =
        java.util.Collections.emptyList();
      private void ensureChildrenIsMutable() {
        if (!((bitField0_ & 0x00100000) != 0)) {
          children_ = new java.util.ArrayList<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto>(children_);
          bitField0_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder> childrenBuilder_;

      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto> getChildrenList() {
        if (childrenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(children_);
        } else {
          return childrenBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public int getChildrenCount() {
        if (childrenBuilder_ == null) {
          return children_.size();
        } else {
          return childrenBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto getChildren(int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);
        } else {
          return childrenBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder setChildren(
          int index, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.set(index, value);
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder setChildren(
          int index, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.set(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder addChildren(tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder addChildren(
          int index, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto value) {
        if (childrenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildrenIsMutable();
          children_.add(index, value);
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder addChildren(
          tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder addChildren(
          int index, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder builderForValue) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.add(index, builderForValue.build());
          onChanged();
        } else {
          childrenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder addAllChildren(
          java.lang.Iterable<? extends tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto> values) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, children_);
          onChanged();
        } else {
          childrenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder clearChildren() {
        if (childrenBuilder_ == null) {
          children_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00100000);
          onChanged();
        } else {
          childrenBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public Builder removeChildren(int index) {
        if (childrenBuilder_ == null) {
          ensureChildrenIsMutable();
          children_.remove(index);
          onChanged();
        } else {
          childrenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder getChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder getChildrenOrBuilder(
          int index) {
        if (childrenBuilder_ == null) {
          return children_.get(index);  } else {
          return childrenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public java.util.List<? extends tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder> 
           getChildrenOrBuilderList() {
        if (childrenBuilder_ != null) {
          return childrenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(children_);
        }
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder addChildrenBuilder() {
        return getChildrenFieldBuilder().addBuilder(
            tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder addChildrenBuilder(
          int index) {
        return getChildrenFieldBuilder().addBuilder(
            index, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * Descendants of the node. The actual descendants depend on the data
       * structure used.
       * </pre>
       *
       * <code>repeated .tensorflow.tfprof.MultiGraphNodeProto children = 11;</code>
       */
      public java.util.List<tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder> 
           getChildrenBuilderList() {
        return getChildrenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder> 
          getChildrenFieldBuilder() {
        if (childrenBuilder_ == null) {
          childrenBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto.Builder, tensorflow.tfprof.TfprofOutput.MultiGraphNodeProtoOrBuilder>(
                  children_,
                  ((bitField0_ & 0x00100000) != 0),
                  getParentForChildren(),
                  isClean());
          children_ = null;
        }
        return childrenBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.MultiGraphNodeProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tfprof.MultiGraphNodeProto)
    private static final tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto();
    }

    public static tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultiGraphNodeProto>
        PARSER = new com.google.protobuf.AbstractParser<MultiGraphNodeProto>() {
      @java.lang.Override
      public MultiGraphNodeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MultiGraphNodeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultiGraphNodeProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.MultiGraphNodeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AdviceProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.AdviceProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    int getCheckersCount();
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    boolean containsCheckers(
        java.lang.String key);
    /**
     * Use {@link #getCheckersMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
    getCheckers();
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
    getCheckersMap();
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    /* nullable */
tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getCheckersOrDefault(
        java.lang.String key,
        /* nullable */
tensorflow.tfprof.TfprofOutput.AdviceProto.Checker defaultValue);
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getCheckersOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code tensorflow.tfprof.AdviceProto}
   */
  public static final class AdviceProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tfprof.AdviceProto)
      AdviceProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AdviceProto.newBuilder() to construct.
    private AdviceProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AdviceProto() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AdviceProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetCheckers();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tfprof.TfprofOutput.AdviceProto.class, tensorflow.tfprof.TfprofOutput.AdviceProto.Builder.class);
    }

    public interface CheckerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tfprof.AdviceProto.Checker)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated string reports = 2;</code>
       * @return A list containing the reports.
       */
      java.util.List<java.lang.String>
          getReportsList();
      /**
       * <code>repeated string reports = 2;</code>
       * @return The count of reports.
       */
      int getReportsCount();
      /**
       * <code>repeated string reports = 2;</code>
       * @param index The index of the element to return.
       * @return The reports at the given index.
       */
      java.lang.String getReports(int index);
      /**
       * <code>repeated string reports = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the reports at the given index.
       */
      com.google.protobuf.ByteString
          getReportsBytes(int index);
    }
    /**
     * Protobuf type {@code tensorflow.tfprof.AdviceProto.Checker}
     */
    public static final class Checker extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tfprof.AdviceProto.Checker)
        CheckerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Checker.newBuilder() to construct.
      private Checker(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Checker() {
        reports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Checker();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_Checker_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_Checker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.class, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.Builder.class);
      }

      public static final int REPORTS_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.LazyStringList reports_;
      /**
       * <code>repeated string reports = 2;</code>
       * @return A list containing the reports.
       */
      public com.google.protobuf.ProtocolStringList
          getReportsList() {
        return reports_;
      }
      /**
       * <code>repeated string reports = 2;</code>
       * @return The count of reports.
       */
      public int getReportsCount() {
        return reports_.size();
      }
      /**
       * <code>repeated string reports = 2;</code>
       * @param index The index of the element to return.
       * @return The reports at the given index.
       */
      public java.lang.String getReports(int index) {
        return reports_.get(index);
      }
      /**
       * <code>repeated string reports = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the reports at the given index.
       */
      public com.google.protobuf.ByteString
          getReportsBytes(int index) {
        return reports_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < reports_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reports_.getRaw(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < reports_.size(); i++) {
            dataSize += computeStringSizeNoTag(reports_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getReportsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tfprof.TfprofOutput.AdviceProto.Checker)) {
          return super.equals(obj);
        }
        tensorflow.tfprof.TfprofOutput.AdviceProto.Checker other = (tensorflow.tfprof.TfprofOutput.AdviceProto.Checker) obj;

        if (!getReportsList()
            .equals(other.getReportsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getReportsCount() > 0) {
          hash = (37 * hash) + REPORTS_FIELD_NUMBER;
          hash = (53 * hash) + getReportsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.AdviceProto.Checker prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.tfprof.AdviceProto.Checker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.AdviceProto.Checker)
          tensorflow.tfprof.TfprofOutput.AdviceProto.CheckerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_Checker_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_Checker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.class, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.Builder.class);
        }

        // Construct using tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          reports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_Checker_descriptor;
        }

        @java.lang.Override
        public tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getDefaultInstanceForType() {
          return tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.getDefaultInstance();
        }

        @java.lang.Override
        public tensorflow.tfprof.TfprofOutput.AdviceProto.Checker build() {
          tensorflow.tfprof.TfprofOutput.AdviceProto.Checker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tensorflow.tfprof.TfprofOutput.AdviceProto.Checker buildPartial() {
          tensorflow.tfprof.TfprofOutput.AdviceProto.Checker result = new tensorflow.tfprof.TfprofOutput.AdviceProto.Checker(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(tensorflow.tfprof.TfprofOutput.AdviceProto.Checker result) {
          if (((bitField0_ & 0x00000001) != 0)) {
            reports_ = reports_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.reports_ = reports_;
        }

        private void buildPartial0(tensorflow.tfprof.TfprofOutput.AdviceProto.Checker result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tfprof.TfprofOutput.AdviceProto.Checker) {
            return mergeFrom((tensorflow.tfprof.TfprofOutput.AdviceProto.Checker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.AdviceProto.Checker other) {
          if (other == tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.getDefaultInstance()) return this;
          if (!other.reports_.isEmpty()) {
            if (reports_.isEmpty()) {
              reports_ = other.reports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureReportsIsMutable();
              reports_.addAll(other.reports_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();
                  ensureReportsIsMutable();
                  reports_.add(s);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList reports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureReportsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            reports_ = new com.google.protobuf.LazyStringArrayList(reports_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @return A list containing the reports.
         */
        public com.google.protobuf.ProtocolStringList
            getReportsList() {
          return reports_.getUnmodifiableView();
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @return The count of reports.
         */
        public int getReportsCount() {
          return reports_.size();
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @param index The index of the element to return.
         * @return The reports at the given index.
         */
        public java.lang.String getReports(int index) {
          return reports_.get(index);
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @param index The index of the value to return.
         * @return The bytes of the reports at the given index.
         */
        public com.google.protobuf.ByteString
            getReportsBytes(int index) {
          return reports_.getByteString(index);
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @param index The index to set the value at.
         * @param value The reports to set.
         * @return This builder for chaining.
         */
        public Builder setReports(
            int index, java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ensureReportsIsMutable();
          reports_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @param value The reports to add.
         * @return This builder for chaining.
         */
        public Builder addReports(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ensureReportsIsMutable();
          reports_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @param values The reports to add.
         * @return This builder for chaining.
         */
        public Builder addAllReports(
            java.lang.Iterable<java.lang.String> values) {
          ensureReportsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reports_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearReports() {
          reports_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string reports = 2;</code>
         * @param value The bytes of the reports to add.
         * @return This builder for chaining.
         */
        public Builder addReportsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          ensureReportsIsMutable();
          reports_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.AdviceProto.Checker)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tfprof.AdviceProto.Checker)
      private static final tensorflow.tfprof.TfprofOutput.AdviceProto.Checker DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.AdviceProto.Checker();
      }

      public static tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Checker>
          PARSER = new com.google.protobuf.AbstractParser<Checker>() {
        @java.lang.Override
        public Checker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Checker> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Checker> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CHECKERS_FIELD_NUMBER = 1;
    private static final class CheckersDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>newDefaultInstance(
                  tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_CheckersEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  tensorflow.tfprof.TfprofOutput.AdviceProto.Checker.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> checkers_;
    private com.google.protobuf.MapField<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
    internalGetCheckers() {
      if (checkers_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CheckersDefaultEntryHolder.defaultEntry);
      }
      return checkers_;
    }
    public int getCheckersCount() {
      return internalGetCheckers().getMap().size();
    }
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    @java.lang.Override
    public boolean containsCheckers(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetCheckers().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCheckersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> getCheckers() {
      return getCheckersMap();
    }
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> getCheckersMap() {
      return internalGetCheckers().getMap();
    }
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getCheckersOrDefault(
        java.lang.String key,
        /* nullable */
tensorflow.tfprof.TfprofOutput.AdviceProto.Checker defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> map =
          internalGetCheckers().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * checker name -&gt; a list of reports from the checker.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
     */
    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getCheckersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> map =
          internalGetCheckers().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetCheckers(),
          CheckersDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> entry
           : internalGetCheckers().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
        checkers__ = CheckersDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, checkers__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tfprof.TfprofOutput.AdviceProto)) {
        return super.equals(obj);
      }
      tensorflow.tfprof.TfprofOutput.AdviceProto other = (tensorflow.tfprof.TfprofOutput.AdviceProto) obj;

      if (!internalGetCheckers().equals(
          other.internalGetCheckers())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetCheckers().getMap().isEmpty()) {
        hash = (37 * hash) + CHECKERS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCheckers().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tfprof.TfprofOutput.AdviceProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tfprof.TfprofOutput.AdviceProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tfprof.AdviceProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tfprof.AdviceProto)
        tensorflow.tfprof.TfprofOutput.AdviceProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetCheckers();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableCheckers();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tfprof.TfprofOutput.AdviceProto.class, tensorflow.tfprof.TfprofOutput.AdviceProto.Builder.class);
      }

      // Construct using tensorflow.tfprof.TfprofOutput.AdviceProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableCheckers().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tfprof.TfprofOutput.internal_static_tensorflow_tfprof_AdviceProto_descriptor;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.AdviceProto getDefaultInstanceForType() {
        return tensorflow.tfprof.TfprofOutput.AdviceProto.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.AdviceProto build() {
        tensorflow.tfprof.TfprofOutput.AdviceProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.AdviceProto buildPartial() {
        tensorflow.tfprof.TfprofOutput.AdviceProto result = new tensorflow.tfprof.TfprofOutput.AdviceProto(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.tfprof.TfprofOutput.AdviceProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.checkers_ = internalGetCheckers();
          result.checkers_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tfprof.TfprofOutput.AdviceProto) {
          return mergeFrom((tensorflow.tfprof.TfprofOutput.AdviceProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tfprof.TfprofOutput.AdviceProto other) {
        if (other == tensorflow.tfprof.TfprofOutput.AdviceProto.getDefaultInstance()) return this;
        internalGetMutableCheckers().mergeFrom(
            other.internalGetCheckers());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
                checkers__ = input.readMessage(
                    CheckersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableCheckers().getMutableMap().put(
                    checkers__.getKey(), checkers__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> checkers_;
      private com.google.protobuf.MapField<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
          internalGetCheckers() {
        if (checkers_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CheckersDefaultEntryHolder.defaultEntry);
        }
        return checkers_;
      }
      private com.google.protobuf.MapField<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
          internalGetMutableCheckers() {
        if (checkers_ == null) {
          checkers_ = com.google.protobuf.MapField.newMapField(
              CheckersDefaultEntryHolder.defaultEntry);
        }
        if (!checkers_.isMutable()) {
          checkers_ = checkers_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return checkers_;
      }
      public int getCheckersCount() {
        return internalGetCheckers().getMap().size();
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      @java.lang.Override
      public boolean containsCheckers(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetCheckers().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCheckersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> getCheckers() {
        return getCheckersMap();
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> getCheckersMap() {
        return internalGetCheckers().getMap();
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getCheckersOrDefault(
          java.lang.String key,
          /* nullable */
tensorflow.tfprof.TfprofOutput.AdviceProto.Checker defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> map =
            internalGetCheckers().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      @java.lang.Override
      public tensorflow.tfprof.TfprofOutput.AdviceProto.Checker getCheckersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> map =
            internalGetCheckers().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearCheckers() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableCheckers().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      public Builder removeCheckers(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableCheckers().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker>
          getMutableCheckers() {
        bitField0_ |= 0x00000001;
        return internalGetMutableCheckers().getMutableMap();
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      public Builder putCheckers(
          java.lang.String key,
          tensorflow.tfprof.TfprofOutput.AdviceProto.Checker value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableCheckers().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <pre>
       * checker name -&gt; a list of reports from the checker.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.tfprof.AdviceProto.Checker&gt; checkers = 1;</code>
       */
      public Builder putAllCheckers(
          java.util.Map<java.lang.String, tensorflow.tfprof.TfprofOutput.AdviceProto.Checker> values) {
        internalGetMutableCheckers().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tfprof.AdviceProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tfprof.AdviceProto)
    private static final tensorflow.tfprof.TfprofOutput.AdviceProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tfprof.TfprofOutput.AdviceProto();
    }

    public static tensorflow.tfprof.TfprofOutput.AdviceProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AdviceProto>
        PARSER = new com.google.protobuf.AbstractParser<AdviceProto>() {
      @java.lang.Override
      public AdviceProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AdviceProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AdviceProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.tfprof.TfprofOutput.AdviceProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_GraphNodeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_GraphNodeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_GraphNodeProto_InputShapesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_GraphNodeProto_InputShapesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_MultiGraphNodeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_MultiGraphNodeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_AdviceProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_AdviceProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_AdviceProto_CheckersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_AdviceProto_CheckersEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tfprof_AdviceProto_Checker_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tfprof_AdviceProto_Checker_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n,tensorflow/core/profiler/tfprof_output" +
      ".proto\022\021tensorflow.tfprof\032,tensorflow/co" +
      "re/framework/tensor_shape.proto\032%tensorf" +
      "low/core/framework/types.proto\"v\n\021TFProf" +
      "TensorProto\022#\n\005dtype\030\001 \001(\0162\024.tensorflow." +
      "DataType\022\024\n\014value_double\030\002 \003(\001\022\023\n\013value_" +
      "int64\030\003 \003(\003\022\021\n\tvalue_str\030\004 \003(\t\"\216\007\n\016Graph" +
      "NodeProto\022\014\n\004name\030\001 \001(\t\022:\n\014tensor_value\030" +
      "\017 \001(\0132$.tensorflow.tfprof.TFProfTensorPr" +
      "oto\022\021\n\trun_count\030\025 \001(\003\022\023\n\013exec_micros\030\002 " +
      "\001(\003\022\037\n\027accelerator_exec_micros\030\021 \001(\003\022\027\n\017" +
      "cpu_exec_micros\030\022 \001(\003\022\027\n\017requested_bytes" +
      "\030\003 \001(\003\022\022\n\npeak_bytes\030\030 \001(\003\022\026\n\016residual_b" +
      "ytes\030\031 \001(\003\022\024\n\014output_bytes\030\032 \001(\003\022\022\n\npara" +
      "meters\030\004 \001(\003\022\021\n\tfloat_ops\030\r \001(\003\022\017\n\007devic" +
      "es\030\n \003(\t\022\036\n\026total_definition_count\030\027 \001(\003" +
      "\022\027\n\017total_run_count\030\026 \001(\003\022\031\n\021total_exec_" +
      "micros\030\006 \001(\003\022%\n\035total_accelerator_exec_m" +
      "icros\030\023 \001(\003\022\035\n\025total_cpu_exec_micros\030\024 \001" +
      "(\003\022\035\n\025total_requested_bytes\030\007 \001(\003\022\030\n\020tot" +
      "al_peak_bytes\030\033 \001(\003\022\034\n\024total_residual_by" +
      "tes\030\034 \001(\003\022\032\n\022total_output_bytes\030\035 \001(\003\022\030\n" +
      "\020total_parameters\030\010 \001(\003\022\027\n\017total_float_o" +
      "ps\030\016 \001(\003\022,\n\006shapes\030\013 \003(\0132\034.tensorflow.Te" +
      "nsorShapeProto\022H\n\014input_shapes\030\020 \003(\01322.t" +
      "ensorflow.tfprof.GraphNodeProto.InputSha" +
      "pesEntry\0223\n\010children\030\014 \003(\0132!.tensorflow." +
      "tfprof.GraphNodeProto\032P\n\020InputShapesEntr" +
      "y\022\013\n\003key\030\001 \001(\005\022+\n\005value\030\002 \001(\0132\034.tensorfl" +
      "ow.TensorShapeProto:\0028\001\"\355\004\n\023MultiGraphNo" +
      "deProto\022\014\n\004name\030\001 \001(\t\022\023\n\013exec_micros\030\002 \001" +
      "(\003\022\037\n\027accelerator_exec_micros\030\014 \001(\003\022\027\n\017c" +
      "pu_exec_micros\030\r \001(\003\022\027\n\017requested_bytes\030" +
      "\003 \001(\003\022\022\n\npeak_bytes\030\020 \001(\003\022\026\n\016residual_by" +
      "tes\030\021 \001(\003\022\024\n\014output_bytes\030\022 \001(\003\022\022\n\nparam" +
      "eters\030\004 \001(\003\022\021\n\tfloat_ops\030\005 \001(\003\022\031\n\021total_" +
      "exec_micros\030\006 \001(\003\022%\n\035total_accelerator_e" +
      "xec_micros\030\016 \001(\003\022\035\n\025total_cpu_exec_micro" +
      "s\030\017 \001(\003\022\035\n\025total_requested_bytes\030\007 \001(\003\022\030" +
      "\n\020total_peak_bytes\030\023 \001(\003\022\034\n\024total_residu" +
      "al_bytes\030\024 \001(\003\022\032\n\022total_output_bytes\030\025 \001" +
      "(\003\022\030\n\020total_parameters\030\010 \001(\003\022\027\n\017total_fl" +
      "oat_ops\030\t \001(\003\0226\n\013graph_nodes\030\n \003(\0132!.ten" +
      "sorflow.tfprof.GraphNodeProto\0228\n\010childre" +
      "n\030\013 \003(\0132&.tensorflow.tfprof.MultiGraphNo" +
      "deProto\"\302\001\n\013AdviceProto\022>\n\010checkers\030\001 \003(" +
      "\0132,.tensorflow.tfprof.AdviceProto.Checke" +
      "rsEntry\032W\n\rCheckersEntry\022\013\n\003key\030\001 \001(\t\0225\n" +
      "\005value\030\002 \001(\0132&.tensorflow.tfprof.AdviceP" +
      "roto.Checker:\0028\001\032\032\n\007Checker\022\017\n\007reports\030\002" +
      " \003(\tb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TensorShapeProtos.getDescriptor(),
          org.tensorflow.framework.TypesProtos.getDescriptor(),
        });
    internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_tfprof_TFProfTensorProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_TFProfTensorProto_descriptor,
        new java.lang.String[] { "Dtype", "ValueDouble", "ValueInt64", "ValueStr", });
    internal_static_tensorflow_tfprof_GraphNodeProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_tfprof_GraphNodeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_GraphNodeProto_descriptor,
        new java.lang.String[] { "Name", "TensorValue", "RunCount", "ExecMicros", "AcceleratorExecMicros", "CpuExecMicros", "RequestedBytes", "PeakBytes", "ResidualBytes", "OutputBytes", "Parameters", "FloatOps", "Devices", "TotalDefinitionCount", "TotalRunCount", "TotalExecMicros", "TotalAcceleratorExecMicros", "TotalCpuExecMicros", "TotalRequestedBytes", "TotalPeakBytes", "TotalResidualBytes", "TotalOutputBytes", "TotalParameters", "TotalFloatOps", "Shapes", "InputShapes", "Children", });
    internal_static_tensorflow_tfprof_GraphNodeProto_InputShapesEntry_descriptor =
      internal_static_tensorflow_tfprof_GraphNodeProto_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_tfprof_GraphNodeProto_InputShapesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_GraphNodeProto_InputShapesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_tensorflow_tfprof_MultiGraphNodeProto_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_tfprof_MultiGraphNodeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_MultiGraphNodeProto_descriptor,
        new java.lang.String[] { "Name", "ExecMicros", "AcceleratorExecMicros", "CpuExecMicros", "RequestedBytes", "PeakBytes", "ResidualBytes", "OutputBytes", "Parameters", "FloatOps", "TotalExecMicros", "TotalAcceleratorExecMicros", "TotalCpuExecMicros", "TotalRequestedBytes", "TotalPeakBytes", "TotalResidualBytes", "TotalOutputBytes", "TotalParameters", "TotalFloatOps", "GraphNodes", "Children", });
    internal_static_tensorflow_tfprof_AdviceProto_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_tfprof_AdviceProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_AdviceProto_descriptor,
        new java.lang.String[] { "Checkers", });
    internal_static_tensorflow_tfprof_AdviceProto_CheckersEntry_descriptor =
      internal_static_tensorflow_tfprof_AdviceProto_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_tfprof_AdviceProto_CheckersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_AdviceProto_CheckersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_tensorflow_tfprof_AdviceProto_Checker_descriptor =
      internal_static_tensorflow_tfprof_AdviceProto_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_tfprof_AdviceProto_Checker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tfprof_AdviceProto_Checker_descriptor,
        new java.lang.String[] { "Reports", });
    org.tensorflow.framework.TensorShapeProtos.getDescriptor();
    org.tensorflow.framework.TypesProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
