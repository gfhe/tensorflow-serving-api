// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/data_service.proto

package tensorflow.data;

public final class DataService {
  private DataService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * tf.data service deployment mode.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.data.DeploymentMode}
   */
  public enum DeploymentMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DEPLOYMENT_MODE_UNSPECIFIED = 0;</code>
     */
    DEPLOYMENT_MODE_UNSPECIFIED(0),
    /**
     * <pre>
     * tf.data service workers colocate with TF workers.
     * </pre>
     *
     * <code>DEPLOYMENT_MODE_COLOCATED = 1;</code>
     */
    DEPLOYMENT_MODE_COLOCATED(1),
    /**
     * <pre>
     * tf.data service workers run in dedicated tf.data hosts.
     * </pre>
     *
     * <code>DEPLOYMENT_MODE_REMOTE = 2;</code>
     */
    DEPLOYMENT_MODE_REMOTE(2),
    /**
     * <pre>
     * tf.data service workers run in colocated TF hosts and dedicated tf.data
     * hosts.
     * </pre>
     *
     * <code>DEPLOYMENT_MODE_HYBRID = 3;</code>
     */
    DEPLOYMENT_MODE_HYBRID(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DEPLOYMENT_MODE_UNSPECIFIED = 0;</code>
     */
    public static final int DEPLOYMENT_MODE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * tf.data service workers colocate with TF workers.
     * </pre>
     *
     * <code>DEPLOYMENT_MODE_COLOCATED = 1;</code>
     */
    public static final int DEPLOYMENT_MODE_COLOCATED_VALUE = 1;
    /**
     * <pre>
     * tf.data service workers run in dedicated tf.data hosts.
     * </pre>
     *
     * <code>DEPLOYMENT_MODE_REMOTE = 2;</code>
     */
    public static final int DEPLOYMENT_MODE_REMOTE_VALUE = 2;
    /**
     * <pre>
     * tf.data service workers run in colocated TF hosts and dedicated tf.data
     * hosts.
     * </pre>
     *
     * <code>DEPLOYMENT_MODE_HYBRID = 3;</code>
     */
    public static final int DEPLOYMENT_MODE_HYBRID_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeploymentMode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DeploymentMode forNumber(int value) {
      switch (value) {
        case 0: return DEPLOYMENT_MODE_UNSPECIFIED;
        case 1: return DEPLOYMENT_MODE_COLOCATED;
        case 2: return DEPLOYMENT_MODE_REMOTE;
        case 3: return DEPLOYMENT_MODE_HYBRID;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeploymentMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeploymentMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeploymentMode>() {
            public DeploymentMode findValueByNumber(int number) {
              return DeploymentMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.data.DataService.getDescriptor().getEnumTypes().get(0);
    }

    private static final DeploymentMode[] VALUES = values();

    public static DeploymentMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeploymentMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.data.DeploymentMode)
  }

  public interface ProcessingModeDefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.ProcessingModeDef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
     * @return The enum numeric value on the wire for shardingPolicy.
     */
    int getShardingPolicyValue();
    /**
     * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
     * @return The shardingPolicy.
     */
    tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy getShardingPolicy();
  }
  /**
   * <pre>
   * Next tag: 2
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.ProcessingModeDef}
   */
  public static final class ProcessingModeDef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.ProcessingModeDef)
      ProcessingModeDefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProcessingModeDef.newBuilder() to construct.
    private ProcessingModeDef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProcessingModeDef() {
      shardingPolicy_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProcessingModeDef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DataService.internal_static_tensorflow_data_ProcessingModeDef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DataService.internal_static_tensorflow_data_ProcessingModeDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DataService.ProcessingModeDef.class, tensorflow.data.DataService.ProcessingModeDef.Builder.class);
    }

    /**
     * <pre>
     * Specifies how data is sharded among tf.data service workers.
     * </pre>
     *
     * Protobuf enum {@code tensorflow.data.ProcessingModeDef.ShardingPolicy}
     */
    public enum ShardingPolicy
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * No sharding will be performed. Each worker produces the entire dataset
       * without any sharding. With this mode, the best practice is to shuffle the
       * dataset nondeterministically so that workers process the dataset in
       * different orders.
       * </pre>
       *
       * <code>OFF = 0;</code>
       */
      OFF(0),
      /**
       * <pre>
       * The input dataset is dynamically split among workers at runtime. Each
       * worker gets the next split when it reads data from the dispatcher. There
       * is no fixed sharding with this mode.
       * </pre>
       *
       * <code>DYNAMIC = 1;</code>
       */
      DYNAMIC(1),
      /**
       * <pre>
       * The following are static sharding policies. The semantics are similar to
       * `tf.data.experimental.AutoShardPolicy`. These policies require:
       * * The tf.data service cluster has a fixed size, and you need to specify
       *   the workers in DispatcherConfig.
       * * Each client only reads from the local tf.data service worker.
       * Shards by input files (each worker will get a set of files to process).
       * When this option is selected, make sure that there is at least as many
       * files as workers. If there are fewer input files than workers, a runtime
       * error will be raised.
       * </pre>
       *
       * <code>FILE = 2;</code>
       */
      FILE(2),
      /**
       * <pre>
       * Shards by elements produced by the dataset. Each worker will process the
       * whole dataset and discard the portion that is not for itself. Note that
       * for this mode to correctly partitions the dataset elements, the dataset
       * needs to produce elements in a deterministic order.
       * </pre>
       *
       * <code>DATA = 3;</code>
       */
      DATA(3),
      /**
       * <pre>
       * Attempts FILE-based sharding, falling back to DATA-based sharding on
       * failures.
       * </pre>
       *
       * <code>FILE_OR_DATA = 4;</code>
       */
      FILE_OR_DATA(4),
      /**
       * <pre>
       * Looks for the presence of `shard(SHARD_HINT, ...)` which is treated as a
       * placeholder to replace with `shard(num_workers, worker_index)`.
       * </pre>
       *
       * <code>HINT = 5;</code>
       */
      HINT(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * No sharding will be performed. Each worker produces the entire dataset
       * without any sharding. With this mode, the best practice is to shuffle the
       * dataset nondeterministically so that workers process the dataset in
       * different orders.
       * </pre>
       *
       * <code>OFF = 0;</code>
       */
      public static final int OFF_VALUE = 0;
      /**
       * <pre>
       * The input dataset is dynamically split among workers at runtime. Each
       * worker gets the next split when it reads data from the dispatcher. There
       * is no fixed sharding with this mode.
       * </pre>
       *
       * <code>DYNAMIC = 1;</code>
       */
      public static final int DYNAMIC_VALUE = 1;
      /**
       * <pre>
       * The following are static sharding policies. The semantics are similar to
       * `tf.data.experimental.AutoShardPolicy`. These policies require:
       * * The tf.data service cluster has a fixed size, and you need to specify
       *   the workers in DispatcherConfig.
       * * Each client only reads from the local tf.data service worker.
       * Shards by input files (each worker will get a set of files to process).
       * When this option is selected, make sure that there is at least as many
       * files as workers. If there are fewer input files than workers, a runtime
       * error will be raised.
       * </pre>
       *
       * <code>FILE = 2;</code>
       */
      public static final int FILE_VALUE = 2;
      /**
       * <pre>
       * Shards by elements produced by the dataset. Each worker will process the
       * whole dataset and discard the portion that is not for itself. Note that
       * for this mode to correctly partitions the dataset elements, the dataset
       * needs to produce elements in a deterministic order.
       * </pre>
       *
       * <code>DATA = 3;</code>
       */
      public static final int DATA_VALUE = 3;
      /**
       * <pre>
       * Attempts FILE-based sharding, falling back to DATA-based sharding on
       * failures.
       * </pre>
       *
       * <code>FILE_OR_DATA = 4;</code>
       */
      public static final int FILE_OR_DATA_VALUE = 4;
      /**
       * <pre>
       * Looks for the presence of `shard(SHARD_HINT, ...)` which is treated as a
       * placeholder to replace with `shard(num_workers, worker_index)`.
       * </pre>
       *
       * <code>HINT = 5;</code>
       */
      public static final int HINT_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ShardingPolicy valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ShardingPolicy forNumber(int value) {
        switch (value) {
          case 0: return OFF;
          case 1: return DYNAMIC;
          case 2: return FILE;
          case 3: return DATA;
          case 4: return FILE_OR_DATA;
          case 5: return HINT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ShardingPolicy>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ShardingPolicy> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ShardingPolicy>() {
              public ShardingPolicy findValueByNumber(int number) {
                return ShardingPolicy.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return tensorflow.data.DataService.ProcessingModeDef.getDescriptor().getEnumTypes().get(0);
      }

      private static final ShardingPolicy[] VALUES = values();

      public static ShardingPolicy valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ShardingPolicy(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tensorflow.data.ProcessingModeDef.ShardingPolicy)
    }

    public static final int SHARDING_POLICY_FIELD_NUMBER = 1;
    private int shardingPolicy_ = 0;
    /**
     * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
     * @return The enum numeric value on the wire for shardingPolicy.
     */
    @java.lang.Override public int getShardingPolicyValue() {
      return shardingPolicy_;
    }
    /**
     * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
     * @return The shardingPolicy.
     */
    @java.lang.Override public tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy getShardingPolicy() {
      tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy result = tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy.forNumber(shardingPolicy_);
      return result == null ? tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (shardingPolicy_ != tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy.OFF.getNumber()) {
        output.writeEnum(1, shardingPolicy_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (shardingPolicy_ != tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy.OFF.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, shardingPolicy_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DataService.ProcessingModeDef)) {
        return super.equals(obj);
      }
      tensorflow.data.DataService.ProcessingModeDef other = (tensorflow.data.DataService.ProcessingModeDef) obj;

      if (shardingPolicy_ != other.shardingPolicy_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SHARDING_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + shardingPolicy_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DataService.ProcessingModeDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DataService.ProcessingModeDef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Next tag: 2
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.ProcessingModeDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.ProcessingModeDef)
        tensorflow.data.DataService.ProcessingModeDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DataService.internal_static_tensorflow_data_ProcessingModeDef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DataService.internal_static_tensorflow_data_ProcessingModeDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DataService.ProcessingModeDef.class, tensorflow.data.DataService.ProcessingModeDef.Builder.class);
      }

      // Construct using tensorflow.data.DataService.ProcessingModeDef.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        shardingPolicy_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DataService.internal_static_tensorflow_data_ProcessingModeDef_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DataService.ProcessingModeDef getDefaultInstanceForType() {
        return tensorflow.data.DataService.ProcessingModeDef.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DataService.ProcessingModeDef build() {
        tensorflow.data.DataService.ProcessingModeDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DataService.ProcessingModeDef buildPartial() {
        tensorflow.data.DataService.ProcessingModeDef result = new tensorflow.data.DataService.ProcessingModeDef(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.data.DataService.ProcessingModeDef result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.shardingPolicy_ = shardingPolicy_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DataService.ProcessingModeDef) {
          return mergeFrom((tensorflow.data.DataService.ProcessingModeDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DataService.ProcessingModeDef other) {
        if (other == tensorflow.data.DataService.ProcessingModeDef.getDefaultInstance()) return this;
        if (other.shardingPolicy_ != 0) {
          setShardingPolicyValue(other.getShardingPolicyValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                shardingPolicy_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int shardingPolicy_ = 0;
      /**
       * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
       * @return The enum numeric value on the wire for shardingPolicy.
       */
      @java.lang.Override public int getShardingPolicyValue() {
        return shardingPolicy_;
      }
      /**
       * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
       * @param value The enum numeric value on the wire for shardingPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setShardingPolicyValue(int value) {
        shardingPolicy_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
       * @return The shardingPolicy.
       */
      @java.lang.Override
      public tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy getShardingPolicy() {
        tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy result = tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy.forNumber(shardingPolicy_);
        return result == null ? tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
       * @param value The shardingPolicy to set.
       * @return This builder for chaining.
       */
      public Builder setShardingPolicy(tensorflow.data.DataService.ProcessingModeDef.ShardingPolicy value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        shardingPolicy_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.ProcessingModeDef.ShardingPolicy sharding_policy = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearShardingPolicy() {
        bitField0_ = (bitField0_ & ~0x00000001);
        shardingPolicy_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.ProcessingModeDef)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.ProcessingModeDef)
    private static final tensorflow.data.DataService.ProcessingModeDef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DataService.ProcessingModeDef();
    }

    public static tensorflow.data.DataService.ProcessingModeDef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProcessingModeDef>
        PARSER = new com.google.protobuf.AbstractParser<ProcessingModeDef>() {
      @java.lang.Override
      public ProcessingModeDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProcessingModeDef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessingModeDef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DataService.ProcessingModeDef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataServiceMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.data.DataServiceMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Serialized element spec.
     * </pre>
     *
     * <code>bytes element_spec = 1;</code>
     * @return Whether the elementSpec field is set.
     */
    boolean hasElementSpec();
    /**
     * <pre>
     * Serialized element spec.
     * </pre>
     *
     * <code>bytes element_spec = 1;</code>
     * @return The elementSpec.
     */
    com.google.protobuf.ByteString getElementSpec();

    /**
     * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
     * @return The enum numeric value on the wire for compression.
     */
    int getCompressionValue();
    /**
     * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
     * @return The compression.
     */
    tensorflow.data.DataService.DataServiceMetadata.Compression getCompression();

    /**
     * <pre>
     * Cardinality of the dataset.
     * </pre>
     *
     * <code>int64 cardinality = 3;</code>
     * @return The cardinality.
     */
    long getCardinality();

    public tensorflow.data.DataService.DataServiceMetadata.OptionalElementSpecCase getOptionalElementSpecCase();
  }
  /**
   * <pre>
   * Metadata related to tf.data service datasets.
   * Next tag: 4
   * </pre>
   *
   * Protobuf type {@code tensorflow.data.DataServiceMetadata}
   */
  public static final class DataServiceMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.data.DataServiceMetadata)
      DataServiceMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataServiceMetadata.newBuilder() to construct.
    private DataServiceMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataServiceMetadata() {
      compression_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataServiceMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.data.DataService.internal_static_tensorflow_data_DataServiceMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.data.DataService.internal_static_tensorflow_data_DataServiceMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.data.DataService.DataServiceMetadata.class, tensorflow.data.DataService.DataServiceMetadata.Builder.class);
    }

    /**
     * Protobuf enum {@code tensorflow.data.DataServiceMetadata.Compression}
     */
    public enum Compression
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>COMPRESSION_UNSPECIFIED = 0;</code>
       */
      COMPRESSION_UNSPECIFIED(0),
      /**
       * <pre>
       * No compression.
       * </pre>
       *
       * <code>OFF = 1;</code>
       */
      OFF(1),
      /**
       * <pre>
       * Snappy compression as defined in tensorflow/core/platform/snappy.h.
       * </pre>
       *
       * <code>SNAPPY = 2;</code>
       */
      SNAPPY(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>COMPRESSION_UNSPECIFIED = 0;</code>
       */
      public static final int COMPRESSION_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * No compression.
       * </pre>
       *
       * <code>OFF = 1;</code>
       */
      public static final int OFF_VALUE = 1;
      /**
       * <pre>
       * Snappy compression as defined in tensorflow/core/platform/snappy.h.
       * </pre>
       *
       * <code>SNAPPY = 2;</code>
       */
      public static final int SNAPPY_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Compression valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Compression forNumber(int value) {
        switch (value) {
          case 0: return COMPRESSION_UNSPECIFIED;
          case 1: return OFF;
          case 2: return SNAPPY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Compression>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Compression> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Compression>() {
              public Compression findValueByNumber(int number) {
                return Compression.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return tensorflow.data.DataService.DataServiceMetadata.getDescriptor().getEnumTypes().get(0);
      }

      private static final Compression[] VALUES = values();

      public static Compression valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Compression(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tensorflow.data.DataServiceMetadata.Compression)
    }

    private int optionalElementSpecCase_ = 0;
    private java.lang.Object optionalElementSpec_;
    public enum OptionalElementSpecCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ELEMENT_SPEC(1),
      OPTIONALELEMENTSPEC_NOT_SET(0);
      private final int value;
      private OptionalElementSpecCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalElementSpecCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalElementSpecCase forNumber(int value) {
        switch (value) {
          case 1: return ELEMENT_SPEC;
          case 0: return OPTIONALELEMENTSPEC_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalElementSpecCase
    getOptionalElementSpecCase() {
      return OptionalElementSpecCase.forNumber(
          optionalElementSpecCase_);
    }

    public static final int ELEMENT_SPEC_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Serialized element spec.
     * </pre>
     *
     * <code>bytes element_spec = 1;</code>
     * @return Whether the elementSpec field is set.
     */
    @java.lang.Override
    public boolean hasElementSpec() {
      return optionalElementSpecCase_ == 1;
    }
    /**
     * <pre>
     * Serialized element spec.
     * </pre>
     *
     * <code>bytes element_spec = 1;</code>
     * @return The elementSpec.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getElementSpec() {
      if (optionalElementSpecCase_ == 1) {
        return (com.google.protobuf.ByteString) optionalElementSpec_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    public static final int COMPRESSION_FIELD_NUMBER = 2;
    private int compression_ = 0;
    /**
     * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
     * @return The enum numeric value on the wire for compression.
     */
    @java.lang.Override public int getCompressionValue() {
      return compression_;
    }
    /**
     * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
     * @return The compression.
     */
    @java.lang.Override public tensorflow.data.DataService.DataServiceMetadata.Compression getCompression() {
      tensorflow.data.DataService.DataServiceMetadata.Compression result = tensorflow.data.DataService.DataServiceMetadata.Compression.forNumber(compression_);
      return result == null ? tensorflow.data.DataService.DataServiceMetadata.Compression.UNRECOGNIZED : result;
    }

    public static final int CARDINALITY_FIELD_NUMBER = 3;
    private long cardinality_ = 0L;
    /**
     * <pre>
     * Cardinality of the dataset.
     * </pre>
     *
     * <code>int64 cardinality = 3;</code>
     * @return The cardinality.
     */
    @java.lang.Override
    public long getCardinality() {
      return cardinality_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (optionalElementSpecCase_ == 1) {
        output.writeBytes(
            1, (com.google.protobuf.ByteString) optionalElementSpec_);
      }
      if (compression_ != tensorflow.data.DataService.DataServiceMetadata.Compression.COMPRESSION_UNSPECIFIED.getNumber()) {
        output.writeEnum(2, compression_);
      }
      if (cardinality_ != 0L) {
        output.writeInt64(3, cardinality_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (optionalElementSpecCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              1, (com.google.protobuf.ByteString) optionalElementSpec_);
      }
      if (compression_ != tensorflow.data.DataService.DataServiceMetadata.Compression.COMPRESSION_UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, compression_);
      }
      if (cardinality_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, cardinality_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.data.DataService.DataServiceMetadata)) {
        return super.equals(obj);
      }
      tensorflow.data.DataService.DataServiceMetadata other = (tensorflow.data.DataService.DataServiceMetadata) obj;

      if (compression_ != other.compression_) return false;
      if (getCardinality()
          != other.getCardinality()) return false;
      if (!getOptionalElementSpecCase().equals(other.getOptionalElementSpecCase())) return false;
      switch (optionalElementSpecCase_) {
        case 1:
          if (!getElementSpec()
              .equals(other.getElementSpec())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMPRESSION_FIELD_NUMBER;
      hash = (53 * hash) + compression_;
      hash = (37 * hash) + CARDINALITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCardinality());
      switch (optionalElementSpecCase_) {
        case 1:
          hash = (37 * hash) + ELEMENT_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getElementSpec().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.data.DataService.DataServiceMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.data.DataService.DataServiceMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metadata related to tf.data service datasets.
     * Next tag: 4
     * </pre>
     *
     * Protobuf type {@code tensorflow.data.DataServiceMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.data.DataServiceMetadata)
        tensorflow.data.DataService.DataServiceMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.data.DataService.internal_static_tensorflow_data_DataServiceMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.data.DataService.internal_static_tensorflow_data_DataServiceMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.data.DataService.DataServiceMetadata.class, tensorflow.data.DataService.DataServiceMetadata.Builder.class);
      }

      // Construct using tensorflow.data.DataService.DataServiceMetadata.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        compression_ = 0;
        cardinality_ = 0L;
        optionalElementSpecCase_ = 0;
        optionalElementSpec_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.data.DataService.internal_static_tensorflow_data_DataServiceMetadata_descriptor;
      }

      @java.lang.Override
      public tensorflow.data.DataService.DataServiceMetadata getDefaultInstanceForType() {
        return tensorflow.data.DataService.DataServiceMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.data.DataService.DataServiceMetadata build() {
        tensorflow.data.DataService.DataServiceMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.data.DataService.DataServiceMetadata buildPartial() {
        tensorflow.data.DataService.DataServiceMetadata result = new tensorflow.data.DataService.DataServiceMetadata(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.data.DataService.DataServiceMetadata result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.compression_ = compression_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cardinality_ = cardinality_;
        }
      }

      private void buildPartialOneofs(tensorflow.data.DataService.DataServiceMetadata result) {
        result.optionalElementSpecCase_ = optionalElementSpecCase_;
        result.optionalElementSpec_ = this.optionalElementSpec_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.data.DataService.DataServiceMetadata) {
          return mergeFrom((tensorflow.data.DataService.DataServiceMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.data.DataService.DataServiceMetadata other) {
        if (other == tensorflow.data.DataService.DataServiceMetadata.getDefaultInstance()) return this;
        if (other.compression_ != 0) {
          setCompressionValue(other.getCompressionValue());
        }
        if (other.getCardinality() != 0L) {
          setCardinality(other.getCardinality());
        }
        switch (other.getOptionalElementSpecCase()) {
          case ELEMENT_SPEC: {
            setElementSpec(other.getElementSpec());
            break;
          }
          case OPTIONALELEMENTSPEC_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                optionalElementSpec_ = input.readBytes();
                optionalElementSpecCase_ = 1;
                break;
              } // case 10
              case 16: {
                compression_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                cardinality_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalElementSpecCase_ = 0;
      private java.lang.Object optionalElementSpec_;
      public OptionalElementSpecCase
          getOptionalElementSpecCase() {
        return OptionalElementSpecCase.forNumber(
            optionalElementSpecCase_);
      }

      public Builder clearOptionalElementSpec() {
        optionalElementSpecCase_ = 0;
        optionalElementSpec_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <pre>
       * Serialized element spec.
       * </pre>
       *
       * <code>bytes element_spec = 1;</code>
       * @return Whether the elementSpec field is set.
       */
      public boolean hasElementSpec() {
        return optionalElementSpecCase_ == 1;
      }
      /**
       * <pre>
       * Serialized element spec.
       * </pre>
       *
       * <code>bytes element_spec = 1;</code>
       * @return The elementSpec.
       */
      public com.google.protobuf.ByteString getElementSpec() {
        if (optionalElementSpecCase_ == 1) {
          return (com.google.protobuf.ByteString) optionalElementSpec_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <pre>
       * Serialized element spec.
       * </pre>
       *
       * <code>bytes element_spec = 1;</code>
       * @param value The elementSpec to set.
       * @return This builder for chaining.
       */
      public Builder setElementSpec(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        optionalElementSpecCase_ = 1;
        optionalElementSpec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Serialized element spec.
       * </pre>
       *
       * <code>bytes element_spec = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearElementSpec() {
        if (optionalElementSpecCase_ == 1) {
          optionalElementSpecCase_ = 0;
          optionalElementSpec_ = null;
          onChanged();
        }
        return this;
      }

      private int compression_ = 0;
      /**
       * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
       * @return The enum numeric value on the wire for compression.
       */
      @java.lang.Override public int getCompressionValue() {
        return compression_;
      }
      /**
       * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
       * @param value The enum numeric value on the wire for compression to set.
       * @return This builder for chaining.
       */
      public Builder setCompressionValue(int value) {
        compression_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
       * @return The compression.
       */
      @java.lang.Override
      public tensorflow.data.DataService.DataServiceMetadata.Compression getCompression() {
        tensorflow.data.DataService.DataServiceMetadata.Compression result = tensorflow.data.DataService.DataServiceMetadata.Compression.forNumber(compression_);
        return result == null ? tensorflow.data.DataService.DataServiceMetadata.Compression.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
       * @param value The compression to set.
       * @return This builder for chaining.
       */
      public Builder setCompression(tensorflow.data.DataService.DataServiceMetadata.Compression value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        compression_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.data.DataServiceMetadata.Compression compression = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompression() {
        bitField0_ = (bitField0_ & ~0x00000002);
        compression_ = 0;
        onChanged();
        return this;
      }

      private long cardinality_ ;
      /**
       * <pre>
       * Cardinality of the dataset.
       * </pre>
       *
       * <code>int64 cardinality = 3;</code>
       * @return The cardinality.
       */
      @java.lang.Override
      public long getCardinality() {
        return cardinality_;
      }
      /**
       * <pre>
       * Cardinality of the dataset.
       * </pre>
       *
       * <code>int64 cardinality = 3;</code>
       * @param value The cardinality to set.
       * @return This builder for chaining.
       */
      public Builder setCardinality(long value) {
        
        cardinality_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Cardinality of the dataset.
       * </pre>
       *
       * <code>int64 cardinality = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCardinality() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cardinality_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.data.DataServiceMetadata)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.data.DataServiceMetadata)
    private static final tensorflow.data.DataService.DataServiceMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.data.DataService.DataServiceMetadata();
    }

    public static tensorflow.data.DataService.DataServiceMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DataServiceMetadata>
        PARSER = new com.google.protobuf.AbstractParser<DataServiceMetadata>() {
      @java.lang.Override
      public DataServiceMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DataServiceMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataServiceMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.data.DataService.DataServiceMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_ProcessingModeDef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_ProcessingModeDef_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_data_DataServiceMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_data_DataServiceMetadata_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n+tensorflow/core/protobuf/data_service." +
      "proto\022\017tensorflow.data\"\267\001\n\021ProcessingMod" +
      "eDef\022J\n\017sharding_policy\030\001 \001(\01621.tensorfl" +
      "ow.data.ProcessingModeDef.ShardingPolicy" +
      "\"V\n\016ShardingPolicy\022\007\n\003OFF\020\000\022\013\n\007DYNAMIC\020\001" +
      "\022\010\n\004FILE\020\002\022\010\n\004DATA\020\003\022\020\n\014FILE_OR_DATA\020\004\022\010" +
      "\n\004HINT\020\005\"\343\001\n\023DataServiceMetadata\022\026\n\014elem" +
      "ent_spec\030\001 \001(\014H\000\022E\n\013compression\030\002 \001(\01620." +
      "tensorflow.data.DataServiceMetadata.Comp" +
      "ression\022\023\n\013cardinality\030\003 \001(\003\"?\n\013Compress" +
      "ion\022\033\n\027COMPRESSION_UNSPECIFIED\020\000\022\007\n\003OFF\020" +
      "\001\022\n\n\006SNAPPY\020\002B\027\n\025optional_element_spec*\210" +
      "\001\n\016DeploymentMode\022\037\n\033DEPLOYMENT_MODE_UNS" +
      "PECIFIED\020\000\022\035\n\031DEPLOYMENT_MODE_COLOCATED\020" +
      "\001\022\032\n\026DEPLOYMENT_MODE_REMOTE\020\002\022\032\n\026DEPLOYM" +
      "ENT_MODE_HYBRID\020\003BWZUgithub.com/tensorfl" +
      "ow/tensorflow/tensorflow/go/core/protobu" +
      "f/for_core_protos_go_protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_tensorflow_data_ProcessingModeDef_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_data_ProcessingModeDef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_ProcessingModeDef_descriptor,
        new java.lang.String[] { "ShardingPolicy", });
    internal_static_tensorflow_data_DataServiceMetadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_data_DataServiceMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_data_DataServiceMetadata_descriptor,
        new java.lang.String[] { "ElementSpec", "Compression", "Cardinality", "OptionalElementSpec", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
