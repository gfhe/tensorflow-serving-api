// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/conv_autotuning.proto

package tensorflow;

public final class ConvAutotuning {
  private ConvAutotuning() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConvolutionProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.ConvolutionProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
     * @return The enum numeric value on the wire for kind.
     */
    int getKindValue();
    /**
     * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
     * @return The kind.
     */
    stream_executor.dnn.Dnn.ConvolutionKind getKind();

    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
     * @return Whether the input field is set.
     */
    boolean hasInput();
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
     * @return The input.
     */
    stream_executor.dnn.Dnn.TensorDescriptorProto getInput();
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
     */
    stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getInputOrBuilder();

    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
     * @return Whether the filter field is set.
     */
    boolean hasFilter();
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
     * @return The filter.
     */
    stream_executor.dnn.Dnn.TensorDescriptorProto getFilter();
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
     */
    stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getFilterOrBuilder();

    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
     * @return Whether the output field is set.
     */
    boolean hasOutput();
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
     * @return The output.
     */
    stream_executor.dnn.Dnn.TensorDescriptorProto getOutput();
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
     */
    stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getOutputOrBuilder();

    /**
     * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
     * @return Whether the convDesc field is set.
     */
    boolean hasConvDesc();
    /**
     * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
     * @return The convDesc.
     */
    stream_executor.dnn.Dnn.ConvolutionDescriptorProto getConvDesc();
    /**
     * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
     */
    stream_executor.dnn.Dnn.ConvolutionDescriptorProtoOrBuilder getConvDescOrBuilder();

    /**
     * <pre>
     * result = conv_scale * conv(...) + side_value_scale * side_value.
     * side_value is an arbitrary buffer if activation is not none. Otherwise, it
     * has to be the result buffer (using its old values).
     * </pre>
     *
     * <code>double conv_scale = 6;</code>
     * @return The convScale.
     */
    double getConvScale();

    /**
     * <code>double side_value_scale = 7;</code>
     * @return The sideValueScale.
     */
    double getSideValueScale();

    /**
     * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
     * @return The enum numeric value on the wire for activation.
     */
    int getActivationValue();
    /**
     * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
     * @return The activation.
     */
    stream_executor.dnn.Dnn.ActivationMode getActivation();

    /**
     * <code>int64 input_address = 9;</code>
     * @return The inputAddress.
     */
    long getInputAddress();

    /**
     * <code>int64 filter_address = 10;</code>
     * @return The filterAddress.
     */
    long getFilterAddress();

    /**
     * <code>int64 output_address = 11;</code>
     * @return The outputAddress.
     */
    long getOutputAddress();

    /**
     * <code>int64 bias_address = 12;</code>
     * @return The biasAddress.
     */
    long getBiasAddress();

    /**
     * <code>int64 side_input_address = 13;</code>
     * @return The sideInputAddress.
     */
    long getSideInputAddress();
  }
  /**
   * <pre>
   * A convolution. Currently it's only used for logging. In the future, we may
   * want to use it in the API as well.
   * </pre>
   *
   * Protobuf type {@code tensorflow.ConvolutionProto}
   */
  public static final class ConvolutionProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.ConvolutionProto)
      ConvolutionProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConvolutionProto.newBuilder() to construct.
    private ConvolutionProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConvolutionProto() {
      kind_ = 0;
      activation_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConvolutionProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.ConvAutotuning.internal_static_tensorflow_ConvolutionProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.ConvAutotuning.internal_static_tensorflow_ConvolutionProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.ConvAutotuning.ConvolutionProto.class, tensorflow.ConvAutotuning.ConvolutionProto.Builder.class);
    }

    public static final int KIND_FIELD_NUMBER = 1;
    private int kind_ = 0;
    /**
     * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
     * @return The enum numeric value on the wire for kind.
     */
    @java.lang.Override public int getKindValue() {
      return kind_;
    }
    /**
     * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
     * @return The kind.
     */
    @java.lang.Override public stream_executor.dnn.Dnn.ConvolutionKind getKind() {
      stream_executor.dnn.Dnn.ConvolutionKind result = stream_executor.dnn.Dnn.ConvolutionKind.forNumber(kind_);
      return result == null ? stream_executor.dnn.Dnn.ConvolutionKind.UNRECOGNIZED : result;
    }

    public static final int INPUT_FIELD_NUMBER = 2;
    private stream_executor.dnn.Dnn.TensorDescriptorProto input_;
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
     * @return Whether the input field is set.
     */
    @java.lang.Override
    public boolean hasInput() {
      return input_ != null;
    }
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
     * @return The input.
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.TensorDescriptorProto getInput() {
      return input_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : input_;
    }
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getInputOrBuilder() {
      return input_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : input_;
    }

    public static final int FILTER_FIELD_NUMBER = 3;
    private stream_executor.dnn.Dnn.TensorDescriptorProto filter_;
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
     * @return Whether the filter field is set.
     */
    @java.lang.Override
    public boolean hasFilter() {
      return filter_ != null;
    }
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
     * @return The filter.
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.TensorDescriptorProto getFilter() {
      return filter_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : filter_;
    }
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getFilterOrBuilder() {
      return filter_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : filter_;
    }

    public static final int OUTPUT_FIELD_NUMBER = 4;
    private stream_executor.dnn.Dnn.TensorDescriptorProto output_;
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
     * @return Whether the output field is set.
     */
    @java.lang.Override
    public boolean hasOutput() {
      return output_ != null;
    }
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
     * @return The output.
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.TensorDescriptorProto getOutput() {
      return output_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : output_;
    }
    /**
     * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getOutputOrBuilder() {
      return output_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : output_;
    }

    public static final int CONV_DESC_FIELD_NUMBER = 5;
    private stream_executor.dnn.Dnn.ConvolutionDescriptorProto convDesc_;
    /**
     * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
     * @return Whether the convDesc field is set.
     */
    @java.lang.Override
    public boolean hasConvDesc() {
      return convDesc_ != null;
    }
    /**
     * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
     * @return The convDesc.
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.ConvolutionDescriptorProto getConvDesc() {
      return convDesc_ == null ? stream_executor.dnn.Dnn.ConvolutionDescriptorProto.getDefaultInstance() : convDesc_;
    }
    /**
     * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
     */
    @java.lang.Override
    public stream_executor.dnn.Dnn.ConvolutionDescriptorProtoOrBuilder getConvDescOrBuilder() {
      return convDesc_ == null ? stream_executor.dnn.Dnn.ConvolutionDescriptorProto.getDefaultInstance() : convDesc_;
    }

    public static final int CONV_SCALE_FIELD_NUMBER = 6;
    private double convScale_ = 0D;
    /**
     * <pre>
     * result = conv_scale * conv(...) + side_value_scale * side_value.
     * side_value is an arbitrary buffer if activation is not none. Otherwise, it
     * has to be the result buffer (using its old values).
     * </pre>
     *
     * <code>double conv_scale = 6;</code>
     * @return The convScale.
     */
    @java.lang.Override
    public double getConvScale() {
      return convScale_;
    }

    public static final int SIDE_VALUE_SCALE_FIELD_NUMBER = 7;
    private double sideValueScale_ = 0D;
    /**
     * <code>double side_value_scale = 7;</code>
     * @return The sideValueScale.
     */
    @java.lang.Override
    public double getSideValueScale() {
      return sideValueScale_;
    }

    public static final int ACTIVATION_FIELD_NUMBER = 8;
    private int activation_ = 0;
    /**
     * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
     * @return The enum numeric value on the wire for activation.
     */
    @java.lang.Override public int getActivationValue() {
      return activation_;
    }
    /**
     * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
     * @return The activation.
     */
    @java.lang.Override public stream_executor.dnn.Dnn.ActivationMode getActivation() {
      stream_executor.dnn.Dnn.ActivationMode result = stream_executor.dnn.Dnn.ActivationMode.forNumber(activation_);
      return result == null ? stream_executor.dnn.Dnn.ActivationMode.UNRECOGNIZED : result;
    }

    public static final int INPUT_ADDRESS_FIELD_NUMBER = 9;
    private long inputAddress_ = 0L;
    /**
     * <code>int64 input_address = 9;</code>
     * @return The inputAddress.
     */
    @java.lang.Override
    public long getInputAddress() {
      return inputAddress_;
    }

    public static final int FILTER_ADDRESS_FIELD_NUMBER = 10;
    private long filterAddress_ = 0L;
    /**
     * <code>int64 filter_address = 10;</code>
     * @return The filterAddress.
     */
    @java.lang.Override
    public long getFilterAddress() {
      return filterAddress_;
    }

    public static final int OUTPUT_ADDRESS_FIELD_NUMBER = 11;
    private long outputAddress_ = 0L;
    /**
     * <code>int64 output_address = 11;</code>
     * @return The outputAddress.
     */
    @java.lang.Override
    public long getOutputAddress() {
      return outputAddress_;
    }

    public static final int BIAS_ADDRESS_FIELD_NUMBER = 12;
    private long biasAddress_ = 0L;
    /**
     * <code>int64 bias_address = 12;</code>
     * @return The biasAddress.
     */
    @java.lang.Override
    public long getBiasAddress() {
      return biasAddress_;
    }

    public static final int SIDE_INPUT_ADDRESS_FIELD_NUMBER = 13;
    private long sideInputAddress_ = 0L;
    /**
     * <code>int64 side_input_address = 13;</code>
     * @return The sideInputAddress.
     */
    @java.lang.Override
    public long getSideInputAddress() {
      return sideInputAddress_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (kind_ != stream_executor.dnn.Dnn.ConvolutionKind.INVALID.getNumber()) {
        output.writeEnum(1, kind_);
      }
      if (input_ != null) {
        output.writeMessage(2, getInput());
      }
      if (filter_ != null) {
        output.writeMessage(3, getFilter());
      }
      if (output_ != null) {
        output.writeMessage(4, getOutput());
      }
      if (convDesc_ != null) {
        output.writeMessage(5, getConvDesc());
      }
      if (java.lang.Double.doubleToRawLongBits(convScale_) != 0) {
        output.writeDouble(6, convScale_);
      }
      if (java.lang.Double.doubleToRawLongBits(sideValueScale_) != 0) {
        output.writeDouble(7, sideValueScale_);
      }
      if (activation_ != stream_executor.dnn.Dnn.ActivationMode.kNone.getNumber()) {
        output.writeEnum(8, activation_);
      }
      if (inputAddress_ != 0L) {
        output.writeInt64(9, inputAddress_);
      }
      if (filterAddress_ != 0L) {
        output.writeInt64(10, filterAddress_);
      }
      if (outputAddress_ != 0L) {
        output.writeInt64(11, outputAddress_);
      }
      if (biasAddress_ != 0L) {
        output.writeInt64(12, biasAddress_);
      }
      if (sideInputAddress_ != 0L) {
        output.writeInt64(13, sideInputAddress_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (kind_ != stream_executor.dnn.Dnn.ConvolutionKind.INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, kind_);
      }
      if (input_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getInput());
      }
      if (filter_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFilter());
      }
      if (output_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getOutput());
      }
      if (convDesc_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getConvDesc());
      }
      if (java.lang.Double.doubleToRawLongBits(convScale_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, convScale_);
      }
      if (java.lang.Double.doubleToRawLongBits(sideValueScale_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, sideValueScale_);
      }
      if (activation_ != stream_executor.dnn.Dnn.ActivationMode.kNone.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, activation_);
      }
      if (inputAddress_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, inputAddress_);
      }
      if (filterAddress_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, filterAddress_);
      }
      if (outputAddress_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, outputAddress_);
      }
      if (biasAddress_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(12, biasAddress_);
      }
      if (sideInputAddress_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, sideInputAddress_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.ConvAutotuning.ConvolutionProto)) {
        return super.equals(obj);
      }
      tensorflow.ConvAutotuning.ConvolutionProto other = (tensorflow.ConvAutotuning.ConvolutionProto) obj;

      if (kind_ != other.kind_) return false;
      if (hasInput() != other.hasInput()) return false;
      if (hasInput()) {
        if (!getInput()
            .equals(other.getInput())) return false;
      }
      if (hasFilter() != other.hasFilter()) return false;
      if (hasFilter()) {
        if (!getFilter()
            .equals(other.getFilter())) return false;
      }
      if (hasOutput() != other.hasOutput()) return false;
      if (hasOutput()) {
        if (!getOutput()
            .equals(other.getOutput())) return false;
      }
      if (hasConvDesc() != other.hasConvDesc()) return false;
      if (hasConvDesc()) {
        if (!getConvDesc()
            .equals(other.getConvDesc())) return false;
      }
      if (java.lang.Double.doubleToLongBits(getConvScale())
          != java.lang.Double.doubleToLongBits(
              other.getConvScale())) return false;
      if (java.lang.Double.doubleToLongBits(getSideValueScale())
          != java.lang.Double.doubleToLongBits(
              other.getSideValueScale())) return false;
      if (activation_ != other.activation_) return false;
      if (getInputAddress()
          != other.getInputAddress()) return false;
      if (getFilterAddress()
          != other.getFilterAddress()) return false;
      if (getOutputAddress()
          != other.getOutputAddress()) return false;
      if (getBiasAddress()
          != other.getBiasAddress()) return false;
      if (getSideInputAddress()
          != other.getSideInputAddress()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KIND_FIELD_NUMBER;
      hash = (53 * hash) + kind_;
      if (hasInput()) {
        hash = (37 * hash) + INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getInput().hashCode();
      }
      if (hasFilter()) {
        hash = (37 * hash) + FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getFilter().hashCode();
      }
      if (hasOutput()) {
        hash = (37 * hash) + OUTPUT_FIELD_NUMBER;
        hash = (53 * hash) + getOutput().hashCode();
      }
      if (hasConvDesc()) {
        hash = (37 * hash) + CONV_DESC_FIELD_NUMBER;
        hash = (53 * hash) + getConvDesc().hashCode();
      }
      hash = (37 * hash) + CONV_SCALE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getConvScale()));
      hash = (37 * hash) + SIDE_VALUE_SCALE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getSideValueScale()));
      hash = (37 * hash) + ACTIVATION_FIELD_NUMBER;
      hash = (53 * hash) + activation_;
      hash = (37 * hash) + INPUT_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInputAddress());
      hash = (37 * hash) + FILTER_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFilterAddress());
      hash = (37 * hash) + OUTPUT_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOutputAddress());
      hash = (37 * hash) + BIAS_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBiasAddress());
      hash = (37 * hash) + SIDE_INPUT_ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSideInputAddress());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ConvAutotuning.ConvolutionProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.ConvAutotuning.ConvolutionProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A convolution. Currently it's only used for logging. In the future, we may
     * want to use it in the API as well.
     * </pre>
     *
     * Protobuf type {@code tensorflow.ConvolutionProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.ConvolutionProto)
        tensorflow.ConvAutotuning.ConvolutionProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.ConvAutotuning.internal_static_tensorflow_ConvolutionProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.ConvAutotuning.internal_static_tensorflow_ConvolutionProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.ConvAutotuning.ConvolutionProto.class, tensorflow.ConvAutotuning.ConvolutionProto.Builder.class);
      }

      // Construct using tensorflow.ConvAutotuning.ConvolutionProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        kind_ = 0;
        input_ = null;
        if (inputBuilder_ != null) {
          inputBuilder_.dispose();
          inputBuilder_ = null;
        }
        filter_ = null;
        if (filterBuilder_ != null) {
          filterBuilder_.dispose();
          filterBuilder_ = null;
        }
        output_ = null;
        if (outputBuilder_ != null) {
          outputBuilder_.dispose();
          outputBuilder_ = null;
        }
        convDesc_ = null;
        if (convDescBuilder_ != null) {
          convDescBuilder_.dispose();
          convDescBuilder_ = null;
        }
        convScale_ = 0D;
        sideValueScale_ = 0D;
        activation_ = 0;
        inputAddress_ = 0L;
        filterAddress_ = 0L;
        outputAddress_ = 0L;
        biasAddress_ = 0L;
        sideInputAddress_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.ConvAutotuning.internal_static_tensorflow_ConvolutionProto_descriptor;
      }

      @java.lang.Override
      public tensorflow.ConvAutotuning.ConvolutionProto getDefaultInstanceForType() {
        return tensorflow.ConvAutotuning.ConvolutionProto.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.ConvAutotuning.ConvolutionProto build() {
        tensorflow.ConvAutotuning.ConvolutionProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.ConvAutotuning.ConvolutionProto buildPartial() {
        tensorflow.ConvAutotuning.ConvolutionProto result = new tensorflow.ConvAutotuning.ConvolutionProto(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.ConvAutotuning.ConvolutionProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.kind_ = kind_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.input_ = inputBuilder_ == null
              ? input_
              : inputBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.filter_ = filterBuilder_ == null
              ? filter_
              : filterBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.output_ = outputBuilder_ == null
              ? output_
              : outputBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.convDesc_ = convDescBuilder_ == null
              ? convDesc_
              : convDescBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.convScale_ = convScale_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.sideValueScale_ = sideValueScale_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.activation_ = activation_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.inputAddress_ = inputAddress_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.filterAddress_ = filterAddress_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.outputAddress_ = outputAddress_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.biasAddress_ = biasAddress_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.sideInputAddress_ = sideInputAddress_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.ConvAutotuning.ConvolutionProto) {
          return mergeFrom((tensorflow.ConvAutotuning.ConvolutionProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.ConvAutotuning.ConvolutionProto other) {
        if (other == tensorflow.ConvAutotuning.ConvolutionProto.getDefaultInstance()) return this;
        if (other.kind_ != 0) {
          setKindValue(other.getKindValue());
        }
        if (other.hasInput()) {
          mergeInput(other.getInput());
        }
        if (other.hasFilter()) {
          mergeFilter(other.getFilter());
        }
        if (other.hasOutput()) {
          mergeOutput(other.getOutput());
        }
        if (other.hasConvDesc()) {
          mergeConvDesc(other.getConvDesc());
        }
        if (other.getConvScale() != 0D) {
          setConvScale(other.getConvScale());
        }
        if (other.getSideValueScale() != 0D) {
          setSideValueScale(other.getSideValueScale());
        }
        if (other.activation_ != 0) {
          setActivationValue(other.getActivationValue());
        }
        if (other.getInputAddress() != 0L) {
          setInputAddress(other.getInputAddress());
        }
        if (other.getFilterAddress() != 0L) {
          setFilterAddress(other.getFilterAddress());
        }
        if (other.getOutputAddress() != 0L) {
          setOutputAddress(other.getOutputAddress());
        }
        if (other.getBiasAddress() != 0L) {
          setBiasAddress(other.getBiasAddress());
        }
        if (other.getSideInputAddress() != 0L) {
          setSideInputAddress(other.getSideInputAddress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                kind_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getInputFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getFilterFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getOutputFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getConvDescFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 49: {
                convScale_ = input.readDouble();
                bitField0_ |= 0x00000020;
                break;
              } // case 49
              case 57: {
                sideValueScale_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              case 64: {
                activation_ = input.readEnum();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                inputAddress_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                filterAddress_ = input.readInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                outputAddress_ = input.readInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                biasAddress_ = input.readInt64();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                sideInputAddress_ = input.readInt64();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int kind_ = 0;
      /**
       * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
       * @return The enum numeric value on the wire for kind.
       */
      @java.lang.Override public int getKindValue() {
        return kind_;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
       * @param value The enum numeric value on the wire for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKindValue(int value) {
        kind_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
       * @return The kind.
       */
      @java.lang.Override
      public stream_executor.dnn.Dnn.ConvolutionKind getKind() {
        stream_executor.dnn.Dnn.ConvolutionKind result = stream_executor.dnn.Dnn.ConvolutionKind.forNumber(kind_);
        return result == null ? stream_executor.dnn.Dnn.ConvolutionKind.UNRECOGNIZED : result;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(stream_executor.dnn.Dnn.ConvolutionKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionKind kind = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000001);
        kind_ = 0;
        onChanged();
        return this;
      }

      private stream_executor.dnn.Dnn.TensorDescriptorProto input_;
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder> inputBuilder_;
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       * @return Whether the input field is set.
       */
      public boolean hasInput() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       * @return The input.
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProto getInput() {
        if (inputBuilder_ == null) {
          return input_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : input_;
        } else {
          return inputBuilder_.getMessage();
        }
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      public Builder setInput(stream_executor.dnn.Dnn.TensorDescriptorProto value) {
        if (inputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          input_ = value;
        } else {
          inputBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      public Builder setInput(
          stream_executor.dnn.Dnn.TensorDescriptorProto.Builder builderForValue) {
        if (inputBuilder_ == null) {
          input_ = builderForValue.build();
        } else {
          inputBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      public Builder mergeInput(stream_executor.dnn.Dnn.TensorDescriptorProto value) {
        if (inputBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            input_ != null &&
            input_ != stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance()) {
            getInputBuilder().mergeFrom(value);
          } else {
            input_ = value;
          }
        } else {
          inputBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      public Builder clearInput() {
        bitField0_ = (bitField0_ & ~0x00000002);
        input_ = null;
        if (inputBuilder_ != null) {
          inputBuilder_.dispose();
          inputBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProto.Builder getInputBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getInputFieldBuilder().getBuilder();
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getInputOrBuilder() {
        if (inputBuilder_ != null) {
          return inputBuilder_.getMessageOrBuilder();
        } else {
          return input_ == null ?
              stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : input_;
        }
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto input = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder> 
          getInputFieldBuilder() {
        if (inputBuilder_ == null) {
          inputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder>(
                  getInput(),
                  getParentForChildren(),
                  isClean());
          input_ = null;
        }
        return inputBuilder_;
      }

      private stream_executor.dnn.Dnn.TensorDescriptorProto filter_;
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder> filterBuilder_;
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       * @return Whether the filter field is set.
       */
      public boolean hasFilter() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       * @return The filter.
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProto getFilter() {
        if (filterBuilder_ == null) {
          return filter_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : filter_;
        } else {
          return filterBuilder_.getMessage();
        }
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      public Builder setFilter(stream_executor.dnn.Dnn.TensorDescriptorProto value) {
        if (filterBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          filter_ = value;
        } else {
          filterBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      public Builder setFilter(
          stream_executor.dnn.Dnn.TensorDescriptorProto.Builder builderForValue) {
        if (filterBuilder_ == null) {
          filter_ = builderForValue.build();
        } else {
          filterBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      public Builder mergeFilter(stream_executor.dnn.Dnn.TensorDescriptorProto value) {
        if (filterBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            filter_ != null &&
            filter_ != stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance()) {
            getFilterBuilder().mergeFrom(value);
          } else {
            filter_ = value;
          }
        } else {
          filterBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      public Builder clearFilter() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filter_ = null;
        if (filterBuilder_ != null) {
          filterBuilder_.dispose();
          filterBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProto.Builder getFilterBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFilterFieldBuilder().getBuilder();
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getFilterOrBuilder() {
        if (filterBuilder_ != null) {
          return filterBuilder_.getMessageOrBuilder();
        } else {
          return filter_ == null ?
              stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : filter_;
        }
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto filter = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder> 
          getFilterFieldBuilder() {
        if (filterBuilder_ == null) {
          filterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder>(
                  getFilter(),
                  getParentForChildren(),
                  isClean());
          filter_ = null;
        }
        return filterBuilder_;
      }

      private stream_executor.dnn.Dnn.TensorDescriptorProto output_;
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder> outputBuilder_;
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       * @return Whether the output field is set.
       */
      public boolean hasOutput() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       * @return The output.
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProto getOutput() {
        if (outputBuilder_ == null) {
          return output_ == null ? stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : output_;
        } else {
          return outputBuilder_.getMessage();
        }
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      public Builder setOutput(stream_executor.dnn.Dnn.TensorDescriptorProto value) {
        if (outputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          output_ = value;
        } else {
          outputBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      public Builder setOutput(
          stream_executor.dnn.Dnn.TensorDescriptorProto.Builder builderForValue) {
        if (outputBuilder_ == null) {
          output_ = builderForValue.build();
        } else {
          outputBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      public Builder mergeOutput(stream_executor.dnn.Dnn.TensorDescriptorProto value) {
        if (outputBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            output_ != null &&
            output_ != stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance()) {
            getOutputBuilder().mergeFrom(value);
          } else {
            output_ = value;
          }
        } else {
          outputBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      public Builder clearOutput() {
        bitField0_ = (bitField0_ & ~0x00000008);
        output_ = null;
        if (outputBuilder_ != null) {
          outputBuilder_.dispose();
          outputBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProto.Builder getOutputBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getOutputFieldBuilder().getBuilder();
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      public stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder getOutputOrBuilder() {
        if (outputBuilder_ != null) {
          return outputBuilder_.getMessageOrBuilder();
        } else {
          return output_ == null ?
              stream_executor.dnn.Dnn.TensorDescriptorProto.getDefaultInstance() : output_;
        }
      }
      /**
       * <code>.stream_executor.dnn.TensorDescriptorProto output = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder> 
          getOutputFieldBuilder() {
        if (outputBuilder_ == null) {
          outputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              stream_executor.dnn.Dnn.TensorDescriptorProto, stream_executor.dnn.Dnn.TensorDescriptorProto.Builder, stream_executor.dnn.Dnn.TensorDescriptorProtoOrBuilder>(
                  getOutput(),
                  getParentForChildren(),
                  isClean());
          output_ = null;
        }
        return outputBuilder_;
      }

      private stream_executor.dnn.Dnn.ConvolutionDescriptorProto convDesc_;
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.ConvolutionDescriptorProto, stream_executor.dnn.Dnn.ConvolutionDescriptorProto.Builder, stream_executor.dnn.Dnn.ConvolutionDescriptorProtoOrBuilder> convDescBuilder_;
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       * @return Whether the convDesc field is set.
       */
      public boolean hasConvDesc() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       * @return The convDesc.
       */
      public stream_executor.dnn.Dnn.ConvolutionDescriptorProto getConvDesc() {
        if (convDescBuilder_ == null) {
          return convDesc_ == null ? stream_executor.dnn.Dnn.ConvolutionDescriptorProto.getDefaultInstance() : convDesc_;
        } else {
          return convDescBuilder_.getMessage();
        }
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      public Builder setConvDesc(stream_executor.dnn.Dnn.ConvolutionDescriptorProto value) {
        if (convDescBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          convDesc_ = value;
        } else {
          convDescBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      public Builder setConvDesc(
          stream_executor.dnn.Dnn.ConvolutionDescriptorProto.Builder builderForValue) {
        if (convDescBuilder_ == null) {
          convDesc_ = builderForValue.build();
        } else {
          convDescBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      public Builder mergeConvDesc(stream_executor.dnn.Dnn.ConvolutionDescriptorProto value) {
        if (convDescBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            convDesc_ != null &&
            convDesc_ != stream_executor.dnn.Dnn.ConvolutionDescriptorProto.getDefaultInstance()) {
            getConvDescBuilder().mergeFrom(value);
          } else {
            convDesc_ = value;
          }
        } else {
          convDescBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      public Builder clearConvDesc() {
        bitField0_ = (bitField0_ & ~0x00000010);
        convDesc_ = null;
        if (convDescBuilder_ != null) {
          convDescBuilder_.dispose();
          convDescBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      public stream_executor.dnn.Dnn.ConvolutionDescriptorProto.Builder getConvDescBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getConvDescFieldBuilder().getBuilder();
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      public stream_executor.dnn.Dnn.ConvolutionDescriptorProtoOrBuilder getConvDescOrBuilder() {
        if (convDescBuilder_ != null) {
          return convDescBuilder_.getMessageOrBuilder();
        } else {
          return convDesc_ == null ?
              stream_executor.dnn.Dnn.ConvolutionDescriptorProto.getDefaultInstance() : convDesc_;
        }
      }
      /**
       * <code>.stream_executor.dnn.ConvolutionDescriptorProto conv_desc = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          stream_executor.dnn.Dnn.ConvolutionDescriptorProto, stream_executor.dnn.Dnn.ConvolutionDescriptorProto.Builder, stream_executor.dnn.Dnn.ConvolutionDescriptorProtoOrBuilder> 
          getConvDescFieldBuilder() {
        if (convDescBuilder_ == null) {
          convDescBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              stream_executor.dnn.Dnn.ConvolutionDescriptorProto, stream_executor.dnn.Dnn.ConvolutionDescriptorProto.Builder, stream_executor.dnn.Dnn.ConvolutionDescriptorProtoOrBuilder>(
                  getConvDesc(),
                  getParentForChildren(),
                  isClean());
          convDesc_ = null;
        }
        return convDescBuilder_;
      }

      private double convScale_ ;
      /**
       * <pre>
       * result = conv_scale * conv(...) + side_value_scale * side_value.
       * side_value is an arbitrary buffer if activation is not none. Otherwise, it
       * has to be the result buffer (using its old values).
       * </pre>
       *
       * <code>double conv_scale = 6;</code>
       * @return The convScale.
       */
      @java.lang.Override
      public double getConvScale() {
        return convScale_;
      }
      /**
       * <pre>
       * result = conv_scale * conv(...) + side_value_scale * side_value.
       * side_value is an arbitrary buffer if activation is not none. Otherwise, it
       * has to be the result buffer (using its old values).
       * </pre>
       *
       * <code>double conv_scale = 6;</code>
       * @param value The convScale to set.
       * @return This builder for chaining.
       */
      public Builder setConvScale(double value) {
        
        convScale_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * result = conv_scale * conv(...) + side_value_scale * side_value.
       * side_value is an arbitrary buffer if activation is not none. Otherwise, it
       * has to be the result buffer (using its old values).
       * </pre>
       *
       * <code>double conv_scale = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearConvScale() {
        bitField0_ = (bitField0_ & ~0x00000020);
        convScale_ = 0D;
        onChanged();
        return this;
      }

      private double sideValueScale_ ;
      /**
       * <code>double side_value_scale = 7;</code>
       * @return The sideValueScale.
       */
      @java.lang.Override
      public double getSideValueScale() {
        return sideValueScale_;
      }
      /**
       * <code>double side_value_scale = 7;</code>
       * @param value The sideValueScale to set.
       * @return This builder for chaining.
       */
      public Builder setSideValueScale(double value) {
        
        sideValueScale_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>double side_value_scale = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSideValueScale() {
        bitField0_ = (bitField0_ & ~0x00000040);
        sideValueScale_ = 0D;
        onChanged();
        return this;
      }

      private int activation_ = 0;
      /**
       * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
       * @return The enum numeric value on the wire for activation.
       */
      @java.lang.Override public int getActivationValue() {
        return activation_;
      }
      /**
       * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
       * @param value The enum numeric value on the wire for activation to set.
       * @return This builder for chaining.
       */
      public Builder setActivationValue(int value) {
        activation_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
       * @return The activation.
       */
      @java.lang.Override
      public stream_executor.dnn.Dnn.ActivationMode getActivation() {
        stream_executor.dnn.Dnn.ActivationMode result = stream_executor.dnn.Dnn.ActivationMode.forNumber(activation_);
        return result == null ? stream_executor.dnn.Dnn.ActivationMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
       * @param value The activation to set.
       * @return This builder for chaining.
       */
      public Builder setActivation(stream_executor.dnn.Dnn.ActivationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        activation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.stream_executor.dnn.ActivationMode activation = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearActivation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        activation_ = 0;
        onChanged();
        return this;
      }

      private long inputAddress_ ;
      /**
       * <code>int64 input_address = 9;</code>
       * @return The inputAddress.
       */
      @java.lang.Override
      public long getInputAddress() {
        return inputAddress_;
      }
      /**
       * <code>int64 input_address = 9;</code>
       * @param value The inputAddress to set.
       * @return This builder for chaining.
       */
      public Builder setInputAddress(long value) {
        
        inputAddress_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>int64 input_address = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputAddress() {
        bitField0_ = (bitField0_ & ~0x00000100);
        inputAddress_ = 0L;
        onChanged();
        return this;
      }

      private long filterAddress_ ;
      /**
       * <code>int64 filter_address = 10;</code>
       * @return The filterAddress.
       */
      @java.lang.Override
      public long getFilterAddress() {
        return filterAddress_;
      }
      /**
       * <code>int64 filter_address = 10;</code>
       * @param value The filterAddress to set.
       * @return This builder for chaining.
       */
      public Builder setFilterAddress(long value) {
        
        filterAddress_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>int64 filter_address = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilterAddress() {
        bitField0_ = (bitField0_ & ~0x00000200);
        filterAddress_ = 0L;
        onChanged();
        return this;
      }

      private long outputAddress_ ;
      /**
       * <code>int64 output_address = 11;</code>
       * @return The outputAddress.
       */
      @java.lang.Override
      public long getOutputAddress() {
        return outputAddress_;
      }
      /**
       * <code>int64 output_address = 11;</code>
       * @param value The outputAddress to set.
       * @return This builder for chaining.
       */
      public Builder setOutputAddress(long value) {
        
        outputAddress_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>int64 output_address = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputAddress() {
        bitField0_ = (bitField0_ & ~0x00000400);
        outputAddress_ = 0L;
        onChanged();
        return this;
      }

      private long biasAddress_ ;
      /**
       * <code>int64 bias_address = 12;</code>
       * @return The biasAddress.
       */
      @java.lang.Override
      public long getBiasAddress() {
        return biasAddress_;
      }
      /**
       * <code>int64 bias_address = 12;</code>
       * @param value The biasAddress to set.
       * @return This builder for chaining.
       */
      public Builder setBiasAddress(long value) {
        
        biasAddress_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>int64 bias_address = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBiasAddress() {
        bitField0_ = (bitField0_ & ~0x00000800);
        biasAddress_ = 0L;
        onChanged();
        return this;
      }

      private long sideInputAddress_ ;
      /**
       * <code>int64 side_input_address = 13;</code>
       * @return The sideInputAddress.
       */
      @java.lang.Override
      public long getSideInputAddress() {
        return sideInputAddress_;
      }
      /**
       * <code>int64 side_input_address = 13;</code>
       * @param value The sideInputAddress to set.
       * @return This builder for chaining.
       */
      public Builder setSideInputAddress(long value) {
        
        sideInputAddress_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>int64 side_input_address = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearSideInputAddress() {
        bitField0_ = (bitField0_ & ~0x00001000);
        sideInputAddress_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.ConvolutionProto)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.ConvolutionProto)
    private static final tensorflow.ConvAutotuning.ConvolutionProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.ConvAutotuning.ConvolutionProto();
    }

    public static tensorflow.ConvAutotuning.ConvolutionProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConvolutionProto>
        PARSER = new com.google.protobuf.AbstractParser<ConvolutionProto>() {
      @java.lang.Override
      public ConvolutionProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ConvolutionProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConvolutionProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.ConvAutotuning.ConvolutionProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_ConvolutionProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_ConvolutionProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.tensorflow/core/protobuf/conv_autotuni" +
      "ng.proto\022\ntensorflow\032$tensorflow/stream_" +
      "executor/dnn.proto\"\235\004\n\020ConvolutionProto\022" +
      "2\n\004kind\030\001 \001(\0162$.stream_executor.dnn.Conv" +
      "olutionKind\0229\n\005input\030\002 \001(\0132*.stream_exec" +
      "utor.dnn.TensorDescriptorProto\022:\n\006filter" +
      "\030\003 \001(\0132*.stream_executor.dnn.TensorDescr" +
      "iptorProto\022:\n\006output\030\004 \001(\0132*.stream_exec" +
      "utor.dnn.TensorDescriptorProto\022B\n\tconv_d" +
      "esc\030\005 \001(\0132/.stream_executor.dnn.Convolut" +
      "ionDescriptorProto\022\022\n\nconv_scale\030\006 \001(\001\022\030" +
      "\n\020side_value_scale\030\007 \001(\001\0227\n\nactivation\030\010" +
      " \001(\0162#.stream_executor.dnn.ActivationMod" +
      "e\022\025\n\rinput_address\030\t \001(\003\022\026\n\016filter_addre" +
      "ss\030\n \001(\003\022\026\n\016output_address\030\013 \001(\003\022\024\n\014bias" +
      "_address\030\014 \001(\003\022\032\n\022side_input_address\030\r \001" +
      "(\003BWZUgithub.com/tensorflow/tensorflow/t" +
      "ensorflow/go/core/protobuf/for_core_prot" +
      "os_go_protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          stream_executor.dnn.Dnn.getDescriptor(),
        });
    internal_static_tensorflow_ConvolutionProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_ConvolutionProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_ConvolutionProto_descriptor,
        new java.lang.String[] { "Kind", "Input", "Filter", "Output", "ConvDesc", "ConvScale", "SideValueScale", "Activation", "InputAddress", "FilterAddress", "OutputAddress", "BiasAddress", "SideInputAddress", });
    stream_executor.dnn.Dnn.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
