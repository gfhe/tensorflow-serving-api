// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/master.proto

package org.tensorflow.distruntime;

public interface RunStepRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.RunStepRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * REQUIRED: session_handle must be returned by a CreateSession call
   * to the same master service.
   * </pre>
   *
   * <code>string session_handle = 1;</code>
   * @return The sessionHandle.
   */
  java.lang.String getSessionHandle();
  /**
   * <pre>
   * REQUIRED: session_handle must be returned by a CreateSession call
   * to the same master service.
   * </pre>
   *
   * <code>string session_handle = 1;</code>
   * @return The bytes for sessionHandle.
   */
  com.google.protobuf.ByteString
      getSessionHandleBytes();

  /**
   * <pre>
   * Tensors to be fed in the step. Each feed is a named tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto feed = 2;</code>
   */
  java.util.List<org.tensorflow.framework.NamedTensorProto> 
      getFeedList();
  /**
   * <pre>
   * Tensors to be fed in the step. Each feed is a named tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto feed = 2;</code>
   */
  org.tensorflow.framework.NamedTensorProto getFeed(int index);
  /**
   * <pre>
   * Tensors to be fed in the step. Each feed is a named tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto feed = 2;</code>
   */
  int getFeedCount();
  /**
   * <pre>
   * Tensors to be fed in the step. Each feed is a named tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto feed = 2;</code>
   */
  java.util.List<? extends org.tensorflow.framework.NamedTensorProtoOrBuilder> 
      getFeedOrBuilderList();
  /**
   * <pre>
   * Tensors to be fed in the step. Each feed is a named tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto feed = 2;</code>
   */
  org.tensorflow.framework.NamedTensorProtoOrBuilder getFeedOrBuilder(
      int index);

  /**
   * <pre>
   * Fetches. A list of tensor names. The caller expects a tensor to
   * be returned for each fetch[i] (see RunStepResponse.tensor). The
   * order of specified fetches does not change the execution order.
   * </pre>
   *
   * <code>repeated string fetch = 3;</code>
   * @return A list containing the fetch.
   */
  java.util.List<java.lang.String>
      getFetchList();
  /**
   * <pre>
   * Fetches. A list of tensor names. The caller expects a tensor to
   * be returned for each fetch[i] (see RunStepResponse.tensor). The
   * order of specified fetches does not change the execution order.
   * </pre>
   *
   * <code>repeated string fetch = 3;</code>
   * @return The count of fetch.
   */
  int getFetchCount();
  /**
   * <pre>
   * Fetches. A list of tensor names. The caller expects a tensor to
   * be returned for each fetch[i] (see RunStepResponse.tensor). The
   * order of specified fetches does not change the execution order.
   * </pre>
   *
   * <code>repeated string fetch = 3;</code>
   * @param index The index of the element to return.
   * @return The fetch at the given index.
   */
  java.lang.String getFetch(int index);
  /**
   * <pre>
   * Fetches. A list of tensor names. The caller expects a tensor to
   * be returned for each fetch[i] (see RunStepResponse.tensor). The
   * order of specified fetches does not change the execution order.
   * </pre>
   *
   * <code>repeated string fetch = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the fetch at the given index.
   */
  com.google.protobuf.ByteString
      getFetchBytes(int index);

  /**
   * <pre>
   * Target Nodes. A list of node names. The named nodes will be run
   * to but their outputs will not be fetched.
   * </pre>
   *
   * <code>repeated string target = 4;</code>
   * @return A list containing the target.
   */
  java.util.List<java.lang.String>
      getTargetList();
  /**
   * <pre>
   * Target Nodes. A list of node names. The named nodes will be run
   * to but their outputs will not be fetched.
   * </pre>
   *
   * <code>repeated string target = 4;</code>
   * @return The count of target.
   */
  int getTargetCount();
  /**
   * <pre>
   * Target Nodes. A list of node names. The named nodes will be run
   * to but their outputs will not be fetched.
   * </pre>
   *
   * <code>repeated string target = 4;</code>
   * @param index The index of the element to return.
   * @return The target at the given index.
   */
  java.lang.String getTarget(int index);
  /**
   * <pre>
   * Target Nodes. A list of node names. The named nodes will be run
   * to but their outputs will not be fetched.
   * </pre>
   *
   * <code>repeated string target = 4;</code>
   * @param index The index of the value to return.
   * @return The bytes of the target at the given index.
   */
  com.google.protobuf.ByteString
      getTargetBytes(int index);

  /**
   * <pre>
   * Options for the run call.
   * </pre>
   *
   * <code>.tensorflow.RunOptions options = 5;</code>
   * @return Whether the options field is set.
   */
  boolean hasOptions();
  /**
   * <pre>
   * Options for the run call.
   * </pre>
   *
   * <code>.tensorflow.RunOptions options = 5;</code>
   * @return The options.
   */
  org.tensorflow.framework.RunOptions getOptions();
  /**
   * <pre>
   * Options for the run call.
   * </pre>
   *
   * <code>.tensorflow.RunOptions options = 5;</code>
   */
  org.tensorflow.framework.RunOptionsOrBuilder getOptionsOrBuilder();

  /**
   * <pre>
   * Partial run handle (optional). If specified, this will be a partial run
   * execution, run up to the specified fetches.
   * </pre>
   *
   * <code>string partial_run_handle = 6;</code>
   * @return The partialRunHandle.
   */
  java.lang.String getPartialRunHandle();
  /**
   * <pre>
   * Partial run handle (optional). If specified, this will be a partial run
   * execution, run up to the specified fetches.
   * </pre>
   *
   * <code>string partial_run_handle = 6;</code>
   * @return The bytes for partialRunHandle.
   */
  com.google.protobuf.ByteString
      getPartialRunHandleBytes();

  /**
   * <pre>
   * If true then some errors, e.g., execution errors that have long
   * error messages, may return an OK RunStepResponse with the actual
   * error saved in the status_code/status_error_message fields of the
   * response body. This is a workaround since the RPC subsystem may
   * truncate long metadata messages.
   * </pre>
   *
   * <code>bool store_errors_in_response_body = 7;</code>
   * @return The storeErrorsInResponseBody.
   */
  boolean getStoreErrorsInResponseBody();

  /**
   * <pre>
   * Unique identifier for this request. Every RunStepRequest must
   * have a unique request_id, and retried RunStepRequest must have
   * the same request_id. If request_id is zero, retry detection is disabled.
   * </pre>
   *
   * <code>int64 request_id = 8;</code>
   * @return The requestId.
   */
  long getRequestId();
}
