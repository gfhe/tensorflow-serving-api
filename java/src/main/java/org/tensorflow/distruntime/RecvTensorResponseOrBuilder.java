// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/worker.proto

package org.tensorflow.distruntime;

public interface RecvTensorResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.RecvTensorResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The tensor as a proto.
   * </pre>
   *
   * <code>.tensorflow.TensorProto tensor = 1;</code>
   * @return Whether the tensor field is set.
   */
  boolean hasTensor();
  /**
   * <pre>
   * The tensor as a proto.
   * </pre>
   *
   * <code>.tensorflow.TensorProto tensor = 1;</code>
   * @return The tensor.
   */
  org.tensorflow.framework.TensorProto getTensor();
  /**
   * <pre>
   * The tensor as a proto.
   * </pre>
   *
   * <code>.tensorflow.TensorProto tensor = 1;</code>
   */
  org.tensorflow.framework.TensorProtoOrBuilder getTensorOrBuilder();

  /**
   * <pre>
   * If true, this tensor was the output of a dead node, and the
   * content is invalid.
   * </pre>
   *
   * <code>bool is_dead = 2;</code>
   * @return The isDead.
   */
  boolean getIsDead();

  /**
   * <pre>
   * The time at which tensor was available and started to be returned.
   * </pre>
   *
   * <code>int64 send_start_micros = 3;</code>
   * @return The sendStartMicros.
   */
  long getSendStartMicros();

  /**
   * <pre>
   * Optional additional information about how to receive the tensor,
   * e.g. in the event that `RecvTensorRequest.dma_ok` was true.
   * </pre>
   *
   * <code>.google.protobuf.Any transport_options = 4;</code>
   * @return Whether the transportOptions field is set.
   */
  boolean hasTransportOptions();
  /**
   * <pre>
   * Optional additional information about how to receive the tensor,
   * e.g. in the event that `RecvTensorRequest.dma_ok` was true.
   * </pre>
   *
   * <code>.google.protobuf.Any transport_options = 4;</code>
   * @return The transportOptions.
   */
  com.google.protobuf.Any getTransportOptions();
  /**
   * <pre>
   * Optional additional information about how to receive the tensor,
   * e.g. in the event that `RecvTensorRequest.dma_ok` was true.
   * </pre>
   *
   * <code>.google.protobuf.Any transport_options = 4;</code>
   */
  com.google.protobuf.AnyOrBuilder getTransportOptionsOrBuilder();

  /**
   * <pre>
   * Whether the receiver should send a MarkRecvFinishedRequest to the sender
   * to ack the message.
   * </pre>
   *
   * <code>bool require_ack = 5;</code>
   * @return The requireAck.
   */
  boolean getRequireAck();
}
