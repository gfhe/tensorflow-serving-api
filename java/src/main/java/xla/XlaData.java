// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/xla_data.proto

package xla;

public final class XlaData {
  private XlaData() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Primitive types are the individual values that can be held in rectangular
   * multidimensional arrays. A description of the rectangular multidimensional
   * array dimensions / primitive type is given by Shape, below.
   * LINT.IfChange
   * </pre>
   *
   * Protobuf enum {@code xla.PrimitiveType}
   */
  public enum PrimitiveType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Invalid primitive type to serve as default.
     * </pre>
     *
     * <code>PRIMITIVE_TYPE_INVALID = 0;</code>
     */
    PRIMITIVE_TYPE_INVALID(0),
    /**
     * <pre>
     * Predicates are two-state booleans.
     * </pre>
     *
     * <code>PRED = 1;</code>
     */
    PRED(1),
    /**
     * <pre>
     * Signed integral values of fixed width.
     * </pre>
     *
     * <code>S8 = 2;</code>
     */
    S8(2),
    /**
     * <code>S16 = 3;</code>
     */
    S16(3),
    /**
     * <code>S32 = 4;</code>
     */
    S32(4),
    /**
     * <code>S64 = 5;</code>
     */
    S64(5),
    /**
     * <pre>
     * Unsigned integral values of fixed width.
     * </pre>
     *
     * <code>U8 = 6;</code>
     */
    U8(6),
    /**
     * <code>U16 = 7;</code>
     */
    U16(7),
    /**
     * <code>U32 = 8;</code>
     */
    U32(8),
    /**
     * <code>U64 = 9;</code>
     */
    U64(9),
    /**
     * <pre>
     * Floating-point values of fixed width.
     * Note: if f16s are not natively supported on the device, they will be
     * converted to f16 from f32 at arbirary points in the computation.
     * </pre>
     *
     * <code>F16 = 10;</code>
     */
    F16(10),
    /**
     * <code>F32 = 11;</code>
     */
    F32(11),
    /**
     * <pre>
     * Truncated 16 bit floating-point format. This is similar to IEEE's 16 bit
     * floating-point format, but uses 1 bit for the sign, 8 bits for the exponent
     * and 7 bits for the mantissa.
     * </pre>
     *
     * <code>BF16 = 16;</code>
     */
    BF16(16),
    /**
     * <code>F64 = 12;</code>
     */
    F64(12),
    /**
     * <pre>
     * Complex values of fixed width.
     * </pre>
     *
     * <code>C64 = 15;</code>
     */
    C64(15),
    /**
     * <pre>
     * Paired F64 (real, imag), as in std::complex&lt;double&gt;.
     * </pre>
     *
     * <code>C128 = 18;</code>
     */
    C128(18),
    /**
     * <pre>
     * A tuple is a polymorphic sequence; e.g. a shape that holds different
     * sub-shapes. They are used for things like returning multiple values from a
     * computation; e.g. a computation that returns weights and biases may have a
     * signature that results in a tuple like (f32[784x2000], f32[2000])
     * If a shape proto has the tuple element type, it may not have any entries
     * in the dimensions field.
     * </pre>
     *
     * <code>TUPLE = 13;</code>
     */
    TUPLE(13),
    /**
     * <pre>
     * An opaque type used for passing context-specific data to a custom
     * operation. Shapes of this primitive type will have empty dimensions and
     * tuple_shapes fields.
     * (OPAQUE would be a better name for this identifier, but that conflicts with
     * a macro defined in windows.h.)
     * </pre>
     *
     * <code>OPAQUE_TYPE = 14;</code>
     */
    OPAQUE_TYPE(14),
    /**
     * <pre>
     * A token type threaded between side-effecting operations. Shapes of this
     * primitive type will have empty dimensions and tuple_shapes fields.
     * </pre>
     *
     * <code>TOKEN = 17;</code>
     */
    TOKEN(17),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Invalid primitive type to serve as default.
     * </pre>
     *
     * <code>PRIMITIVE_TYPE_INVALID = 0;</code>
     */
    public static final int PRIMITIVE_TYPE_INVALID_VALUE = 0;
    /**
     * <pre>
     * Predicates are two-state booleans.
     * </pre>
     *
     * <code>PRED = 1;</code>
     */
    public static final int PRED_VALUE = 1;
    /**
     * <pre>
     * Signed integral values of fixed width.
     * </pre>
     *
     * <code>S8 = 2;</code>
     */
    public static final int S8_VALUE = 2;
    /**
     * <code>S16 = 3;</code>
     */
    public static final int S16_VALUE = 3;
    /**
     * <code>S32 = 4;</code>
     */
    public static final int S32_VALUE = 4;
    /**
     * <code>S64 = 5;</code>
     */
    public static final int S64_VALUE = 5;
    /**
     * <pre>
     * Unsigned integral values of fixed width.
     * </pre>
     *
     * <code>U8 = 6;</code>
     */
    public static final int U8_VALUE = 6;
    /**
     * <code>U16 = 7;</code>
     */
    public static final int U16_VALUE = 7;
    /**
     * <code>U32 = 8;</code>
     */
    public static final int U32_VALUE = 8;
    /**
     * <code>U64 = 9;</code>
     */
    public static final int U64_VALUE = 9;
    /**
     * <pre>
     * Floating-point values of fixed width.
     * Note: if f16s are not natively supported on the device, they will be
     * converted to f16 from f32 at arbirary points in the computation.
     * </pre>
     *
     * <code>F16 = 10;</code>
     */
    public static final int F16_VALUE = 10;
    /**
     * <code>F32 = 11;</code>
     */
    public static final int F32_VALUE = 11;
    /**
     * <pre>
     * Truncated 16 bit floating-point format. This is similar to IEEE's 16 bit
     * floating-point format, but uses 1 bit for the sign, 8 bits for the exponent
     * and 7 bits for the mantissa.
     * </pre>
     *
     * <code>BF16 = 16;</code>
     */
    public static final int BF16_VALUE = 16;
    /**
     * <code>F64 = 12;</code>
     */
    public static final int F64_VALUE = 12;
    /**
     * <pre>
     * Complex values of fixed width.
     * </pre>
     *
     * <code>C64 = 15;</code>
     */
    public static final int C64_VALUE = 15;
    /**
     * <pre>
     * Paired F64 (real, imag), as in std::complex&lt;double&gt;.
     * </pre>
     *
     * <code>C128 = 18;</code>
     */
    public static final int C128_VALUE = 18;
    /**
     * <pre>
     * A tuple is a polymorphic sequence; e.g. a shape that holds different
     * sub-shapes. They are used for things like returning multiple values from a
     * computation; e.g. a computation that returns weights and biases may have a
     * signature that results in a tuple like (f32[784x2000], f32[2000])
     * If a shape proto has the tuple element type, it may not have any entries
     * in the dimensions field.
     * </pre>
     *
     * <code>TUPLE = 13;</code>
     */
    public static final int TUPLE_VALUE = 13;
    /**
     * <pre>
     * An opaque type used for passing context-specific data to a custom
     * operation. Shapes of this primitive type will have empty dimensions and
     * tuple_shapes fields.
     * (OPAQUE would be a better name for this identifier, but that conflicts with
     * a macro defined in windows.h.)
     * </pre>
     *
     * <code>OPAQUE_TYPE = 14;</code>
     */
    public static final int OPAQUE_TYPE_VALUE = 14;
    /**
     * <pre>
     * A token type threaded between side-effecting operations. Shapes of this
     * primitive type will have empty dimensions and tuple_shapes fields.
     * </pre>
     *
     * <code>TOKEN = 17;</code>
     */
    public static final int TOKEN_VALUE = 17;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PrimitiveType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PrimitiveType forNumber(int value) {
      switch (value) {
        case 0: return PRIMITIVE_TYPE_INVALID;
        case 1: return PRED;
        case 2: return S8;
        case 3: return S16;
        case 4: return S32;
        case 5: return S64;
        case 6: return U8;
        case 7: return U16;
        case 8: return U32;
        case 9: return U64;
        case 10: return F16;
        case 11: return F32;
        case 16: return BF16;
        case 12: return F64;
        case 15: return C64;
        case 18: return C128;
        case 13: return TUPLE;
        case 14: return OPAQUE_TYPE;
        case 17: return TOKEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PrimitiveType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PrimitiveType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PrimitiveType>() {
            public PrimitiveType findValueByNumber(int number) {
              return PrimitiveType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(0);
    }

    private static final PrimitiveType[] VALUES = values();

    public static PrimitiveType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PrimitiveType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.PrimitiveType)
  }

  /**
   * <pre>
   * A format specifies the method used by a layout to store an array in memory.
   * </pre>
   *
   * Protobuf enum {@code xla.Format}
   */
  public enum Format
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * TODO(b/120869032): Rename this to FORMAT_NONE or something else which
     * better corresponds to its meaning.
     * </pre>
     *
     * <code>INVALID_FORMAT = 0;</code>
     */
    INVALID_FORMAT(0),
    /**
     * <pre>
     * The default layout, with exactly one storage location per element.
     * </pre>
     *
     * <code>DENSE = 1;</code>
     */
    DENSE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * TODO(b/120869032): Rename this to FORMAT_NONE or something else which
     * better corresponds to its meaning.
     * </pre>
     *
     * <code>INVALID_FORMAT = 0;</code>
     */
    public static final int INVALID_FORMAT_VALUE = 0;
    /**
     * <pre>
     * The default layout, with exactly one storage location per element.
     * </pre>
     *
     * <code>DENSE = 1;</code>
     */
    public static final int DENSE_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Format valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Format forNumber(int value) {
      switch (value) {
        case 0: return INVALID_FORMAT;
        case 1: return DENSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Format>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Format> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Format>() {
            public Format findValueByNumber(int number) {
              return Format.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(1);
    }

    private static final Format[] VALUES = values();

    public static Format valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Format(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.Format)
  }

  /**
   * <pre>
   * The type optimization profiles in use.
   * </pre>
   *
   * Protobuf enum {@code xla.ProfileType}
   */
  public enum ProfileType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>INVALID = 0;</code>
     */
    INVALID(0),
    /**
     * <code>WINDOW = 1;</code>
     */
    WINDOW(1),
    /**
     * <code>FLAG = 2;</code>
     */
    FLAG(2),
    /**
     * <code>INTEGER = 3;</code>
     */
    INTEGER(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>INVALID = 0;</code>
     */
    public static final int INVALID_VALUE = 0;
    /**
     * <code>WINDOW = 1;</code>
     */
    public static final int WINDOW_VALUE = 1;
    /**
     * <code>FLAG = 2;</code>
     */
    public static final int FLAG_VALUE = 2;
    /**
     * <code>INTEGER = 3;</code>
     */
    public static final int INTEGER_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProfileType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProfileType forNumber(int value) {
      switch (value) {
        case 0: return INVALID;
        case 1: return WINDOW;
        case 2: return FLAG;
        case 3: return INTEGER;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProfileType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProfileType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProfileType>() {
            public ProfileType findValueByNumber(int number) {
              return ProfileType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(2);
    }

    private static final ProfileType[] VALUES = values();

    public static ProfileType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProfileType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.ProfileType)
  }

  /**
   * Protobuf enum {@code xla.PaddingType}
   */
  public enum PaddingType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PADDING_INVALID = 0;</code>
     */
    PADDING_INVALID(0),
    /**
     * <pre>
     * Only valid portion of the base are covered.
     * </pre>
     *
     * <code>PADDING_VALID = 1;</code>
     */
    PADDING_VALID(1),
    /**
     * <pre>
     * Extra is added to produce same output size as the input.
     * </pre>
     *
     * <code>PADDING_SAME = 2;</code>
     */
    PADDING_SAME(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PADDING_INVALID = 0;</code>
     */
    public static final int PADDING_INVALID_VALUE = 0;
    /**
     * <pre>
     * Only valid portion of the base are covered.
     * </pre>
     *
     * <code>PADDING_VALID = 1;</code>
     */
    public static final int PADDING_VALID_VALUE = 1;
    /**
     * <pre>
     * Extra is added to produce same output size as the input.
     * </pre>
     *
     * <code>PADDING_SAME = 2;</code>
     */
    public static final int PADDING_SAME_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PaddingType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PaddingType forNumber(int value) {
      switch (value) {
        case 0: return PADDING_INVALID;
        case 1: return PADDING_VALID;
        case 2: return PADDING_SAME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PaddingType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PaddingType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PaddingType>() {
            public PaddingType findValueByNumber(int number) {
              return PaddingType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(3);
    }

    private static final PaddingType[] VALUES = values();

    public static PaddingType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private PaddingType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.PaddingType)
  }

  /**
   * Protobuf enum {@code xla.FftType}
   */
  public enum FftType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Forward FFT; complex in, complex out.
     * </pre>
     *
     * <code>FFT = 0;</code>
     */
    FFT(0),
    /**
     * <pre>
     * Inverse FFT; complex in, complex out.
     * </pre>
     *
     * <code>IFFT = 1;</code>
     */
    IFFT(1),
    /**
     * <pre>
     * Forward real FFT; real in, fft_length / 2 + 1 complex out
     * </pre>
     *
     * <code>RFFT = 2;</code>
     */
    RFFT(2),
    /**
     * <pre>
     * Inverse real FFT; fft_length / 2 + 1 complex in,
     * </pre>
     *
     * <code>IRFFT = 3;</code>
     */
    IRFFT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Forward FFT; complex in, complex out.
     * </pre>
     *
     * <code>FFT = 0;</code>
     */
    public static final int FFT_VALUE = 0;
    /**
     * <pre>
     * Inverse FFT; complex in, complex out.
     * </pre>
     *
     * <code>IFFT = 1;</code>
     */
    public static final int IFFT_VALUE = 1;
    /**
     * <pre>
     * Forward real FFT; real in, fft_length / 2 + 1 complex out
     * </pre>
     *
     * <code>RFFT = 2;</code>
     */
    public static final int RFFT_VALUE = 2;
    /**
     * <pre>
     * Inverse real FFT; fft_length / 2 + 1 complex in,
     * </pre>
     *
     * <code>IRFFT = 3;</code>
     */
    public static final int IRFFT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FftType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static FftType forNumber(int value) {
      switch (value) {
        case 0: return FFT;
        case 1: return IFFT;
        case 2: return RFFT;
        case 3: return IRFFT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FftType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FftType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FftType>() {
            public FftType findValueByNumber(int number) {
              return FftType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(4);
    }

    private static final FftType[] VALUES = values();

    public static FftType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FftType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.FftType)
  }

  /**
   * Protobuf enum {@code xla.RandomDistribution}
   */
  public enum RandomDistribution
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RNG_INVALID = 0;</code>
     */
    RNG_INVALID(0),
    /**
     * <pre>
     * Creates a uniform-distribution-generated random number on the semi-open
     * interval [parameter[0], parameter[1]).
     * </pre>
     *
     * <code>RNG_UNIFORM = 1;</code>
     */
    RNG_UNIFORM(1),
    /**
     * <pre>
     * Creates a normal-distribution-generated random number with mean
     * parameter[0] and standard deviation parameter[1].
     * </pre>
     *
     * <code>RNG_NORMAL = 2;</code>
     */
    RNG_NORMAL(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RNG_INVALID = 0;</code>
     */
    public static final int RNG_INVALID_VALUE = 0;
    /**
     * <pre>
     * Creates a uniform-distribution-generated random number on the semi-open
     * interval [parameter[0], parameter[1]).
     * </pre>
     *
     * <code>RNG_UNIFORM = 1;</code>
     */
    public static final int RNG_UNIFORM_VALUE = 1;
    /**
     * <pre>
     * Creates a normal-distribution-generated random number with mean
     * parameter[0] and standard deviation parameter[1].
     * </pre>
     *
     * <code>RNG_NORMAL = 2;</code>
     */
    public static final int RNG_NORMAL_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RandomDistribution valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RandomDistribution forNumber(int value) {
      switch (value) {
        case 0: return RNG_INVALID;
        case 1: return RNG_UNIFORM;
        case 2: return RNG_NORMAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RandomDistribution>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RandomDistribution> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RandomDistribution>() {
            public RandomDistribution findValueByNumber(int number) {
              return RandomDistribution.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(5);
    }

    private static final RandomDistribution[] VALUES = values();

    public static RandomDistribution valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RandomDistribution(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.RandomDistribution)
  }

  /**
   * Protobuf enum {@code xla.RandomAlgorithm}
   */
  public enum RandomAlgorithm
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Backend dependent default algorithm.
     * </pre>
     *
     * <code>RNG_DEFAULT = 0;</code>
     */
    RNG_DEFAULT(0),
    /**
     * <code>RNG_THREE_FRY = 1;</code>
     */
    RNG_THREE_FRY(1),
    /**
     * <pre>
     * Next: 2
     * </pre>
     *
     * <code>RNG_PHILOX = 2;</code>
     */
    RNG_PHILOX(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Backend dependent default algorithm.
     * </pre>
     *
     * <code>RNG_DEFAULT = 0;</code>
     */
    public static final int RNG_DEFAULT_VALUE = 0;
    /**
     * <code>RNG_THREE_FRY = 1;</code>
     */
    public static final int RNG_THREE_FRY_VALUE = 1;
    /**
     * <pre>
     * Next: 2
     * </pre>
     *
     * <code>RNG_PHILOX = 2;</code>
     */
    public static final int RNG_PHILOX_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RandomAlgorithm valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RandomAlgorithm forNumber(int value) {
      switch (value) {
        case 0: return RNG_DEFAULT;
        case 1: return RNG_THREE_FRY;
        case 2: return RNG_PHILOX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RandomAlgorithm>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RandomAlgorithm> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RandomAlgorithm>() {
            public RandomAlgorithm findValueByNumber(int number) {
              return RandomAlgorithm.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return xla.XlaData.getDescriptor().getEnumTypes().get(6);
    }

    private static final RandomAlgorithm[] VALUES = values();

    public static RandomAlgorithm valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RandomAlgorithm(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:xla.RandomAlgorithm)
  }

  public interface PaddingConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.PaddingConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    java.util.List<xla.XlaData.PaddingConfig.PaddingConfigDimension> 
        getDimensionsList();
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    xla.XlaData.PaddingConfig.PaddingConfigDimension getDimensions(int index);
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    int getDimensionsCount();
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    java.util.List<? extends xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder> 
        getDimensionsOrBuilderList();
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder getDimensionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes the padding configuration for Pad operation. The padding amount on
   * both edges as well as between the elements are specified for each dimension.
   * </pre>
   *
   * Protobuf type {@code xla.PaddingConfig}
   */
  public static final class PaddingConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.PaddingConfig)
      PaddingConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PaddingConfig.newBuilder() to construct.
    private PaddingConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PaddingConfig() {
      dimensions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PaddingConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_PaddingConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_PaddingConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.PaddingConfig.class, xla.XlaData.PaddingConfig.Builder.class);
    }

    public interface PaddingConfigDimensionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:xla.PaddingConfig.PaddingConfigDimension)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Padding amount on the low-end (next to the index 0). May be negative.
       * </pre>
       *
       * <code>int64 edge_padding_low = 1;</code>
       * @return The edgePaddingLow.
       */
      long getEdgePaddingLow();

      /**
       * <pre>
       * Padding amount on the high-end (next to the highest index). May be
       * negative.
       * </pre>
       *
       * <code>int64 edge_padding_high = 2;</code>
       * @return The edgePaddingHigh.
       */
      long getEdgePaddingHigh();

      /**
       * <pre>
       * Padding amount between the elements. May not be negative.
       * </pre>
       *
       * <code>int64 interior_padding = 3;</code>
       * @return The interiorPadding.
       */
      long getInteriorPadding();
    }
    /**
     * <pre>
     * Describes the padding configuration for a dimension.
     * </pre>
     *
     * Protobuf type {@code xla.PaddingConfig.PaddingConfigDimension}
     */
    public static final class PaddingConfigDimension extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xla.PaddingConfig.PaddingConfigDimension)
        PaddingConfigDimensionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PaddingConfigDimension.newBuilder() to construct.
      private PaddingConfigDimension(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PaddingConfigDimension() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PaddingConfigDimension();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_PaddingConfig_PaddingConfigDimension_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_PaddingConfig_PaddingConfigDimension_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.PaddingConfig.PaddingConfigDimension.class, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder.class);
      }

      public static final int EDGE_PADDING_LOW_FIELD_NUMBER = 1;
      private long edgePaddingLow_ = 0L;
      /**
       * <pre>
       * Padding amount on the low-end (next to the index 0). May be negative.
       * </pre>
       *
       * <code>int64 edge_padding_low = 1;</code>
       * @return The edgePaddingLow.
       */
      @java.lang.Override
      public long getEdgePaddingLow() {
        return edgePaddingLow_;
      }

      public static final int EDGE_PADDING_HIGH_FIELD_NUMBER = 2;
      private long edgePaddingHigh_ = 0L;
      /**
       * <pre>
       * Padding amount on the high-end (next to the highest index). May be
       * negative.
       * </pre>
       *
       * <code>int64 edge_padding_high = 2;</code>
       * @return The edgePaddingHigh.
       */
      @java.lang.Override
      public long getEdgePaddingHigh() {
        return edgePaddingHigh_;
      }

      public static final int INTERIOR_PADDING_FIELD_NUMBER = 3;
      private long interiorPadding_ = 0L;
      /**
       * <pre>
       * Padding amount between the elements. May not be negative.
       * </pre>
       *
       * <code>int64 interior_padding = 3;</code>
       * @return The interiorPadding.
       */
      @java.lang.Override
      public long getInteriorPadding() {
        return interiorPadding_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (edgePaddingLow_ != 0L) {
          output.writeInt64(1, edgePaddingLow_);
        }
        if (edgePaddingHigh_ != 0L) {
          output.writeInt64(2, edgePaddingHigh_);
        }
        if (interiorPadding_ != 0L) {
          output.writeInt64(3, interiorPadding_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (edgePaddingLow_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, edgePaddingLow_);
        }
        if (edgePaddingHigh_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, edgePaddingHigh_);
        }
        if (interiorPadding_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, interiorPadding_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof xla.XlaData.PaddingConfig.PaddingConfigDimension)) {
          return super.equals(obj);
        }
        xla.XlaData.PaddingConfig.PaddingConfigDimension other = (xla.XlaData.PaddingConfig.PaddingConfigDimension) obj;

        if (getEdgePaddingLow()
            != other.getEdgePaddingLow()) return false;
        if (getEdgePaddingHigh()
            != other.getEdgePaddingHigh()) return false;
        if (getInteriorPadding()
            != other.getInteriorPadding()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + EDGE_PADDING_LOW_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEdgePaddingLow());
        hash = (37 * hash) + EDGE_PADDING_HIGH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getEdgePaddingHigh());
        hash = (37 * hash) + INTERIOR_PADDING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getInteriorPadding());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xla.XlaData.PaddingConfig.PaddingConfigDimension parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(xla.XlaData.PaddingConfig.PaddingConfigDimension prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Describes the padding configuration for a dimension.
       * </pre>
       *
       * Protobuf type {@code xla.PaddingConfig.PaddingConfigDimension}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:xla.PaddingConfig.PaddingConfigDimension)
          xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xla.XlaData.internal_static_xla_PaddingConfig_PaddingConfigDimension_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xla.XlaData.internal_static_xla_PaddingConfig_PaddingConfigDimension_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xla.XlaData.PaddingConfig.PaddingConfigDimension.class, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder.class);
        }

        // Construct using xla.XlaData.PaddingConfig.PaddingConfigDimension.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          edgePaddingLow_ = 0L;
          edgePaddingHigh_ = 0L;
          interiorPadding_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xla.XlaData.internal_static_xla_PaddingConfig_PaddingConfigDimension_descriptor;
        }

        @java.lang.Override
        public xla.XlaData.PaddingConfig.PaddingConfigDimension getDefaultInstanceForType() {
          return xla.XlaData.PaddingConfig.PaddingConfigDimension.getDefaultInstance();
        }

        @java.lang.Override
        public xla.XlaData.PaddingConfig.PaddingConfigDimension build() {
          xla.XlaData.PaddingConfig.PaddingConfigDimension result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public xla.XlaData.PaddingConfig.PaddingConfigDimension buildPartial() {
          xla.XlaData.PaddingConfig.PaddingConfigDimension result = new xla.XlaData.PaddingConfig.PaddingConfigDimension(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(xla.XlaData.PaddingConfig.PaddingConfigDimension result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.edgePaddingLow_ = edgePaddingLow_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.edgePaddingHigh_ = edgePaddingHigh_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.interiorPadding_ = interiorPadding_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xla.XlaData.PaddingConfig.PaddingConfigDimension) {
            return mergeFrom((xla.XlaData.PaddingConfig.PaddingConfigDimension)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xla.XlaData.PaddingConfig.PaddingConfigDimension other) {
          if (other == xla.XlaData.PaddingConfig.PaddingConfigDimension.getDefaultInstance()) return this;
          if (other.getEdgePaddingLow() != 0L) {
            setEdgePaddingLow(other.getEdgePaddingLow());
          }
          if (other.getEdgePaddingHigh() != 0L) {
            setEdgePaddingHigh(other.getEdgePaddingHigh());
          }
          if (other.getInteriorPadding() != 0L) {
            setInteriorPadding(other.getInteriorPadding());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  edgePaddingLow_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  edgePaddingHigh_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  interiorPadding_ = input.readInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long edgePaddingLow_ ;
        /**
         * <pre>
         * Padding amount on the low-end (next to the index 0). May be negative.
         * </pre>
         *
         * <code>int64 edge_padding_low = 1;</code>
         * @return The edgePaddingLow.
         */
        @java.lang.Override
        public long getEdgePaddingLow() {
          return edgePaddingLow_;
        }
        /**
         * <pre>
         * Padding amount on the low-end (next to the index 0). May be negative.
         * </pre>
         *
         * <code>int64 edge_padding_low = 1;</code>
         * @param value The edgePaddingLow to set.
         * @return This builder for chaining.
         */
        public Builder setEdgePaddingLow(long value) {
          
          edgePaddingLow_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Padding amount on the low-end (next to the index 0). May be negative.
         * </pre>
         *
         * <code>int64 edge_padding_low = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearEdgePaddingLow() {
          bitField0_ = (bitField0_ & ~0x00000001);
          edgePaddingLow_ = 0L;
          onChanged();
          return this;
        }

        private long edgePaddingHigh_ ;
        /**
         * <pre>
         * Padding amount on the high-end (next to the highest index). May be
         * negative.
         * </pre>
         *
         * <code>int64 edge_padding_high = 2;</code>
         * @return The edgePaddingHigh.
         */
        @java.lang.Override
        public long getEdgePaddingHigh() {
          return edgePaddingHigh_;
        }
        /**
         * <pre>
         * Padding amount on the high-end (next to the highest index). May be
         * negative.
         * </pre>
         *
         * <code>int64 edge_padding_high = 2;</code>
         * @param value The edgePaddingHigh to set.
         * @return This builder for chaining.
         */
        public Builder setEdgePaddingHigh(long value) {
          
          edgePaddingHigh_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Padding amount on the high-end (next to the highest index). May be
         * negative.
         * </pre>
         *
         * <code>int64 edge_padding_high = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearEdgePaddingHigh() {
          bitField0_ = (bitField0_ & ~0x00000002);
          edgePaddingHigh_ = 0L;
          onChanged();
          return this;
        }

        private long interiorPadding_ ;
        /**
         * <pre>
         * Padding amount between the elements. May not be negative.
         * </pre>
         *
         * <code>int64 interior_padding = 3;</code>
         * @return The interiorPadding.
         */
        @java.lang.Override
        public long getInteriorPadding() {
          return interiorPadding_;
        }
        /**
         * <pre>
         * Padding amount between the elements. May not be negative.
         * </pre>
         *
         * <code>int64 interior_padding = 3;</code>
         * @param value The interiorPadding to set.
         * @return This builder for chaining.
         */
        public Builder setInteriorPadding(long value) {
          
          interiorPadding_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Padding amount between the elements. May not be negative.
         * </pre>
         *
         * <code>int64 interior_padding = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearInteriorPadding() {
          bitField0_ = (bitField0_ & ~0x00000004);
          interiorPadding_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xla.PaddingConfig.PaddingConfigDimension)
      }

      // @@protoc_insertion_point(class_scope:xla.PaddingConfig.PaddingConfigDimension)
      private static final xla.XlaData.PaddingConfig.PaddingConfigDimension DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new xla.XlaData.PaddingConfig.PaddingConfigDimension();
      }

      public static xla.XlaData.PaddingConfig.PaddingConfigDimension getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<PaddingConfigDimension>
          PARSER = new com.google.protobuf.AbstractParser<PaddingConfigDimension>() {
        @java.lang.Override
        public PaddingConfigDimension parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PaddingConfigDimension> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PaddingConfigDimension> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public xla.XlaData.PaddingConfig.PaddingConfigDimension getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int DIMENSIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.PaddingConfig.PaddingConfigDimension> dimensions_;
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.PaddingConfig.PaddingConfigDimension> getDimensionsList() {
      return dimensions_;
    }
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder> 
        getDimensionsOrBuilderList() {
      return dimensions_;
    }
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public int getDimensionsCount() {
      return dimensions_.size();
    }
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.PaddingConfig.PaddingConfigDimension getDimensions(int index) {
      return dimensions_.get(index);
    }
    /**
     * <pre>
     * The padding configuration for all dimensions.
     * </pre>
     *
     * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder getDimensionsOrBuilder(
        int index) {
      return dimensions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dimensions_.size(); i++) {
        output.writeMessage(1, dimensions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dimensions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dimensions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.PaddingConfig)) {
        return super.equals(obj);
      }
      xla.XlaData.PaddingConfig other = (xla.XlaData.PaddingConfig) obj;

      if (!getDimensionsList()
          .equals(other.getDimensionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimensionsCount() > 0) {
        hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.PaddingConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.PaddingConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.PaddingConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.PaddingConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.PaddingConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.PaddingConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.PaddingConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the padding configuration for Pad operation. The padding amount on
     * both edges as well as between the elements are specified for each dimension.
     * </pre>
     *
     * Protobuf type {@code xla.PaddingConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.PaddingConfig)
        xla.XlaData.PaddingConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_PaddingConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_PaddingConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.PaddingConfig.class, xla.XlaData.PaddingConfig.Builder.class);
      }

      // Construct using xla.XlaData.PaddingConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (dimensionsBuilder_ == null) {
          dimensions_ = java.util.Collections.emptyList();
        } else {
          dimensions_ = null;
          dimensionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_PaddingConfig_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.PaddingConfig getDefaultInstanceForType() {
        return xla.XlaData.PaddingConfig.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.PaddingConfig build() {
        xla.XlaData.PaddingConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.PaddingConfig buildPartial() {
        xla.XlaData.PaddingConfig result = new xla.XlaData.PaddingConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.PaddingConfig result) {
        if (dimensionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            dimensions_ = java.util.Collections.unmodifiableList(dimensions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dimensions_ = dimensions_;
        } else {
          result.dimensions_ = dimensionsBuilder_.build();
        }
      }

      private void buildPartial0(xla.XlaData.PaddingConfig result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.PaddingConfig) {
          return mergeFrom((xla.XlaData.PaddingConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.PaddingConfig other) {
        if (other == xla.XlaData.PaddingConfig.getDefaultInstance()) return this;
        if (dimensionsBuilder_ == null) {
          if (!other.dimensions_.isEmpty()) {
            if (dimensions_.isEmpty()) {
              dimensions_ = other.dimensions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDimensionsIsMutable();
              dimensions_.addAll(other.dimensions_);
            }
            onChanged();
          }
        } else {
          if (!other.dimensions_.isEmpty()) {
            if (dimensionsBuilder_.isEmpty()) {
              dimensionsBuilder_.dispose();
              dimensionsBuilder_ = null;
              dimensions_ = other.dimensions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dimensionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDimensionsFieldBuilder() : null;
            } else {
              dimensionsBuilder_.addAllMessages(other.dimensions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                xla.XlaData.PaddingConfig.PaddingConfigDimension m =
                    input.readMessage(
                        xla.XlaData.PaddingConfig.PaddingConfigDimension.parser(),
                        extensionRegistry);
                if (dimensionsBuilder_ == null) {
                  ensureDimensionsIsMutable();
                  dimensions_.add(m);
                } else {
                  dimensionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<xla.XlaData.PaddingConfig.PaddingConfigDimension> dimensions_ =
        java.util.Collections.emptyList();
      private void ensureDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dimensions_ = new java.util.ArrayList<xla.XlaData.PaddingConfig.PaddingConfigDimension>(dimensions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.PaddingConfig.PaddingConfigDimension, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder, xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder> dimensionsBuilder_;

      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public java.util.List<xla.XlaData.PaddingConfig.PaddingConfigDimension> getDimensionsList() {
        if (dimensionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dimensions_);
        } else {
          return dimensionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public int getDimensionsCount() {
        if (dimensionsBuilder_ == null) {
          return dimensions_.size();
        } else {
          return dimensionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public xla.XlaData.PaddingConfig.PaddingConfigDimension getDimensions(int index) {
        if (dimensionsBuilder_ == null) {
          return dimensions_.get(index);
        } else {
          return dimensionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder setDimensions(
          int index, xla.XlaData.PaddingConfig.PaddingConfigDimension value) {
        if (dimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionsIsMutable();
          dimensions_.set(index, value);
          onChanged();
        } else {
          dimensionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder setDimensions(
          int index, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder builderForValue) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.set(index, builderForValue.build());
          onChanged();
        } else {
          dimensionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder addDimensions(xla.XlaData.PaddingConfig.PaddingConfigDimension value) {
        if (dimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionsIsMutable();
          dimensions_.add(value);
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder addDimensions(
          int index, xla.XlaData.PaddingConfig.PaddingConfigDimension value) {
        if (dimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionsIsMutable();
          dimensions_.add(index, value);
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder addDimensions(
          xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder builderForValue) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.add(builderForValue.build());
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder addDimensions(
          int index, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder builderForValue) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.add(index, builderForValue.build());
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder addAllDimensions(
          java.lang.Iterable<? extends xla.XlaData.PaddingConfig.PaddingConfigDimension> values) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dimensions_);
          onChanged();
        } else {
          dimensionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder clearDimensions() {
        if (dimensionsBuilder_ == null) {
          dimensions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dimensionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public Builder removeDimensions(int index) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.remove(index);
          onChanged();
        } else {
          dimensionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder getDimensionsBuilder(
          int index) {
        return getDimensionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder getDimensionsOrBuilder(
          int index) {
        if (dimensionsBuilder_ == null) {
          return dimensions_.get(index);  } else {
          return dimensionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public java.util.List<? extends xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder> 
           getDimensionsOrBuilderList() {
        if (dimensionsBuilder_ != null) {
          return dimensionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dimensions_);
        }
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder addDimensionsBuilder() {
        return getDimensionsFieldBuilder().addBuilder(
            xla.XlaData.PaddingConfig.PaddingConfigDimension.getDefaultInstance());
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder addDimensionsBuilder(
          int index) {
        return getDimensionsFieldBuilder().addBuilder(
            index, xla.XlaData.PaddingConfig.PaddingConfigDimension.getDefaultInstance());
      }
      /**
       * <pre>
       * The padding configuration for all dimensions.
       * </pre>
       *
       * <code>repeated .xla.PaddingConfig.PaddingConfigDimension dimensions = 1;</code>
       */
      public java.util.List<xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder> 
           getDimensionsBuilderList() {
        return getDimensionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.PaddingConfig.PaddingConfigDimension, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder, xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder> 
          getDimensionsFieldBuilder() {
        if (dimensionsBuilder_ == null) {
          dimensionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.PaddingConfig.PaddingConfigDimension, xla.XlaData.PaddingConfig.PaddingConfigDimension.Builder, xla.XlaData.PaddingConfig.PaddingConfigDimensionOrBuilder>(
                  dimensions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          dimensions_ = null;
        }
        return dimensionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.PaddingConfig)
    }

    // @@protoc_insertion_point(class_scope:xla.PaddingConfig)
    private static final xla.XlaData.PaddingConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.PaddingConfig();
    }

    public static xla.XlaData.PaddingConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PaddingConfig>
        PARSER = new com.google.protobuf.AbstractParser<PaddingConfig>() {
      @java.lang.Override
      public PaddingConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PaddingConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PaddingConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.PaddingConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TileProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.TileProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of elements in each dimension of the tile. It's ordered from the
     * most major dimension of the tile to the most minor dimension of the tile.
     * The dimensions correspond to a suffix of the dimensions of the shape being
     * tiled.
     * </pre>
     *
     * <code>repeated int64 dimensions = 1;</code>
     * @return A list containing the dimensions.
     */
    java.util.List<java.lang.Long> getDimensionsList();
    /**
     * <pre>
     * Number of elements in each dimension of the tile. It's ordered from the
     * most major dimension of the tile to the most minor dimension of the tile.
     * The dimensions correspond to a suffix of the dimensions of the shape being
     * tiled.
     * </pre>
     *
     * <code>repeated int64 dimensions = 1;</code>
     * @return The count of dimensions.
     */
    int getDimensionsCount();
    /**
     * <pre>
     * Number of elements in each dimension of the tile. It's ordered from the
     * most major dimension of the tile to the most minor dimension of the tile.
     * The dimensions correspond to a suffix of the dimensions of the shape being
     * tiled.
     * </pre>
     *
     * <code>repeated int64 dimensions = 1;</code>
     * @param index The index of the element to return.
     * @return The dimensions at the given index.
     */
    long getDimensions(int index);
  }
  /**
   * <pre>
   * Describes a tile used in tiling-based layout. Refer to
   * g3doc/third_party/tensorflow/compiler/xla/g3doc/tiled_layout.md for
   * details about tiling-based layout.
   * </pre>
   *
   * Protobuf type {@code xla.TileProto}
   */
  public static final class TileProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.TileProto)
      TileProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TileProto.newBuilder() to construct.
    private TileProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TileProto() {
      dimensions_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TileProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_TileProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_TileProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.TileProto.class, xla.XlaData.TileProto.Builder.class);
    }

    public static final int DIMENSIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList dimensions_;
    /**
     * <pre>
     * Number of elements in each dimension of the tile. It's ordered from the
     * most major dimension of the tile to the most minor dimension of the tile.
     * The dimensions correspond to a suffix of the dimensions of the shape being
     * tiled.
     * </pre>
     *
     * <code>repeated int64 dimensions = 1;</code>
     * @return A list containing the dimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getDimensionsList() {
      return dimensions_;
    }
    /**
     * <pre>
     * Number of elements in each dimension of the tile. It's ordered from the
     * most major dimension of the tile to the most minor dimension of the tile.
     * The dimensions correspond to a suffix of the dimensions of the shape being
     * tiled.
     * </pre>
     *
     * <code>repeated int64 dimensions = 1;</code>
     * @return The count of dimensions.
     */
    public int getDimensionsCount() {
      return dimensions_.size();
    }
    /**
     * <pre>
     * Number of elements in each dimension of the tile. It's ordered from the
     * most major dimension of the tile to the most minor dimension of the tile.
     * The dimensions correspond to a suffix of the dimensions of the shape being
     * tiled.
     * </pre>
     *
     * <code>repeated int64 dimensions = 1;</code>
     * @param index The index of the element to return.
     * @return The dimensions at the given index.
     */
    public long getDimensions(int index) {
      return dimensions_.getLong(index);
    }
    private int dimensionsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getDimensionsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(dimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < dimensions_.size(); i++) {
        output.writeInt64NoTag(dimensions_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < dimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dimensions_.getLong(i));
        }
        size += dataSize;
        if (!getDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimensionsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.TileProto)) {
        return super.equals(obj);
      }
      xla.XlaData.TileProto other = (xla.XlaData.TileProto) obj;

      if (!getDimensionsList()
          .equals(other.getDimensionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimensionsCount() > 0) {
        hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.TileProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.TileProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.TileProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.TileProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.TileProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.TileProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.TileProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.TileProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.TileProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.TileProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.TileProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.TileProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.TileProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a tile used in tiling-based layout. Refer to
     * g3doc/third_party/tensorflow/compiler/xla/g3doc/tiled_layout.md for
     * details about tiling-based layout.
     * </pre>
     *
     * Protobuf type {@code xla.TileProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.TileProto)
        xla.XlaData.TileProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_TileProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_TileProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.TileProto.class, xla.XlaData.TileProto.Builder.class);
      }

      // Construct using xla.XlaData.TileProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        dimensions_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_TileProto_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.TileProto getDefaultInstanceForType() {
        return xla.XlaData.TileProto.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.TileProto build() {
        xla.XlaData.TileProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.TileProto buildPartial() {
        xla.XlaData.TileProto result = new xla.XlaData.TileProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.TileProto result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          dimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.dimensions_ = dimensions_;
      }

      private void buildPartial0(xla.XlaData.TileProto result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.TileProto) {
          return mergeFrom((xla.XlaData.TileProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.TileProto other) {
        if (other == xla.XlaData.TileProto.getDefaultInstance()) return this;
        if (!other.dimensions_.isEmpty()) {
          if (dimensions_.isEmpty()) {
            dimensions_ = other.dimensions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDimensionsIsMutable();
            dimensions_.addAll(other.dimensions_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureDimensionsIsMutable();
                dimensions_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  dimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList dimensions_ = emptyLongList();
      private void ensureDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dimensions_ = mutableCopy(dimensions_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @return A list containing the dimensions.
       */
      public java.util.List<java.lang.Long>
          getDimensionsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(dimensions_) : dimensions_;
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @return The count of dimensions.
       */
      public int getDimensionsCount() {
        return dimensions_.size();
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @param index The index of the element to return.
       * @return The dimensions at the given index.
       */
      public long getDimensions(int index) {
        return dimensions_.getLong(index);
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @param index The index to set the value at.
       * @param value The dimensions to set.
       * @return This builder for chaining.
       */
      public Builder setDimensions(
          int index, long value) {
        
        ensureDimensionsIsMutable();
        dimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @param value The dimensions to add.
       * @return This builder for chaining.
       */
      public Builder addDimensions(long value) {
        
        ensureDimensionsIsMutable();
        dimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @param values The dimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of elements in each dimension of the tile. It's ordered from the
       * most major dimension of the tile to the most minor dimension of the tile.
       * The dimensions correspond to a suffix of the dimensions of the shape being
       * tiled.
       * </pre>
       *
       * <code>repeated int64 dimensions = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDimensions() {
        dimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.TileProto)
    }

    // @@protoc_insertion_point(class_scope:xla.TileProto)
    private static final xla.XlaData.TileProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.TileProto();
    }

    public static xla.XlaData.TileProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TileProto>
        PARSER = new com.google.protobuf.AbstractParser<TileProto>() {
      @java.lang.Override
      public TileProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TileProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TileProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.TileProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LayoutProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.LayoutProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The method used to store the data in memory. The format determines which of
     * the other fields are used by the layout.
     * </pre>
     *
     * <code>.xla.Format format = 4;</code>
     * @return The enum numeric value on the wire for format.
     */
    int getFormatValue();
    /**
     * <pre>
     * The method used to store the data in memory. The format determines which of
     * the other fields are used by the layout.
     * </pre>
     *
     * <code>.xla.Format format = 4;</code>
     * @return The format.
     */
    xla.XlaData.Format getFormat();

    /**
     * <pre>
     * Sequence of dimension numbers, from minor (fastest varying index) to major
     * (slowest varying index). This field is required.
     * </pre>
     *
     * <code>repeated int64 minor_to_major = 1;</code>
     * @return A list containing the minorToMajor.
     */
    java.util.List<java.lang.Long> getMinorToMajorList();
    /**
     * <pre>
     * Sequence of dimension numbers, from minor (fastest varying index) to major
     * (slowest varying index). This field is required.
     * </pre>
     *
     * <code>repeated int64 minor_to_major = 1;</code>
     * @return The count of minorToMajor.
     */
    int getMinorToMajorCount();
    /**
     * <pre>
     * Sequence of dimension numbers, from minor (fastest varying index) to major
     * (slowest varying index). This field is required.
     * </pre>
     *
     * <code>repeated int64 minor_to_major = 1;</code>
     * @param index The index of the element to return.
     * @return The minorToMajor at the given index.
     */
    long getMinorToMajor(int index);

    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    java.util.List<xla.XlaData.TileProto> 
        getTilesList();
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    xla.XlaData.TileProto getTiles(int index);
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    int getTilesCount();
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    java.util.List<? extends xla.XlaData.TileProtoOrBuilder> 
        getTilesOrBuilderList();
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    xla.XlaData.TileProtoOrBuilder getTilesOrBuilder(
        int index);

    /**
     * <pre>
     * Bit size of each element. If the size is bigger than what the element
     * type requires, the value is stored in the least significant
     * bits and the additional most significant bits are filled with 0's.
     * TODO(b/119839262): implement in each backend or add Unimplemented error.
     * </pre>
     *
     * <code>int64 element_size_in_bits = 7;</code>
     * @return The elementSizeInBits.
     */
    long getElementSizeInBits();

    /**
     * <pre>
     * Memory space where this array resides. The integer field is interpreted in
     * a backend-specific manner.
     * </pre>
     *
     * <code>int64 memory_space = 8;</code>
     * @return The memorySpace.
     */
    long getMemorySpace();
  }
  /**
   * <pre>
   * A layout describes how the array is placed in (1D) memory space.  This
   * includes the minor-to-major ordering of dimensions within a shape.
   * Clients must specify the layouts of input Literals to the
   * computation. Layouts specified in interior operations which take Shapes (for
   * example, Convert) are ignored.
   * See the XLA documentation for more information on shapes and layouts.
   * LINT.IfChange
   * </pre>
   *
   * Protobuf type {@code xla.LayoutProto}
   */
  public static final class LayoutProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.LayoutProto)
      LayoutProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LayoutProto.newBuilder() to construct.
    private LayoutProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LayoutProto() {
      format_ = 0;
      minorToMajor_ = emptyLongList();
      tiles_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LayoutProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_LayoutProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_LayoutProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.LayoutProto.class, xla.XlaData.LayoutProto.Builder.class);
    }

    public static final int FORMAT_FIELD_NUMBER = 4;
    private int format_ = 0;
    /**
     * <pre>
     * The method used to store the data in memory. The format determines which of
     * the other fields are used by the layout.
     * </pre>
     *
     * <code>.xla.Format format = 4;</code>
     * @return The enum numeric value on the wire for format.
     */
    @java.lang.Override public int getFormatValue() {
      return format_;
    }
    /**
     * <pre>
     * The method used to store the data in memory. The format determines which of
     * the other fields are used by the layout.
     * </pre>
     *
     * <code>.xla.Format format = 4;</code>
     * @return The format.
     */
    @java.lang.Override public xla.XlaData.Format getFormat() {
      xla.XlaData.Format result = xla.XlaData.Format.forNumber(format_);
      return result == null ? xla.XlaData.Format.UNRECOGNIZED : result;
    }

    public static final int MINOR_TO_MAJOR_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList minorToMajor_;
    /**
     * <pre>
     * Sequence of dimension numbers, from minor (fastest varying index) to major
     * (slowest varying index). This field is required.
     * </pre>
     *
     * <code>repeated int64 minor_to_major = 1;</code>
     * @return A list containing the minorToMajor.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getMinorToMajorList() {
      return minorToMajor_;
    }
    /**
     * <pre>
     * Sequence of dimension numbers, from minor (fastest varying index) to major
     * (slowest varying index). This field is required.
     * </pre>
     *
     * <code>repeated int64 minor_to_major = 1;</code>
     * @return The count of minorToMajor.
     */
    public int getMinorToMajorCount() {
      return minorToMajor_.size();
    }
    /**
     * <pre>
     * Sequence of dimension numbers, from minor (fastest varying index) to major
     * (slowest varying index). This field is required.
     * </pre>
     *
     * <code>repeated int64 minor_to_major = 1;</code>
     * @param index The index of the element to return.
     * @return The minorToMajor at the given index.
     */
    public long getMinorToMajor(int index) {
      return minorToMajor_.getLong(index);
    }
    private int minorToMajorMemoizedSerializedSize = -1;

    public static final int TILES_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.TileProto> tiles_;
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.TileProto> getTilesList() {
      return tiles_;
    }
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.TileProtoOrBuilder> 
        getTilesOrBuilderList() {
      return tiles_;
    }
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    @java.lang.Override
    public int getTilesCount() {
      return tiles_.size();
    }
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    @java.lang.Override
    public xla.XlaData.TileProto getTiles(int index) {
      return tiles_.get(index);
    }
    /**
     * <pre>
     * A sequence of tiles, starting from the tile that's applied first to the
     * Shape.
     * TODO(b/119839262): implement tiling in each backend or add Unimplemented
     * error.
     * </pre>
     *
     * <code>repeated .xla.TileProto tiles = 6;</code>
     */
    @java.lang.Override
    public xla.XlaData.TileProtoOrBuilder getTilesOrBuilder(
        int index) {
      return tiles_.get(index);
    }

    public static final int ELEMENT_SIZE_IN_BITS_FIELD_NUMBER = 7;
    private long elementSizeInBits_ = 0L;
    /**
     * <pre>
     * Bit size of each element. If the size is bigger than what the element
     * type requires, the value is stored in the least significant
     * bits and the additional most significant bits are filled with 0's.
     * TODO(b/119839262): implement in each backend or add Unimplemented error.
     * </pre>
     *
     * <code>int64 element_size_in_bits = 7;</code>
     * @return The elementSizeInBits.
     */
    @java.lang.Override
    public long getElementSizeInBits() {
      return elementSizeInBits_;
    }

    public static final int MEMORY_SPACE_FIELD_NUMBER = 8;
    private long memorySpace_ = 0L;
    /**
     * <pre>
     * Memory space where this array resides. The integer field is interpreted in
     * a backend-specific manner.
     * </pre>
     *
     * <code>int64 memory_space = 8;</code>
     * @return The memorySpace.
     */
    @java.lang.Override
    public long getMemorySpace() {
      return memorySpace_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getMinorToMajorList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(minorToMajorMemoizedSerializedSize);
      }
      for (int i = 0; i < minorToMajor_.size(); i++) {
        output.writeInt64NoTag(minorToMajor_.getLong(i));
      }
      if (format_ != xla.XlaData.Format.INVALID_FORMAT.getNumber()) {
        output.writeEnum(4, format_);
      }
      for (int i = 0; i < tiles_.size(); i++) {
        output.writeMessage(6, tiles_.get(i));
      }
      if (elementSizeInBits_ != 0L) {
        output.writeInt64(7, elementSizeInBits_);
      }
      if (memorySpace_ != 0L) {
        output.writeInt64(8, memorySpace_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < minorToMajor_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(minorToMajor_.getLong(i));
        }
        size += dataSize;
        if (!getMinorToMajorList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        minorToMajorMemoizedSerializedSize = dataSize;
      }
      if (format_ != xla.XlaData.Format.INVALID_FORMAT.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, format_);
      }
      for (int i = 0; i < tiles_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, tiles_.get(i));
      }
      if (elementSizeInBits_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, elementSizeInBits_);
      }
      if (memorySpace_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, memorySpace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.LayoutProto)) {
        return super.equals(obj);
      }
      xla.XlaData.LayoutProto other = (xla.XlaData.LayoutProto) obj;

      if (format_ != other.format_) return false;
      if (!getMinorToMajorList()
          .equals(other.getMinorToMajorList())) return false;
      if (!getTilesList()
          .equals(other.getTilesList())) return false;
      if (getElementSizeInBits()
          != other.getElementSizeInBits()) return false;
      if (getMemorySpace()
          != other.getMemorySpace()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FORMAT_FIELD_NUMBER;
      hash = (53 * hash) + format_;
      if (getMinorToMajorCount() > 0) {
        hash = (37 * hash) + MINOR_TO_MAJOR_FIELD_NUMBER;
        hash = (53 * hash) + getMinorToMajorList().hashCode();
      }
      if (getTilesCount() > 0) {
        hash = (37 * hash) + TILES_FIELD_NUMBER;
        hash = (53 * hash) + getTilesList().hashCode();
      }
      hash = (37 * hash) + ELEMENT_SIZE_IN_BITS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getElementSizeInBits());
      hash = (37 * hash) + MEMORY_SPACE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMemorySpace());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.LayoutProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.LayoutProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.LayoutProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.LayoutProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.LayoutProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.LayoutProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.LayoutProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A layout describes how the array is placed in (1D) memory space.  This
     * includes the minor-to-major ordering of dimensions within a shape.
     * Clients must specify the layouts of input Literals to the
     * computation. Layouts specified in interior operations which take Shapes (for
     * example, Convert) are ignored.
     * See the XLA documentation for more information on shapes and layouts.
     * LINT.IfChange
     * </pre>
     *
     * Protobuf type {@code xla.LayoutProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.LayoutProto)
        xla.XlaData.LayoutProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_LayoutProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_LayoutProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.LayoutProto.class, xla.XlaData.LayoutProto.Builder.class);
      }

      // Construct using xla.XlaData.LayoutProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        format_ = 0;
        minorToMajor_ = emptyLongList();
        if (tilesBuilder_ == null) {
          tiles_ = java.util.Collections.emptyList();
        } else {
          tiles_ = null;
          tilesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        elementSizeInBits_ = 0L;
        memorySpace_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_LayoutProto_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.LayoutProto getDefaultInstanceForType() {
        return xla.XlaData.LayoutProto.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.LayoutProto build() {
        xla.XlaData.LayoutProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.LayoutProto buildPartial() {
        xla.XlaData.LayoutProto result = new xla.XlaData.LayoutProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.LayoutProto result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          minorToMajor_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.minorToMajor_ = minorToMajor_;
        if (tilesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tiles_ = java.util.Collections.unmodifiableList(tiles_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tiles_ = tiles_;
        } else {
          result.tiles_ = tilesBuilder_.build();
        }
      }

      private void buildPartial0(xla.XlaData.LayoutProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.format_ = format_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.elementSizeInBits_ = elementSizeInBits_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.memorySpace_ = memorySpace_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.LayoutProto) {
          return mergeFrom((xla.XlaData.LayoutProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.LayoutProto other) {
        if (other == xla.XlaData.LayoutProto.getDefaultInstance()) return this;
        if (other.format_ != 0) {
          setFormatValue(other.getFormatValue());
        }
        if (!other.minorToMajor_.isEmpty()) {
          if (minorToMajor_.isEmpty()) {
            minorToMajor_ = other.minorToMajor_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMinorToMajorIsMutable();
            minorToMajor_.addAll(other.minorToMajor_);
          }
          onChanged();
        }
        if (tilesBuilder_ == null) {
          if (!other.tiles_.isEmpty()) {
            if (tiles_.isEmpty()) {
              tiles_ = other.tiles_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTilesIsMutable();
              tiles_.addAll(other.tiles_);
            }
            onChanged();
          }
        } else {
          if (!other.tiles_.isEmpty()) {
            if (tilesBuilder_.isEmpty()) {
              tilesBuilder_.dispose();
              tilesBuilder_ = null;
              tiles_ = other.tiles_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tilesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTilesFieldBuilder() : null;
            } else {
              tilesBuilder_.addAllMessages(other.tiles_);
            }
          }
        }
        if (other.getElementSizeInBits() != 0L) {
          setElementSizeInBits(other.getElementSizeInBits());
        }
        if (other.getMemorySpace() != 0L) {
          setMemorySpace(other.getMemorySpace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureMinorToMajorIsMutable();
                minorToMajor_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureMinorToMajorIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  minorToMajor_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 32: {
                format_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 32
              case 50: {
                xla.XlaData.TileProto m =
                    input.readMessage(
                        xla.XlaData.TileProto.parser(),
                        extensionRegistry);
                if (tilesBuilder_ == null) {
                  ensureTilesIsMutable();
                  tiles_.add(m);
                } else {
                  tilesBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 56: {
                elementSizeInBits_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 56
              case 64: {
                memorySpace_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int format_ = 0;
      /**
       * <pre>
       * The method used to store the data in memory. The format determines which of
       * the other fields are used by the layout.
       * </pre>
       *
       * <code>.xla.Format format = 4;</code>
       * @return The enum numeric value on the wire for format.
       */
      @java.lang.Override public int getFormatValue() {
        return format_;
      }
      /**
       * <pre>
       * The method used to store the data in memory. The format determines which of
       * the other fields are used by the layout.
       * </pre>
       *
       * <code>.xla.Format format = 4;</code>
       * @param value The enum numeric value on the wire for format to set.
       * @return This builder for chaining.
       */
      public Builder setFormatValue(int value) {
        format_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The method used to store the data in memory. The format determines which of
       * the other fields are used by the layout.
       * </pre>
       *
       * <code>.xla.Format format = 4;</code>
       * @return The format.
       */
      @java.lang.Override
      public xla.XlaData.Format getFormat() {
        xla.XlaData.Format result = xla.XlaData.Format.forNumber(format_);
        return result == null ? xla.XlaData.Format.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The method used to store the data in memory. The format determines which of
       * the other fields are used by the layout.
       * </pre>
       *
       * <code>.xla.Format format = 4;</code>
       * @param value The format to set.
       * @return This builder for chaining.
       */
      public Builder setFormat(xla.XlaData.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        format_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The method used to store the data in memory. The format determines which of
       * the other fields are used by the layout.
       * </pre>
       *
       * <code>.xla.Format format = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        format_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList minorToMajor_ = emptyLongList();
      private void ensureMinorToMajorIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          minorToMajor_ = mutableCopy(minorToMajor_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @return A list containing the minorToMajor.
       */
      public java.util.List<java.lang.Long>
          getMinorToMajorList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(minorToMajor_) : minorToMajor_;
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @return The count of minorToMajor.
       */
      public int getMinorToMajorCount() {
        return minorToMajor_.size();
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @param index The index of the element to return.
       * @return The minorToMajor at the given index.
       */
      public long getMinorToMajor(int index) {
        return minorToMajor_.getLong(index);
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @param index The index to set the value at.
       * @param value The minorToMajor to set.
       * @return This builder for chaining.
       */
      public Builder setMinorToMajor(
          int index, long value) {
        
        ensureMinorToMajorIsMutable();
        minorToMajor_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @param value The minorToMajor to add.
       * @return This builder for chaining.
       */
      public Builder addMinorToMajor(long value) {
        
        ensureMinorToMajorIsMutable();
        minorToMajor_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @param values The minorToMajor to add.
       * @return This builder for chaining.
       */
      public Builder addAllMinorToMajor(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureMinorToMajorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, minorToMajor_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sequence of dimension numbers, from minor (fastest varying index) to major
       * (slowest varying index). This field is required.
       * </pre>
       *
       * <code>repeated int64 minor_to_major = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMinorToMajor() {
        minorToMajor_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<xla.XlaData.TileProto> tiles_ =
        java.util.Collections.emptyList();
      private void ensureTilesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tiles_ = new java.util.ArrayList<xla.XlaData.TileProto>(tiles_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.TileProto, xla.XlaData.TileProto.Builder, xla.XlaData.TileProtoOrBuilder> tilesBuilder_;

      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public java.util.List<xla.XlaData.TileProto> getTilesList() {
        if (tilesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tiles_);
        } else {
          return tilesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public int getTilesCount() {
        if (tilesBuilder_ == null) {
          return tiles_.size();
        } else {
          return tilesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public xla.XlaData.TileProto getTiles(int index) {
        if (tilesBuilder_ == null) {
          return tiles_.get(index);
        } else {
          return tilesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder setTiles(
          int index, xla.XlaData.TileProto value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.set(index, value);
          onChanged();
        } else {
          tilesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder setTiles(
          int index, xla.XlaData.TileProto.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.set(index, builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder addTiles(xla.XlaData.TileProto value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.add(value);
          onChanged();
        } else {
          tilesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder addTiles(
          int index, xla.XlaData.TileProto value) {
        if (tilesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTilesIsMutable();
          tiles_.add(index, value);
          onChanged();
        } else {
          tilesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder addTiles(
          xla.XlaData.TileProto.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.add(builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder addTiles(
          int index, xla.XlaData.TileProto.Builder builderForValue) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.add(index, builderForValue.build());
          onChanged();
        } else {
          tilesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder addAllTiles(
          java.lang.Iterable<? extends xla.XlaData.TileProto> values) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tiles_);
          onChanged();
        } else {
          tilesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder clearTiles() {
        if (tilesBuilder_ == null) {
          tiles_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tilesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public Builder removeTiles(int index) {
        if (tilesBuilder_ == null) {
          ensureTilesIsMutable();
          tiles_.remove(index);
          onChanged();
        } else {
          tilesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public xla.XlaData.TileProto.Builder getTilesBuilder(
          int index) {
        return getTilesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public xla.XlaData.TileProtoOrBuilder getTilesOrBuilder(
          int index) {
        if (tilesBuilder_ == null) {
          return tiles_.get(index);  } else {
          return tilesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public java.util.List<? extends xla.XlaData.TileProtoOrBuilder> 
           getTilesOrBuilderList() {
        if (tilesBuilder_ != null) {
          return tilesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tiles_);
        }
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public xla.XlaData.TileProto.Builder addTilesBuilder() {
        return getTilesFieldBuilder().addBuilder(
            xla.XlaData.TileProto.getDefaultInstance());
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public xla.XlaData.TileProto.Builder addTilesBuilder(
          int index) {
        return getTilesFieldBuilder().addBuilder(
            index, xla.XlaData.TileProto.getDefaultInstance());
      }
      /**
       * <pre>
       * A sequence of tiles, starting from the tile that's applied first to the
       * Shape.
       * TODO(b/119839262): implement tiling in each backend or add Unimplemented
       * error.
       * </pre>
       *
       * <code>repeated .xla.TileProto tiles = 6;</code>
       */
      public java.util.List<xla.XlaData.TileProto.Builder> 
           getTilesBuilderList() {
        return getTilesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.TileProto, xla.XlaData.TileProto.Builder, xla.XlaData.TileProtoOrBuilder> 
          getTilesFieldBuilder() {
        if (tilesBuilder_ == null) {
          tilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.TileProto, xla.XlaData.TileProto.Builder, xla.XlaData.TileProtoOrBuilder>(
                  tiles_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tiles_ = null;
        }
        return tilesBuilder_;
      }

      private long elementSizeInBits_ ;
      /**
       * <pre>
       * Bit size of each element. If the size is bigger than what the element
       * type requires, the value is stored in the least significant
       * bits and the additional most significant bits are filled with 0's.
       * TODO(b/119839262): implement in each backend or add Unimplemented error.
       * </pre>
       *
       * <code>int64 element_size_in_bits = 7;</code>
       * @return The elementSizeInBits.
       */
      @java.lang.Override
      public long getElementSizeInBits() {
        return elementSizeInBits_;
      }
      /**
       * <pre>
       * Bit size of each element. If the size is bigger than what the element
       * type requires, the value is stored in the least significant
       * bits and the additional most significant bits are filled with 0's.
       * TODO(b/119839262): implement in each backend or add Unimplemented error.
       * </pre>
       *
       * <code>int64 element_size_in_bits = 7;</code>
       * @param value The elementSizeInBits to set.
       * @return This builder for chaining.
       */
      public Builder setElementSizeInBits(long value) {
        
        elementSizeInBits_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bit size of each element. If the size is bigger than what the element
       * type requires, the value is stored in the least significant
       * bits and the additional most significant bits are filled with 0's.
       * TODO(b/119839262): implement in each backend or add Unimplemented error.
       * </pre>
       *
       * <code>int64 element_size_in_bits = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearElementSizeInBits() {
        bitField0_ = (bitField0_ & ~0x00000008);
        elementSizeInBits_ = 0L;
        onChanged();
        return this;
      }

      private long memorySpace_ ;
      /**
       * <pre>
       * Memory space where this array resides. The integer field is interpreted in
       * a backend-specific manner.
       * </pre>
       *
       * <code>int64 memory_space = 8;</code>
       * @return The memorySpace.
       */
      @java.lang.Override
      public long getMemorySpace() {
        return memorySpace_;
      }
      /**
       * <pre>
       * Memory space where this array resides. The integer field is interpreted in
       * a backend-specific manner.
       * </pre>
       *
       * <code>int64 memory_space = 8;</code>
       * @param value The memorySpace to set.
       * @return This builder for chaining.
       */
      public Builder setMemorySpace(long value) {
        
        memorySpace_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Memory space where this array resides. The integer field is interpreted in
       * a backend-specific manner.
       * </pre>
       *
       * <code>int64 memory_space = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMemorySpace() {
        bitField0_ = (bitField0_ & ~0x00000010);
        memorySpace_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.LayoutProto)
    }

    // @@protoc_insertion_point(class_scope:xla.LayoutProto)
    private static final xla.XlaData.LayoutProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.LayoutProto();
    }

    public static xla.XlaData.LayoutProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LayoutProto>
        PARSER = new com.google.protobuf.AbstractParser<LayoutProto>() {
      @java.lang.Override
      public LayoutProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LayoutProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LayoutProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.LayoutProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShapeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ShapeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The element type for this shape.
     * </pre>
     *
     * <code>.xla.PrimitiveType element_type = 2;</code>
     * @return The enum numeric value on the wire for elementType.
     */
    int getElementTypeValue();
    /**
     * <pre>
     * The element type for this shape.
     * </pre>
     *
     * <code>.xla.PrimitiveType element_type = 2;</code>
     * @return The elementType.
     */
    xla.XlaData.PrimitiveType getElementType();

    /**
     * <pre>
     * The size (number of elements) for each dimension, or an upper bound on the
     * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
     * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
     * size of dimension 0, the second element is the size of dimension 1, and so
     * forth.  Empty list indicates a scalar.
     * If the respective element in 'is_dimension_dynamic' is true then the value
     * in this field represents an upper bound on the size of the dimension.
     * </pre>
     *
     * <code>repeated int64 dimensions = 3;</code>
     * @return A list containing the dimensions.
     */
    java.util.List<java.lang.Long> getDimensionsList();
    /**
     * <pre>
     * The size (number of elements) for each dimension, or an upper bound on the
     * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
     * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
     * size of dimension 0, the second element is the size of dimension 1, and so
     * forth.  Empty list indicates a scalar.
     * If the respective element in 'is_dimension_dynamic' is true then the value
     * in this field represents an upper bound on the size of the dimension.
     * </pre>
     *
     * <code>repeated int64 dimensions = 3;</code>
     * @return The count of dimensions.
     */
    int getDimensionsCount();
    /**
     * <pre>
     * The size (number of elements) for each dimension, or an upper bound on the
     * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
     * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
     * size of dimension 0, the second element is the size of dimension 1, and so
     * forth.  Empty list indicates a scalar.
     * If the respective element in 'is_dimension_dynamic' is true then the value
     * in this field represents an upper bound on the size of the dimension.
     * </pre>
     *
     * <code>repeated int64 dimensions = 3;</code>
     * @param index The index of the element to return.
     * @return The dimensions at the given index.
     */
    long getDimensions(int index);

    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    java.util.List<xla.XlaData.ShapeProto> 
        getTupleShapesList();
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    xla.XlaData.ShapeProto getTupleShapes(int index);
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    int getTupleShapesCount();
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    java.util.List<? extends xla.XlaData.ShapeProtoOrBuilder> 
        getTupleShapesOrBuilderList();
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    xla.XlaData.ShapeProtoOrBuilder getTupleShapesOrBuilder(
        int index);

    /**
     * <pre>
     * The layout used to back this shape.
     * </pre>
     *
     * <code>.xla.LayoutProto layout = 5;</code>
     * @return Whether the layout field is set.
     */
    boolean hasLayout();
    /**
     * <pre>
     * The layout used to back this shape.
     * </pre>
     *
     * <code>.xla.LayoutProto layout = 5;</code>
     * @return The layout.
     */
    xla.XlaData.LayoutProto getLayout();
    /**
     * <pre>
     * The layout used to back this shape.
     * </pre>
     *
     * <code>.xla.LayoutProto layout = 5;</code>
     */
    xla.XlaData.LayoutProtoOrBuilder getLayoutOrBuilder();

    /**
     * <pre>
     * For arrays, this indicates whether or not each dimension is
     * dynamically-sized. The number of elements in this repeated field should be
     * zero (indicating that no dimensions are dynamic) or equal to the number of
     * elements in the 'dimensions' field.
     * </pre>
     *
     * <code>repeated bool is_dynamic_dimension = 6;</code>
     * @return A list containing the isDynamicDimension.
     */
    java.util.List<java.lang.Boolean> getIsDynamicDimensionList();
    /**
     * <pre>
     * For arrays, this indicates whether or not each dimension is
     * dynamically-sized. The number of elements in this repeated field should be
     * zero (indicating that no dimensions are dynamic) or equal to the number of
     * elements in the 'dimensions' field.
     * </pre>
     *
     * <code>repeated bool is_dynamic_dimension = 6;</code>
     * @return The count of isDynamicDimension.
     */
    int getIsDynamicDimensionCount();
    /**
     * <pre>
     * For arrays, this indicates whether or not each dimension is
     * dynamically-sized. The number of elements in this repeated field should be
     * zero (indicating that no dimensions are dynamic) or equal to the number of
     * elements in the 'dimensions' field.
     * </pre>
     *
     * <code>repeated bool is_dynamic_dimension = 6;</code>
     * @param index The index of the element to return.
     * @return The isDynamicDimension at the given index.
     */
    boolean getIsDynamicDimension(int index);
  }
  /**
   * <pre>
   * A shape describes the number of dimensions in the array, the size of each
   * dimension, and the primitive component type.
   * Tuples are a special case in that they have rank zero and have tuple_shapes
   * defined.
   * See the XLA documentation for more information on shapes and layouts.
   * LINT.IfChange
   * </pre>
   *
   * Protobuf type {@code xla.ShapeProto}
   */
  public static final class ShapeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ShapeProto)
      ShapeProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShapeProto.newBuilder() to construct.
    private ShapeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShapeProto() {
      elementType_ = 0;
      dimensions_ = emptyLongList();
      tupleShapes_ = java.util.Collections.emptyList();
      isDynamicDimension_ = emptyBooleanList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ShapeProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ShapeProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ShapeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ShapeProto.class, xla.XlaData.ShapeProto.Builder.class);
    }

    public static final int ELEMENT_TYPE_FIELD_NUMBER = 2;
    private int elementType_ = 0;
    /**
     * <pre>
     * The element type for this shape.
     * </pre>
     *
     * <code>.xla.PrimitiveType element_type = 2;</code>
     * @return The enum numeric value on the wire for elementType.
     */
    @java.lang.Override public int getElementTypeValue() {
      return elementType_;
    }
    /**
     * <pre>
     * The element type for this shape.
     * </pre>
     *
     * <code>.xla.PrimitiveType element_type = 2;</code>
     * @return The elementType.
     */
    @java.lang.Override public xla.XlaData.PrimitiveType getElementType() {
      xla.XlaData.PrimitiveType result = xla.XlaData.PrimitiveType.forNumber(elementType_);
      return result == null ? xla.XlaData.PrimitiveType.UNRECOGNIZED : result;
    }

    public static final int DIMENSIONS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList dimensions_;
    /**
     * <pre>
     * The size (number of elements) for each dimension, or an upper bound on the
     * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
     * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
     * size of dimension 0, the second element is the size of dimension 1, and so
     * forth.  Empty list indicates a scalar.
     * If the respective element in 'is_dimension_dynamic' is true then the value
     * in this field represents an upper bound on the size of the dimension.
     * </pre>
     *
     * <code>repeated int64 dimensions = 3;</code>
     * @return A list containing the dimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getDimensionsList() {
      return dimensions_;
    }
    /**
     * <pre>
     * The size (number of elements) for each dimension, or an upper bound on the
     * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
     * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
     * size of dimension 0, the second element is the size of dimension 1, and so
     * forth.  Empty list indicates a scalar.
     * If the respective element in 'is_dimension_dynamic' is true then the value
     * in this field represents an upper bound on the size of the dimension.
     * </pre>
     *
     * <code>repeated int64 dimensions = 3;</code>
     * @return The count of dimensions.
     */
    public int getDimensionsCount() {
      return dimensions_.size();
    }
    /**
     * <pre>
     * The size (number of elements) for each dimension, or an upper bound on the
     * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
     * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
     * size of dimension 0, the second element is the size of dimension 1, and so
     * forth.  Empty list indicates a scalar.
     * If the respective element in 'is_dimension_dynamic' is true then the value
     * in this field represents an upper bound on the size of the dimension.
     * </pre>
     *
     * <code>repeated int64 dimensions = 3;</code>
     * @param index The index of the element to return.
     * @return The dimensions at the given index.
     */
    public long getDimensions(int index) {
      return dimensions_.getLong(index);
    }
    private int dimensionsMemoizedSerializedSize = -1;

    public static final int TUPLE_SHAPES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.ShapeProto> tupleShapes_;
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.ShapeProto> getTupleShapesList() {
      return tupleShapes_;
    }
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.ShapeProtoOrBuilder> 
        getTupleShapesOrBuilderList() {
      return tupleShapes_;
    }
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    @java.lang.Override
    public int getTupleShapesCount() {
      return tupleShapes_.size();
    }
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProto getTupleShapes(int index) {
      return tupleShapes_.get(index);
    }
    /**
     * <pre>
     * For tuples only, the shapes of constituent shapes in the tuple sequence.
     * </pre>
     *
     * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProtoOrBuilder getTupleShapesOrBuilder(
        int index) {
      return tupleShapes_.get(index);
    }

    public static final int LAYOUT_FIELD_NUMBER = 5;
    private xla.XlaData.LayoutProto layout_;
    /**
     * <pre>
     * The layout used to back this shape.
     * </pre>
     *
     * <code>.xla.LayoutProto layout = 5;</code>
     * @return Whether the layout field is set.
     */
    @java.lang.Override
    public boolean hasLayout() {
      return layout_ != null;
    }
    /**
     * <pre>
     * The layout used to back this shape.
     * </pre>
     *
     * <code>.xla.LayoutProto layout = 5;</code>
     * @return The layout.
     */
    @java.lang.Override
    public xla.XlaData.LayoutProto getLayout() {
      return layout_ == null ? xla.XlaData.LayoutProto.getDefaultInstance() : layout_;
    }
    /**
     * <pre>
     * The layout used to back this shape.
     * </pre>
     *
     * <code>.xla.LayoutProto layout = 5;</code>
     */
    @java.lang.Override
    public xla.XlaData.LayoutProtoOrBuilder getLayoutOrBuilder() {
      return layout_ == null ? xla.XlaData.LayoutProto.getDefaultInstance() : layout_;
    }

    public static final int IS_DYNAMIC_DIMENSION_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList isDynamicDimension_;
    /**
     * <pre>
     * For arrays, this indicates whether or not each dimension is
     * dynamically-sized. The number of elements in this repeated field should be
     * zero (indicating that no dimensions are dynamic) or equal to the number of
     * elements in the 'dimensions' field.
     * </pre>
     *
     * <code>repeated bool is_dynamic_dimension = 6;</code>
     * @return A list containing the isDynamicDimension.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getIsDynamicDimensionList() {
      return isDynamicDimension_;
    }
    /**
     * <pre>
     * For arrays, this indicates whether or not each dimension is
     * dynamically-sized. The number of elements in this repeated field should be
     * zero (indicating that no dimensions are dynamic) or equal to the number of
     * elements in the 'dimensions' field.
     * </pre>
     *
     * <code>repeated bool is_dynamic_dimension = 6;</code>
     * @return The count of isDynamicDimension.
     */
    public int getIsDynamicDimensionCount() {
      return isDynamicDimension_.size();
    }
    /**
     * <pre>
     * For arrays, this indicates whether or not each dimension is
     * dynamically-sized. The number of elements in this repeated field should be
     * zero (indicating that no dimensions are dynamic) or equal to the number of
     * elements in the 'dimensions' field.
     * </pre>
     *
     * <code>repeated bool is_dynamic_dimension = 6;</code>
     * @param index The index of the element to return.
     * @return The isDynamicDimension at the given index.
     */
    public boolean getIsDynamicDimension(int index) {
      return isDynamicDimension_.getBoolean(index);
    }
    private int isDynamicDimensionMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (elementType_ != xla.XlaData.PrimitiveType.PRIMITIVE_TYPE_INVALID.getNumber()) {
        output.writeEnum(2, elementType_);
      }
      if (getDimensionsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(dimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < dimensions_.size(); i++) {
        output.writeInt64NoTag(dimensions_.getLong(i));
      }
      for (int i = 0; i < tupleShapes_.size(); i++) {
        output.writeMessage(4, tupleShapes_.get(i));
      }
      if (layout_ != null) {
        output.writeMessage(5, getLayout());
      }
      if (getIsDynamicDimensionList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(isDynamicDimensionMemoizedSerializedSize);
      }
      for (int i = 0; i < isDynamicDimension_.size(); i++) {
        output.writeBoolNoTag(isDynamicDimension_.getBoolean(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (elementType_ != xla.XlaData.PrimitiveType.PRIMITIVE_TYPE_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, elementType_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(dimensions_.getLong(i));
        }
        size += dataSize;
        if (!getDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        dimensionsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < tupleShapes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, tupleShapes_.get(i));
      }
      if (layout_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLayout());
      }
      {
        int dataSize = 0;
        dataSize = 1 * getIsDynamicDimensionList().size();
        size += dataSize;
        if (!getIsDynamicDimensionList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        isDynamicDimensionMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ShapeProto)) {
        return super.equals(obj);
      }
      xla.XlaData.ShapeProto other = (xla.XlaData.ShapeProto) obj;

      if (elementType_ != other.elementType_) return false;
      if (!getDimensionsList()
          .equals(other.getDimensionsList())) return false;
      if (!getTupleShapesList()
          .equals(other.getTupleShapesList())) return false;
      if (hasLayout() != other.hasLayout()) return false;
      if (hasLayout()) {
        if (!getLayout()
            .equals(other.getLayout())) return false;
      }
      if (!getIsDynamicDimensionList()
          .equals(other.getIsDynamicDimensionList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ELEMENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + elementType_;
      if (getDimensionsCount() > 0) {
        hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionsList().hashCode();
      }
      if (getTupleShapesCount() > 0) {
        hash = (37 * hash) + TUPLE_SHAPES_FIELD_NUMBER;
        hash = (53 * hash) + getTupleShapesList().hashCode();
      }
      if (hasLayout()) {
        hash = (37 * hash) + LAYOUT_FIELD_NUMBER;
        hash = (53 * hash) + getLayout().hashCode();
      }
      if (getIsDynamicDimensionCount() > 0) {
        hash = (37 * hash) + IS_DYNAMIC_DIMENSION_FIELD_NUMBER;
        hash = (53 * hash) + getIsDynamicDimensionList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ShapeProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ShapeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ShapeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ShapeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ShapeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ShapeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ShapeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A shape describes the number of dimensions in the array, the size of each
     * dimension, and the primitive component type.
     * Tuples are a special case in that they have rank zero and have tuple_shapes
     * defined.
     * See the XLA documentation for more information on shapes and layouts.
     * LINT.IfChange
     * </pre>
     *
     * Protobuf type {@code xla.ShapeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ShapeProto)
        xla.XlaData.ShapeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ShapeProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ShapeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ShapeProto.class, xla.XlaData.ShapeProto.Builder.class);
      }

      // Construct using xla.XlaData.ShapeProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        elementType_ = 0;
        dimensions_ = emptyLongList();
        if (tupleShapesBuilder_ == null) {
          tupleShapes_ = java.util.Collections.emptyList();
        } else {
          tupleShapes_ = null;
          tupleShapesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        layout_ = null;
        if (layoutBuilder_ != null) {
          layoutBuilder_.dispose();
          layoutBuilder_ = null;
        }
        isDynamicDimension_ = emptyBooleanList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ShapeProto_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ShapeProto getDefaultInstanceForType() {
        return xla.XlaData.ShapeProto.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ShapeProto build() {
        xla.XlaData.ShapeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ShapeProto buildPartial() {
        xla.XlaData.ShapeProto result = new xla.XlaData.ShapeProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.ShapeProto result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          dimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.dimensions_ = dimensions_;
        if (tupleShapesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tupleShapes_ = java.util.Collections.unmodifiableList(tupleShapes_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tupleShapes_ = tupleShapes_;
        } else {
          result.tupleShapes_ = tupleShapesBuilder_.build();
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          isDynamicDimension_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.isDynamicDimension_ = isDynamicDimension_;
      }

      private void buildPartial0(xla.XlaData.ShapeProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.elementType_ = elementType_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.layout_ = layoutBuilder_ == null
              ? layout_
              : layoutBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ShapeProto) {
          return mergeFrom((xla.XlaData.ShapeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ShapeProto other) {
        if (other == xla.XlaData.ShapeProto.getDefaultInstance()) return this;
        if (other.elementType_ != 0) {
          setElementTypeValue(other.getElementTypeValue());
        }
        if (!other.dimensions_.isEmpty()) {
          if (dimensions_.isEmpty()) {
            dimensions_ = other.dimensions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDimensionsIsMutable();
            dimensions_.addAll(other.dimensions_);
          }
          onChanged();
        }
        if (tupleShapesBuilder_ == null) {
          if (!other.tupleShapes_.isEmpty()) {
            if (tupleShapes_.isEmpty()) {
              tupleShapes_ = other.tupleShapes_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTupleShapesIsMutable();
              tupleShapes_.addAll(other.tupleShapes_);
            }
            onChanged();
          }
        } else {
          if (!other.tupleShapes_.isEmpty()) {
            if (tupleShapesBuilder_.isEmpty()) {
              tupleShapesBuilder_.dispose();
              tupleShapesBuilder_ = null;
              tupleShapes_ = other.tupleShapes_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tupleShapesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTupleShapesFieldBuilder() : null;
            } else {
              tupleShapesBuilder_.addAllMessages(other.tupleShapes_);
            }
          }
        }
        if (other.hasLayout()) {
          mergeLayout(other.getLayout());
        }
        if (!other.isDynamicDimension_.isEmpty()) {
          if (isDynamicDimension_.isEmpty()) {
            isDynamicDimension_ = other.isDynamicDimension_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureIsDynamicDimensionIsMutable();
            isDynamicDimension_.addAll(other.isDynamicDimension_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 16: {
                elementType_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 16
              case 24: {
                long v = input.readInt64();
                ensureDimensionsIsMutable();
                dimensions_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  dimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 34: {
                xla.XlaData.ShapeProto m =
                    input.readMessage(
                        xla.XlaData.ShapeProto.parser(),
                        extensionRegistry);
                if (tupleShapesBuilder_ == null) {
                  ensureTupleShapesIsMutable();
                  tupleShapes_.add(m);
                } else {
                  tupleShapesBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getLayoutFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 42
              case 48: {
                boolean v = input.readBool();
                ensureIsDynamicDimensionIsMutable();
                isDynamicDimension_.addBoolean(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureIsDynamicDimensionIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  isDynamicDimension_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int elementType_ = 0;
      /**
       * <pre>
       * The element type for this shape.
       * </pre>
       *
       * <code>.xla.PrimitiveType element_type = 2;</code>
       * @return The enum numeric value on the wire for elementType.
       */
      @java.lang.Override public int getElementTypeValue() {
        return elementType_;
      }
      /**
       * <pre>
       * The element type for this shape.
       * </pre>
       *
       * <code>.xla.PrimitiveType element_type = 2;</code>
       * @param value The enum numeric value on the wire for elementType to set.
       * @return This builder for chaining.
       */
      public Builder setElementTypeValue(int value) {
        elementType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The element type for this shape.
       * </pre>
       *
       * <code>.xla.PrimitiveType element_type = 2;</code>
       * @return The elementType.
       */
      @java.lang.Override
      public xla.XlaData.PrimitiveType getElementType() {
        xla.XlaData.PrimitiveType result = xla.XlaData.PrimitiveType.forNumber(elementType_);
        return result == null ? xla.XlaData.PrimitiveType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The element type for this shape.
       * </pre>
       *
       * <code>.xla.PrimitiveType element_type = 2;</code>
       * @param value The elementType to set.
       * @return This builder for chaining.
       */
      public Builder setElementType(xla.XlaData.PrimitiveType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        elementType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The element type for this shape.
       * </pre>
       *
       * <code>.xla.PrimitiveType element_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearElementType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        elementType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList dimensions_ = emptyLongList();
      private void ensureDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          dimensions_ = mutableCopy(dimensions_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @return A list containing the dimensions.
       */
      public java.util.List<java.lang.Long>
          getDimensionsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(dimensions_) : dimensions_;
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @return The count of dimensions.
       */
      public int getDimensionsCount() {
        return dimensions_.size();
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @param index The index of the element to return.
       * @return The dimensions at the given index.
       */
      public long getDimensions(int index) {
        return dimensions_.getLong(index);
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @param index The index to set the value at.
       * @param value The dimensions to set.
       * @return This builder for chaining.
       */
      public Builder setDimensions(
          int index, long value) {
        
        ensureDimensionsIsMutable();
        dimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @param value The dimensions to add.
       * @return This builder for chaining.
       */
      public Builder addDimensions(long value) {
        
        ensureDimensionsIsMutable();
        dimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @param values The dimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size (number of elements) for each dimension, or an upper bound on the
       * size if the dimension is dynamic.  In XLA, dimensions are numbered from 0
       * to N-1 for an N-dimensional array. The first element of 'dimensions' is the
       * size of dimension 0, the second element is the size of dimension 1, and so
       * forth.  Empty list indicates a scalar.
       * If the respective element in 'is_dimension_dynamic' is true then the value
       * in this field represents an upper bound on the size of the dimension.
       * </pre>
       *
       * <code>repeated int64 dimensions = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDimensions() {
        dimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<xla.XlaData.ShapeProto> tupleShapes_ =
        java.util.Collections.emptyList();
      private void ensureTupleShapesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tupleShapes_ = new java.util.ArrayList<xla.XlaData.ShapeProto>(tupleShapes_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> tupleShapesBuilder_;

      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public java.util.List<xla.XlaData.ShapeProto> getTupleShapesList() {
        if (tupleShapesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tupleShapes_);
        } else {
          return tupleShapesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public int getTupleShapesCount() {
        if (tupleShapesBuilder_ == null) {
          return tupleShapes_.size();
        } else {
          return tupleShapesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public xla.XlaData.ShapeProto getTupleShapes(int index) {
        if (tupleShapesBuilder_ == null) {
          return tupleShapes_.get(index);
        } else {
          return tupleShapesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder setTupleShapes(
          int index, xla.XlaData.ShapeProto value) {
        if (tupleShapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleShapesIsMutable();
          tupleShapes_.set(index, value);
          onChanged();
        } else {
          tupleShapesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder setTupleShapes(
          int index, xla.XlaData.ShapeProto.Builder builderForValue) {
        if (tupleShapesBuilder_ == null) {
          ensureTupleShapesIsMutable();
          tupleShapes_.set(index, builderForValue.build());
          onChanged();
        } else {
          tupleShapesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder addTupleShapes(xla.XlaData.ShapeProto value) {
        if (tupleShapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleShapesIsMutable();
          tupleShapes_.add(value);
          onChanged();
        } else {
          tupleShapesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder addTupleShapes(
          int index, xla.XlaData.ShapeProto value) {
        if (tupleShapesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleShapesIsMutable();
          tupleShapes_.add(index, value);
          onChanged();
        } else {
          tupleShapesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder addTupleShapes(
          xla.XlaData.ShapeProto.Builder builderForValue) {
        if (tupleShapesBuilder_ == null) {
          ensureTupleShapesIsMutable();
          tupleShapes_.add(builderForValue.build());
          onChanged();
        } else {
          tupleShapesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder addTupleShapes(
          int index, xla.XlaData.ShapeProto.Builder builderForValue) {
        if (tupleShapesBuilder_ == null) {
          ensureTupleShapesIsMutable();
          tupleShapes_.add(index, builderForValue.build());
          onChanged();
        } else {
          tupleShapesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder addAllTupleShapes(
          java.lang.Iterable<? extends xla.XlaData.ShapeProto> values) {
        if (tupleShapesBuilder_ == null) {
          ensureTupleShapesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tupleShapes_);
          onChanged();
        } else {
          tupleShapesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder clearTupleShapes() {
        if (tupleShapesBuilder_ == null) {
          tupleShapes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tupleShapesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public Builder removeTupleShapes(int index) {
        if (tupleShapesBuilder_ == null) {
          ensureTupleShapesIsMutable();
          tupleShapes_.remove(index);
          onChanged();
        } else {
          tupleShapesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public xla.XlaData.ShapeProto.Builder getTupleShapesBuilder(
          int index) {
        return getTupleShapesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public xla.XlaData.ShapeProtoOrBuilder getTupleShapesOrBuilder(
          int index) {
        if (tupleShapesBuilder_ == null) {
          return tupleShapes_.get(index);  } else {
          return tupleShapesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public java.util.List<? extends xla.XlaData.ShapeProtoOrBuilder> 
           getTupleShapesOrBuilderList() {
        if (tupleShapesBuilder_ != null) {
          return tupleShapesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tupleShapes_);
        }
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public xla.XlaData.ShapeProto.Builder addTupleShapesBuilder() {
        return getTupleShapesFieldBuilder().addBuilder(
            xla.XlaData.ShapeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public xla.XlaData.ShapeProto.Builder addTupleShapesBuilder(
          int index) {
        return getTupleShapesFieldBuilder().addBuilder(
            index, xla.XlaData.ShapeProto.getDefaultInstance());
      }
      /**
       * <pre>
       * For tuples only, the shapes of constituent shapes in the tuple sequence.
       * </pre>
       *
       * <code>repeated .xla.ShapeProto tuple_shapes = 4;</code>
       */
      public java.util.List<xla.XlaData.ShapeProto.Builder> 
           getTupleShapesBuilderList() {
        return getTupleShapesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> 
          getTupleShapesFieldBuilder() {
        if (tupleShapesBuilder_ == null) {
          tupleShapesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder>(
                  tupleShapes_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tupleShapes_ = null;
        }
        return tupleShapesBuilder_;
      }

      private xla.XlaData.LayoutProto layout_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.LayoutProto, xla.XlaData.LayoutProto.Builder, xla.XlaData.LayoutProtoOrBuilder> layoutBuilder_;
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       * @return Whether the layout field is set.
       */
      public boolean hasLayout() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       * @return The layout.
       */
      public xla.XlaData.LayoutProto getLayout() {
        if (layoutBuilder_ == null) {
          return layout_ == null ? xla.XlaData.LayoutProto.getDefaultInstance() : layout_;
        } else {
          return layoutBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      public Builder setLayout(xla.XlaData.LayoutProto value) {
        if (layoutBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          layout_ = value;
        } else {
          layoutBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      public Builder setLayout(
          xla.XlaData.LayoutProto.Builder builderForValue) {
        if (layoutBuilder_ == null) {
          layout_ = builderForValue.build();
        } else {
          layoutBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      public Builder mergeLayout(xla.XlaData.LayoutProto value) {
        if (layoutBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            layout_ != null &&
            layout_ != xla.XlaData.LayoutProto.getDefaultInstance()) {
            getLayoutBuilder().mergeFrom(value);
          } else {
            layout_ = value;
          }
        } else {
          layoutBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      public Builder clearLayout() {
        bitField0_ = (bitField0_ & ~0x00000008);
        layout_ = null;
        if (layoutBuilder_ != null) {
          layoutBuilder_.dispose();
          layoutBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      public xla.XlaData.LayoutProto.Builder getLayoutBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLayoutFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      public xla.XlaData.LayoutProtoOrBuilder getLayoutOrBuilder() {
        if (layoutBuilder_ != null) {
          return layoutBuilder_.getMessageOrBuilder();
        } else {
          return layout_ == null ?
              xla.XlaData.LayoutProto.getDefaultInstance() : layout_;
        }
      }
      /**
       * <pre>
       * The layout used to back this shape.
       * </pre>
       *
       * <code>.xla.LayoutProto layout = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.LayoutProto, xla.XlaData.LayoutProto.Builder, xla.XlaData.LayoutProtoOrBuilder> 
          getLayoutFieldBuilder() {
        if (layoutBuilder_ == null) {
          layoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.LayoutProto, xla.XlaData.LayoutProto.Builder, xla.XlaData.LayoutProtoOrBuilder>(
                  getLayout(),
                  getParentForChildren(),
                  isClean());
          layout_ = null;
        }
        return layoutBuilder_;
      }

      private com.google.protobuf.Internal.BooleanList isDynamicDimension_ = emptyBooleanList();
      private void ensureIsDynamicDimensionIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          isDynamicDimension_ = mutableCopy(isDynamicDimension_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @return A list containing the isDynamicDimension.
       */
      public java.util.List<java.lang.Boolean>
          getIsDynamicDimensionList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(isDynamicDimension_) : isDynamicDimension_;
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @return The count of isDynamicDimension.
       */
      public int getIsDynamicDimensionCount() {
        return isDynamicDimension_.size();
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @param index The index of the element to return.
       * @return The isDynamicDimension at the given index.
       */
      public boolean getIsDynamicDimension(int index) {
        return isDynamicDimension_.getBoolean(index);
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @param index The index to set the value at.
       * @param value The isDynamicDimension to set.
       * @return This builder for chaining.
       */
      public Builder setIsDynamicDimension(
          int index, boolean value) {
        
        ensureIsDynamicDimensionIsMutable();
        isDynamicDimension_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @param value The isDynamicDimension to add.
       * @return This builder for chaining.
       */
      public Builder addIsDynamicDimension(boolean value) {
        
        ensureIsDynamicDimensionIsMutable();
        isDynamicDimension_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @param values The isDynamicDimension to add.
       * @return This builder for chaining.
       */
      public Builder addAllIsDynamicDimension(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureIsDynamicDimensionIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, isDynamicDimension_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For arrays, this indicates whether or not each dimension is
       * dynamically-sized. The number of elements in this repeated field should be
       * zero (indicating that no dimensions are dynamic) or equal to the number of
       * elements in the 'dimensions' field.
       * </pre>
       *
       * <code>repeated bool is_dynamic_dimension = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsDynamicDimension() {
        isDynamicDimension_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ShapeProto)
    }

    // @@protoc_insertion_point(class_scope:xla.ShapeProto)
    private static final xla.XlaData.ShapeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ShapeProto();
    }

    public static xla.XlaData.ShapeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShapeProto>
        PARSER = new com.google.protobuf.AbstractParser<ShapeProto>() {
      @java.lang.Override
      public ShapeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ShapeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShapeProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ShapeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProgramShapeProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ProgramShapeProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    java.util.List<xla.XlaData.ShapeProto> 
        getParametersList();
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    xla.XlaData.ShapeProto getParameters(int index);
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    int getParametersCount();
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    java.util.List<? extends xla.XlaData.ShapeProtoOrBuilder> 
        getParametersOrBuilderList();
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    xla.XlaData.ShapeProtoOrBuilder getParametersOrBuilder(
        int index);

    /**
     * <code>.xla.ShapeProto result = 2;</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>.xla.ShapeProto result = 2;</code>
     * @return The result.
     */
    xla.XlaData.ShapeProto getResult();
    /**
     * <code>.xla.ShapeProto result = 2;</code>
     */
    xla.XlaData.ShapeProtoOrBuilder getResultOrBuilder();

    /**
     * <code>repeated string parameter_names = 3;</code>
     * @return A list containing the parameterNames.
     */
    java.util.List<java.lang.String>
        getParameterNamesList();
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @return The count of parameterNames.
     */
    int getParameterNamesCount();
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @param index The index of the element to return.
     * @return The parameterNames at the given index.
     */
    java.lang.String getParameterNames(int index);
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the parameterNames at the given index.
     */
    com.google.protobuf.ByteString
        getParameterNamesBytes(int index);
  }
  /**
   * <pre>
   * Shape of the parameters and output of a computation (like a traditional
   * function signature).
   * </pre>
   *
   * Protobuf type {@code xla.ProgramShapeProto}
   */
  public static final class ProgramShapeProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ProgramShapeProto)
      ProgramShapeProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProgramShapeProto.newBuilder() to construct.
    private ProgramShapeProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProgramShapeProto() {
      parameters_ = java.util.Collections.emptyList();
      parameterNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProgramShapeProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ProgramShapeProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ProgramShapeProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ProgramShapeProto.class, xla.XlaData.ProgramShapeProto.Builder.class);
    }

    public static final int PARAMETERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.ShapeProto> parameters_;
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.ShapeProto> getParametersList() {
      return parameters_;
    }
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.ShapeProtoOrBuilder> 
        getParametersOrBuilderList() {
      return parameters_;
    }
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    @java.lang.Override
    public int getParametersCount() {
      return parameters_.size();
    }
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProto getParameters(int index) {
      return parameters_.get(index);
    }
    /**
     * <code>repeated .xla.ShapeProto parameters = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProtoOrBuilder getParametersOrBuilder(
        int index) {
      return parameters_.get(index);
    }

    public static final int RESULT_FIELD_NUMBER = 2;
    private xla.XlaData.ShapeProto result_;
    /**
     * <code>.xla.ShapeProto result = 2;</code>
     * @return Whether the result field is set.
     */
    @java.lang.Override
    public boolean hasResult() {
      return result_ != null;
    }
    /**
     * <code>.xla.ShapeProto result = 2;</code>
     * @return The result.
     */
    @java.lang.Override
    public xla.XlaData.ShapeProto getResult() {
      return result_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : result_;
    }
    /**
     * <code>.xla.ShapeProto result = 2;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProtoOrBuilder getResultOrBuilder() {
      return result_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : result_;
    }

    public static final int PARAMETER_NAMES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList parameterNames_;
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @return A list containing the parameterNames.
     */
    public com.google.protobuf.ProtocolStringList
        getParameterNamesList() {
      return parameterNames_;
    }
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @return The count of parameterNames.
     */
    public int getParameterNamesCount() {
      return parameterNames_.size();
    }
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @param index The index of the element to return.
     * @return The parameterNames at the given index.
     */
    public java.lang.String getParameterNames(int index) {
      return parameterNames_.get(index);
    }
    /**
     * <code>repeated string parameter_names = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the parameterNames at the given index.
     */
    public com.google.protobuf.ByteString
        getParameterNamesBytes(int index) {
      return parameterNames_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < parameters_.size(); i++) {
        output.writeMessage(1, parameters_.get(i));
      }
      if (result_ != null) {
        output.writeMessage(2, getResult());
      }
      for (int i = 0; i < parameterNames_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, parameterNames_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < parameters_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, parameters_.get(i));
      }
      if (result_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getResult());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < parameterNames_.size(); i++) {
          dataSize += computeStringSizeNoTag(parameterNames_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getParameterNamesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ProgramShapeProto)) {
        return super.equals(obj);
      }
      xla.XlaData.ProgramShapeProto other = (xla.XlaData.ProgramShapeProto) obj;

      if (!getParametersList()
          .equals(other.getParametersList())) return false;
      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (!getResult()
            .equals(other.getResult())) return false;
      }
      if (!getParameterNamesList()
          .equals(other.getParameterNamesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getParametersCount() > 0) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParametersList().hashCode();
      }
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getResult().hashCode();
      }
      if (getParameterNamesCount() > 0) {
        hash = (37 * hash) + PARAMETER_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getParameterNamesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ProgramShapeProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ProgramShapeProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ProgramShapeProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ProgramShapeProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ProgramShapeProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Shape of the parameters and output of a computation (like a traditional
     * function signature).
     * </pre>
     *
     * Protobuf type {@code xla.ProgramShapeProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ProgramShapeProto)
        xla.XlaData.ProgramShapeProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ProgramShapeProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ProgramShapeProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ProgramShapeProto.class, xla.XlaData.ProgramShapeProto.Builder.class);
      }

      // Construct using xla.XlaData.ProgramShapeProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
        } else {
          parameters_ = null;
          parametersBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = null;
        if (resultBuilder_ != null) {
          resultBuilder_.dispose();
          resultBuilder_ = null;
        }
        parameterNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ProgramShapeProto_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ProgramShapeProto getDefaultInstanceForType() {
        return xla.XlaData.ProgramShapeProto.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ProgramShapeProto build() {
        xla.XlaData.ProgramShapeProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ProgramShapeProto buildPartial() {
        xla.XlaData.ProgramShapeProto result = new xla.XlaData.ProgramShapeProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.ProgramShapeProto result) {
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            parameters_ = java.util.Collections.unmodifiableList(parameters_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.parameters_ = parameters_;
        } else {
          result.parameters_ = parametersBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          parameterNames_ = parameterNames_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.parameterNames_ = parameterNames_;
      }

      private void buildPartial0(xla.XlaData.ProgramShapeProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.result_ = resultBuilder_ == null
              ? result_
              : resultBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ProgramShapeProto) {
          return mergeFrom((xla.XlaData.ProgramShapeProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ProgramShapeProto other) {
        if (other == xla.XlaData.ProgramShapeProto.getDefaultInstance()) return this;
        if (parametersBuilder_ == null) {
          if (!other.parameters_.isEmpty()) {
            if (parameters_.isEmpty()) {
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureParametersIsMutable();
              parameters_.addAll(other.parameters_);
            }
            onChanged();
          }
        } else {
          if (!other.parameters_.isEmpty()) {
            if (parametersBuilder_.isEmpty()) {
              parametersBuilder_.dispose();
              parametersBuilder_ = null;
              parameters_ = other.parameters_;
              bitField0_ = (bitField0_ & ~0x00000001);
              parametersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getParametersFieldBuilder() : null;
            } else {
              parametersBuilder_.addAllMessages(other.parameters_);
            }
          }
        }
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        if (!other.parameterNames_.isEmpty()) {
          if (parameterNames_.isEmpty()) {
            parameterNames_ = other.parameterNames_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureParameterNamesIsMutable();
            parameterNames_.addAll(other.parameterNames_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                xla.XlaData.ShapeProto m =
                    input.readMessage(
                        xla.XlaData.ShapeProto.parser(),
                        extensionRegistry);
                if (parametersBuilder_ == null) {
                  ensureParametersIsMutable();
                  parameters_.add(m);
                } else {
                  parametersBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getResultFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureParameterNamesIsMutable();
                parameterNames_.add(s);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<xla.XlaData.ShapeProto> parameters_ =
        java.util.Collections.emptyList();
      private void ensureParametersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          parameters_ = new java.util.ArrayList<xla.XlaData.ShapeProto>(parameters_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> parametersBuilder_;

      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public java.util.List<xla.XlaData.ShapeProto> getParametersList() {
        if (parametersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(parameters_);
        } else {
          return parametersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public int getParametersCount() {
        if (parametersBuilder_ == null) {
          return parameters_.size();
        } else {
          return parametersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public xla.XlaData.ShapeProto getParameters(int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);
        } else {
          return parametersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder setParameters(
          int index, xla.XlaData.ShapeProto value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.set(index, value);
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder setParameters(
          int index, xla.XlaData.ShapeProto.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.set(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder addParameters(xla.XlaData.ShapeProto value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder addParameters(
          int index, xla.XlaData.ShapeProto value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParametersIsMutable();
          parameters_.add(index, value);
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder addParameters(
          xla.XlaData.ShapeProto.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder addParameters(
          int index, xla.XlaData.ShapeProto.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.add(index, builderForValue.build());
          onChanged();
        } else {
          parametersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder addAllParameters(
          java.lang.Iterable<? extends xla.XlaData.ShapeProto> values) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, parameters_);
          onChanged();
        } else {
          parametersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder clearParameters() {
        if (parametersBuilder_ == null) {
          parameters_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          parametersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public Builder removeParameters(int index) {
        if (parametersBuilder_ == null) {
          ensureParametersIsMutable();
          parameters_.remove(index);
          onChanged();
        } else {
          parametersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public xla.XlaData.ShapeProto.Builder getParametersBuilder(
          int index) {
        return getParametersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public xla.XlaData.ShapeProtoOrBuilder getParametersOrBuilder(
          int index) {
        if (parametersBuilder_ == null) {
          return parameters_.get(index);  } else {
          return parametersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public java.util.List<? extends xla.XlaData.ShapeProtoOrBuilder> 
           getParametersOrBuilderList() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(parameters_);
        }
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public xla.XlaData.ShapeProto.Builder addParametersBuilder() {
        return getParametersFieldBuilder().addBuilder(
            xla.XlaData.ShapeProto.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public xla.XlaData.ShapeProto.Builder addParametersBuilder(
          int index) {
        return getParametersFieldBuilder().addBuilder(
            index, xla.XlaData.ShapeProto.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.ShapeProto parameters = 1;</code>
       */
      public java.util.List<xla.XlaData.ShapeProto.Builder> 
           getParametersBuilderList() {
        return getParametersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder>(
                  parameters_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      private xla.XlaData.ShapeProto result_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> resultBuilder_;
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       * @return Whether the result field is set.
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       * @return The result.
       */
      public xla.XlaData.ShapeProto getResult() {
        if (resultBuilder_ == null) {
          return result_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : result_;
        } else {
          return resultBuilder_.getMessage();
        }
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      public Builder setResult(xla.XlaData.ShapeProto value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
        } else {
          resultBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      public Builder setResult(
          xla.XlaData.ShapeProto.Builder builderForValue) {
        if (resultBuilder_ == null) {
          result_ = builderForValue.build();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      public Builder mergeResult(xla.XlaData.ShapeProto value) {
        if (resultBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            result_ != null &&
            result_ != xla.XlaData.ShapeProto.getDefaultInstance()) {
            getResultBuilder().mergeFrom(value);
          } else {
            result_ = value;
          }
        } else {
          resultBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000002);
        result_ = null;
        if (resultBuilder_ != null) {
          resultBuilder_.dispose();
          resultBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      public xla.XlaData.ShapeProto.Builder getResultBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getResultFieldBuilder().getBuilder();
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      public xla.XlaData.ShapeProtoOrBuilder getResultOrBuilder() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          return result_ == null ?
              xla.XlaData.ShapeProto.getDefaultInstance() : result_;
        }
      }
      /**
       * <code>.xla.ShapeProto result = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder>(
                  getResult(),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }

      private com.google.protobuf.LazyStringList parameterNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureParameterNamesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          parameterNames_ = new com.google.protobuf.LazyStringArrayList(parameterNames_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @return A list containing the parameterNames.
       */
      public com.google.protobuf.ProtocolStringList
          getParameterNamesList() {
        return parameterNames_.getUnmodifiableView();
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @return The count of parameterNames.
       */
      public int getParameterNamesCount() {
        return parameterNames_.size();
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @param index The index of the element to return.
       * @return The parameterNames at the given index.
       */
      public java.lang.String getParameterNames(int index) {
        return parameterNames_.get(index);
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the parameterNames at the given index.
       */
      public com.google.protobuf.ByteString
          getParameterNamesBytes(int index) {
        return parameterNames_.getByteString(index);
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @param index The index to set the value at.
       * @param value The parameterNames to set.
       * @return This builder for chaining.
       */
      public Builder setParameterNames(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureParameterNamesIsMutable();
        parameterNames_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @param value The parameterNames to add.
       * @return This builder for chaining.
       */
      public Builder addParameterNames(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureParameterNamesIsMutable();
        parameterNames_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @param values The parameterNames to add.
       * @return This builder for chaining.
       */
      public Builder addAllParameterNames(
          java.lang.Iterable<java.lang.String> values) {
        ensureParameterNamesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, parameterNames_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParameterNames() {
        parameterNames_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string parameter_names = 3;</code>
       * @param value The bytes of the parameterNames to add.
       * @return This builder for chaining.
       */
      public Builder addParameterNamesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureParameterNamesIsMutable();
        parameterNames_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ProgramShapeProto)
    }

    // @@protoc_insertion_point(class_scope:xla.ProgramShapeProto)
    private static final xla.XlaData.ProgramShapeProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ProgramShapeProto();
    }

    public static xla.XlaData.ProgramShapeProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProgramShapeProto>
        PARSER = new com.google.protobuf.AbstractParser<ProgramShapeProto>() {
      @java.lang.Override
      public ProgramShapeProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProgramShapeProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProgramShapeProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ProgramShapeProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComputationStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ComputationStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The number of floating point operations in the computation.
     * </pre>
     *
     * <code>double flop_count = 1;</code>
     * @return The flopCount.
     */
    double getFlopCount();

    /**
     * <pre>
     * The number of transcendental operations (e.g., exp) in the computation.
     * </pre>
     *
     * <code>double transcendental_count = 2;</code>
     * @return The transcendentalCount.
     */
    double getTranscendentalCount();
  }
  /**
   * <pre>
   * Statistics of a computation.
   * </pre>
   *
   * Protobuf type {@code xla.ComputationStats}
   */
  public static final class ComputationStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ComputationStats)
      ComputationStatsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ComputationStats.newBuilder() to construct.
    private ComputationStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ComputationStats() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ComputationStats();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ComputationStats_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ComputationStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ComputationStats.class, xla.XlaData.ComputationStats.Builder.class);
    }

    public static final int FLOP_COUNT_FIELD_NUMBER = 1;
    private double flopCount_ = 0D;
    /**
     * <pre>
     * The number of floating point operations in the computation.
     * </pre>
     *
     * <code>double flop_count = 1;</code>
     * @return The flopCount.
     */
    @java.lang.Override
    public double getFlopCount() {
      return flopCount_;
    }

    public static final int TRANSCENDENTAL_COUNT_FIELD_NUMBER = 2;
    private double transcendentalCount_ = 0D;
    /**
     * <pre>
     * The number of transcendental operations (e.g., exp) in the computation.
     * </pre>
     *
     * <code>double transcendental_count = 2;</code>
     * @return The transcendentalCount.
     */
    @java.lang.Override
    public double getTranscendentalCount() {
      return transcendentalCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Double.doubleToRawLongBits(flopCount_) != 0) {
        output.writeDouble(1, flopCount_);
      }
      if (java.lang.Double.doubleToRawLongBits(transcendentalCount_) != 0) {
        output.writeDouble(2, transcendentalCount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Double.doubleToRawLongBits(flopCount_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, flopCount_);
      }
      if (java.lang.Double.doubleToRawLongBits(transcendentalCount_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, transcendentalCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ComputationStats)) {
        return super.equals(obj);
      }
      xla.XlaData.ComputationStats other = (xla.XlaData.ComputationStats) obj;

      if (java.lang.Double.doubleToLongBits(getFlopCount())
          != java.lang.Double.doubleToLongBits(
              other.getFlopCount())) return false;
      if (java.lang.Double.doubleToLongBits(getTranscendentalCount())
          != java.lang.Double.doubleToLongBits(
              other.getTranscendentalCount())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FLOP_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getFlopCount()));
      hash = (37 * hash) + TRANSCENDENTAL_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTranscendentalCount()));
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ComputationStats parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ComputationStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ComputationStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ComputationStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ComputationStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ComputationStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ComputationStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Statistics of a computation.
     * </pre>
     *
     * Protobuf type {@code xla.ComputationStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ComputationStats)
        xla.XlaData.ComputationStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ComputationStats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ComputationStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ComputationStats.class, xla.XlaData.ComputationStats.Builder.class);
      }

      // Construct using xla.XlaData.ComputationStats.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        flopCount_ = 0D;
        transcendentalCount_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ComputationStats_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ComputationStats getDefaultInstanceForType() {
        return xla.XlaData.ComputationStats.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ComputationStats build() {
        xla.XlaData.ComputationStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ComputationStats buildPartial() {
        xla.XlaData.ComputationStats result = new xla.XlaData.ComputationStats(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.ComputationStats result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.flopCount_ = flopCount_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.transcendentalCount_ = transcendentalCount_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ComputationStats) {
          return mergeFrom((xla.XlaData.ComputationStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ComputationStats other) {
        if (other == xla.XlaData.ComputationStats.getDefaultInstance()) return this;
        if (other.getFlopCount() != 0D) {
          setFlopCount(other.getFlopCount());
        }
        if (other.getTranscendentalCount() != 0D) {
          setTranscendentalCount(other.getTranscendentalCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                flopCount_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                transcendentalCount_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double flopCount_ ;
      /**
       * <pre>
       * The number of floating point operations in the computation.
       * </pre>
       *
       * <code>double flop_count = 1;</code>
       * @return The flopCount.
       */
      @java.lang.Override
      public double getFlopCount() {
        return flopCount_;
      }
      /**
       * <pre>
       * The number of floating point operations in the computation.
       * </pre>
       *
       * <code>double flop_count = 1;</code>
       * @param value The flopCount to set.
       * @return This builder for chaining.
       */
      public Builder setFlopCount(double value) {
        
        flopCount_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of floating point operations in the computation.
       * </pre>
       *
       * <code>double flop_count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlopCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        flopCount_ = 0D;
        onChanged();
        return this;
      }

      private double transcendentalCount_ ;
      /**
       * <pre>
       * The number of transcendental operations (e.g., exp) in the computation.
       * </pre>
       *
       * <code>double transcendental_count = 2;</code>
       * @return The transcendentalCount.
       */
      @java.lang.Override
      public double getTranscendentalCount() {
        return transcendentalCount_;
      }
      /**
       * <pre>
       * The number of transcendental operations (e.g., exp) in the computation.
       * </pre>
       *
       * <code>double transcendental_count = 2;</code>
       * @param value The transcendentalCount to set.
       * @return This builder for chaining.
       */
      public Builder setTranscendentalCount(double value) {
        
        transcendentalCount_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of transcendental operations (e.g., exp) in the computation.
       * </pre>
       *
       * <code>double transcendental_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTranscendentalCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        transcendentalCount_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ComputationStats)
    }

    // @@protoc_insertion_point(class_scope:xla.ComputationStats)
    private static final xla.XlaData.ComputationStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ComputationStats();
    }

    public static xla.XlaData.ComputationStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ComputationStats>
        PARSER = new com.google.protobuf.AbstractParser<ComputationStats>() {
      @java.lang.Override
      public ComputationStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ComputationStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ComputationStats> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ComputationStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OpMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.OpMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The framework op name that generated this XLA op.
     * Frameworks that build on top of XLA should mirror the names of their ops
     * back to users by specifying the op_type. In this way, even if the
     * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
     * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
     * multiple ops, then each op should have the op_type be "SoftMax".)
     * </pre>
     *
     * <code>string op_type = 1;</code>
     * @return The opType.
     */
    java.lang.String getOpType();
    /**
     * <pre>
     * The framework op name that generated this XLA op.
     * Frameworks that build on top of XLA should mirror the names of their ops
     * back to users by specifying the op_type. In this way, even if the
     * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
     * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
     * multiple ops, then each op should have the op_type be "SoftMax".)
     * </pre>
     *
     * <code>string op_type = 1;</code>
     * @return The bytes for opType.
     */
    com.google.protobuf.ByteString
        getOpTypeBytes();

    /**
     * <pre>
     * The user-specified name of the op.
     * This name is often unique within a computation. Note: some frameworks
     * add auto-generated names if the user does not provide one.
     * </pre>
     *
     * <code>string op_name = 2;</code>
     * @return The opName.
     */
    java.lang.String getOpName();
    /**
     * <pre>
     * The user-specified name of the op.
     * This name is often unique within a computation. Note: some frameworks
     * add auto-generated names if the user does not provide one.
     * </pre>
     *
     * <code>string op_name = 2;</code>
     * @return The bytes for opName.
     */
    com.google.protobuf.ByteString
        getOpNameBytes();

    /**
     * <pre>
     * Indicate a file and line that this op is associated to in a user's program.
     * e.g. it could be the file and line of user code that generated the op.
     * </pre>
     *
     * <code>string source_file = 3;</code>
     * @return The sourceFile.
     */
    java.lang.String getSourceFile();
    /**
     * <pre>
     * Indicate a file and line that this op is associated to in a user's program.
     * e.g. it could be the file and line of user code that generated the op.
     * </pre>
     *
     * <code>string source_file = 3;</code>
     * @return The bytes for sourceFile.
     */
    com.google.protobuf.ByteString
        getSourceFileBytes();

    /**
     * <code>int32 source_line = 4;</code>
     * @return The sourceLine.
     */
    int getSourceLine();

    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @return A list containing the profileType.
     */
    java.util.List<xla.XlaData.ProfileType> getProfileTypeList();
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @return The count of profileType.
     */
    int getProfileTypeCount();
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @param index The index of the element to return.
     * @return The profileType at the given index.
     */
    xla.XlaData.ProfileType getProfileType(int index);
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @return A list containing the enum numeric values on the wire for profileType.
     */
    java.util.List<java.lang.Integer>
    getProfileTypeValueList();
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of profileType at the given index.
     */
    int getProfileTypeValue(int index);

    /**
     * <pre>
     * HloPassMetadata.pass_id of the pass that created this HLO instruction
     * object. Should never be copied between HLO instructions. Zero if unset and
     * -1 if the instruction was created before HLO passes began.
     * </pre>
     *
     * <code>int64 creation_pass_id = 6;</code>
     * @return The creationPassId.
     */
    long getCreationPassId();

    /**
     * <pre>
     * HloPassMetadata.pass_id of the pass that created the logical functionality
     * that this HLO instruction represents. Should be copied between HLO
     * instructions that correspond across compilation passes. Zero if unset and
     * -1 if the instruction was created before HLO passes began.
     * </pre>
     *
     * <code>int64 logical_creation_pass_id = 7;</code>
     * @return The logicalCreationPassId.
     */
    long getLogicalCreationPassId();

    /**
     * <pre>
     * The footprint of the generated code for the instruction.
     * </pre>
     *
     * <code>int64 size_of_generated_code_in_bytes = 8;</code>
     * @return The sizeOfGeneratedCodeInBytes.
     */
    long getSizeOfGeneratedCodeInBytes();

    /**
     * <pre>
     * The size of the working set, i.e., the amount of memory, used by the
     * instruction in a compiler-managed fast device memory.
     * </pre>
     *
     * <code>int64 size_of_memory_working_set_in_bytes = 9;</code>
     * @return The sizeOfMemoryWorkingSetInBytes.
     */
    long getSizeOfMemoryWorkingSetInBytes();
  }
  /**
   * <pre>
   * Symbolization metadata for HLO Instructions.
   * This metadata is used for debugging XLA code generation, as well as
   * performance profiling of XLA-generated executables.
   * </pre>
   *
   * Protobuf type {@code xla.OpMetadata}
   */
  public static final class OpMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.OpMetadata)
      OpMetadataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OpMetadata.newBuilder() to construct.
    private OpMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpMetadata() {
      opType_ = "";
      opName_ = "";
      sourceFile_ = "";
      profileType_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OpMetadata();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_OpMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_OpMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.OpMetadata.class, xla.XlaData.OpMetadata.Builder.class);
    }

    public static final int OP_TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object opType_ = "";
    /**
     * <pre>
     * The framework op name that generated this XLA op.
     * Frameworks that build on top of XLA should mirror the names of their ops
     * back to users by specifying the op_type. In this way, even if the
     * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
     * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
     * multiple ops, then each op should have the op_type be "SoftMax".)
     * </pre>
     *
     * <code>string op_type = 1;</code>
     * @return The opType.
     */
    @java.lang.Override
    public java.lang.String getOpType() {
      java.lang.Object ref = opType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        opType_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The framework op name that generated this XLA op.
     * Frameworks that build on top of XLA should mirror the names of their ops
     * back to users by specifying the op_type. In this way, even if the
     * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
     * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
     * multiple ops, then each op should have the op_type be "SoftMax".)
     * </pre>
     *
     * <code>string op_type = 1;</code>
     * @return The bytes for opType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOpTypeBytes() {
      java.lang.Object ref = opType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OP_NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object opName_ = "";
    /**
     * <pre>
     * The user-specified name of the op.
     * This name is often unique within a computation. Note: some frameworks
     * add auto-generated names if the user does not provide one.
     * </pre>
     *
     * <code>string op_name = 2;</code>
     * @return The opName.
     */
    @java.lang.Override
    public java.lang.String getOpName() {
      java.lang.Object ref = opName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        opName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The user-specified name of the op.
     * This name is often unique within a computation. Note: some frameworks
     * add auto-generated names if the user does not provide one.
     * </pre>
     *
     * <code>string op_name = 2;</code>
     * @return The bytes for opName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOpNameBytes() {
      java.lang.Object ref = opName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        opName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FILE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object sourceFile_ = "";
    /**
     * <pre>
     * Indicate a file and line that this op is associated to in a user's program.
     * e.g. it could be the file and line of user code that generated the op.
     * </pre>
     *
     * <code>string source_file = 3;</code>
     * @return The sourceFile.
     */
    @java.lang.Override
    public java.lang.String getSourceFile() {
      java.lang.Object ref = sourceFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sourceFile_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Indicate a file and line that this op is associated to in a user's program.
     * e.g. it could be the file and line of user code that generated the op.
     * </pre>
     *
     * <code>string source_file = 3;</code>
     * @return The bytes for sourceFile.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceFileBytes() {
      java.lang.Object ref = sourceFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sourceFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_LINE_FIELD_NUMBER = 4;
    private int sourceLine_ = 0;
    /**
     * <code>int32 source_line = 4;</code>
     * @return The sourceLine.
     */
    @java.lang.Override
    public int getSourceLine() {
      return sourceLine_;
    }

    public static final int PROFILE_TYPE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> profileType_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, xla.XlaData.ProfileType> profileType_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, xla.XlaData.ProfileType>() {
              public xla.XlaData.ProfileType convert(java.lang.Integer from) {
                xla.XlaData.ProfileType result = xla.XlaData.ProfileType.forNumber(from);
                return result == null ? xla.XlaData.ProfileType.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @return A list containing the profileType.
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.ProfileType> getProfileTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, xla.XlaData.ProfileType>(profileType_, profileType_converter_);
    }
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @return The count of profileType.
     */
    @java.lang.Override
    public int getProfileTypeCount() {
      return profileType_.size();
    }
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @param index The index of the element to return.
     * @return The profileType at the given index.
     */
    @java.lang.Override
    public xla.XlaData.ProfileType getProfileType(int index) {
      return profileType_converter_.convert(profileType_.get(index));
    }
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @return A list containing the enum numeric values on the wire for profileType.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getProfileTypeValueList() {
      return profileType_;
    }
    /**
     * <code>repeated .xla.ProfileType profile_type = 5;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of profileType at the given index.
     */
    @java.lang.Override
    public int getProfileTypeValue(int index) {
      return profileType_.get(index);
    }
    private int profileTypeMemoizedSerializedSize;

    public static final int CREATION_PASS_ID_FIELD_NUMBER = 6;
    private long creationPassId_ = 0L;
    /**
     * <pre>
     * HloPassMetadata.pass_id of the pass that created this HLO instruction
     * object. Should never be copied between HLO instructions. Zero if unset and
     * -1 if the instruction was created before HLO passes began.
     * </pre>
     *
     * <code>int64 creation_pass_id = 6;</code>
     * @return The creationPassId.
     */
    @java.lang.Override
    public long getCreationPassId() {
      return creationPassId_;
    }

    public static final int LOGICAL_CREATION_PASS_ID_FIELD_NUMBER = 7;
    private long logicalCreationPassId_ = 0L;
    /**
     * <pre>
     * HloPassMetadata.pass_id of the pass that created the logical functionality
     * that this HLO instruction represents. Should be copied between HLO
     * instructions that correspond across compilation passes. Zero if unset and
     * -1 if the instruction was created before HLO passes began.
     * </pre>
     *
     * <code>int64 logical_creation_pass_id = 7;</code>
     * @return The logicalCreationPassId.
     */
    @java.lang.Override
    public long getLogicalCreationPassId() {
      return logicalCreationPassId_;
    }

    public static final int SIZE_OF_GENERATED_CODE_IN_BYTES_FIELD_NUMBER = 8;
    private long sizeOfGeneratedCodeInBytes_ = 0L;
    /**
     * <pre>
     * The footprint of the generated code for the instruction.
     * </pre>
     *
     * <code>int64 size_of_generated_code_in_bytes = 8;</code>
     * @return The sizeOfGeneratedCodeInBytes.
     */
    @java.lang.Override
    public long getSizeOfGeneratedCodeInBytes() {
      return sizeOfGeneratedCodeInBytes_;
    }

    public static final int SIZE_OF_MEMORY_WORKING_SET_IN_BYTES_FIELD_NUMBER = 9;
    private long sizeOfMemoryWorkingSetInBytes_ = 0L;
    /**
     * <pre>
     * The size of the working set, i.e., the amount of memory, used by the
     * instruction in a compiler-managed fast device memory.
     * </pre>
     *
     * <code>int64 size_of_memory_working_set_in_bytes = 9;</code>
     * @return The sizeOfMemoryWorkingSetInBytes.
     */
    @java.lang.Override
    public long getSizeOfMemoryWorkingSetInBytes() {
      return sizeOfMemoryWorkingSetInBytes_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(opType_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, opType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(opName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, opName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sourceFile_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sourceFile_);
      }
      if (sourceLine_ != 0) {
        output.writeInt32(4, sourceLine_);
      }
      if (getProfileTypeList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(profileTypeMemoizedSerializedSize);
      }
      for (int i = 0; i < profileType_.size(); i++) {
        output.writeEnumNoTag(profileType_.get(i));
      }
      if (creationPassId_ != 0L) {
        output.writeInt64(6, creationPassId_);
      }
      if (logicalCreationPassId_ != 0L) {
        output.writeInt64(7, logicalCreationPassId_);
      }
      if (sizeOfGeneratedCodeInBytes_ != 0L) {
        output.writeInt64(8, sizeOfGeneratedCodeInBytes_);
      }
      if (sizeOfMemoryWorkingSetInBytes_ != 0L) {
        output.writeInt64(9, sizeOfMemoryWorkingSetInBytes_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(opType_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, opType_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(opName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, opName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sourceFile_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sourceFile_);
      }
      if (sourceLine_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sourceLine_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < profileType_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(profileType_.get(i));
        }
        size += dataSize;
        if (!getProfileTypeList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }profileTypeMemoizedSerializedSize = dataSize;
      }
      if (creationPassId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, creationPassId_);
      }
      if (logicalCreationPassId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, logicalCreationPassId_);
      }
      if (sizeOfGeneratedCodeInBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, sizeOfGeneratedCodeInBytes_);
      }
      if (sizeOfMemoryWorkingSetInBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, sizeOfMemoryWorkingSetInBytes_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.OpMetadata)) {
        return super.equals(obj);
      }
      xla.XlaData.OpMetadata other = (xla.XlaData.OpMetadata) obj;

      if (!getOpType()
          .equals(other.getOpType())) return false;
      if (!getOpName()
          .equals(other.getOpName())) return false;
      if (!getSourceFile()
          .equals(other.getSourceFile())) return false;
      if (getSourceLine()
          != other.getSourceLine()) return false;
      if (!profileType_.equals(other.profileType_)) return false;
      if (getCreationPassId()
          != other.getCreationPassId()) return false;
      if (getLogicalCreationPassId()
          != other.getLogicalCreationPassId()) return false;
      if (getSizeOfGeneratedCodeInBytes()
          != other.getSizeOfGeneratedCodeInBytes()) return false;
      if (getSizeOfMemoryWorkingSetInBytes()
          != other.getSizeOfMemoryWorkingSetInBytes()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OP_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getOpType().hashCode();
      hash = (37 * hash) + OP_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getOpName().hashCode();
      hash = (37 * hash) + SOURCE_FILE_FIELD_NUMBER;
      hash = (53 * hash) + getSourceFile().hashCode();
      hash = (37 * hash) + SOURCE_LINE_FIELD_NUMBER;
      hash = (53 * hash) + getSourceLine();
      if (getProfileTypeCount() > 0) {
        hash = (37 * hash) + PROFILE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + profileType_.hashCode();
      }
      hash = (37 * hash) + CREATION_PASS_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCreationPassId());
      hash = (37 * hash) + LOGICAL_CREATION_PASS_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getLogicalCreationPassId());
      hash = (37 * hash) + SIZE_OF_GENERATED_CODE_IN_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfGeneratedCodeInBytes());
      hash = (37 * hash) + SIZE_OF_MEMORY_WORKING_SET_IN_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSizeOfMemoryWorkingSetInBytes());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.OpMetadata parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.OpMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.OpMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.OpMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.OpMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.OpMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.OpMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Symbolization metadata for HLO Instructions.
     * This metadata is used for debugging XLA code generation, as well as
     * performance profiling of XLA-generated executables.
     * </pre>
     *
     * Protobuf type {@code xla.OpMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.OpMetadata)
        xla.XlaData.OpMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_OpMetadata_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_OpMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.OpMetadata.class, xla.XlaData.OpMetadata.Builder.class);
      }

      // Construct using xla.XlaData.OpMetadata.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        opType_ = "";
        opName_ = "";
        sourceFile_ = "";
        sourceLine_ = 0;
        profileType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        creationPassId_ = 0L;
        logicalCreationPassId_ = 0L;
        sizeOfGeneratedCodeInBytes_ = 0L;
        sizeOfMemoryWorkingSetInBytes_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_OpMetadata_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.OpMetadata getDefaultInstanceForType() {
        return xla.XlaData.OpMetadata.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.OpMetadata build() {
        xla.XlaData.OpMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.OpMetadata buildPartial() {
        xla.XlaData.OpMetadata result = new xla.XlaData.OpMetadata(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.OpMetadata result) {
        if (((bitField0_ & 0x00000010) != 0)) {
          profileType_ = java.util.Collections.unmodifiableList(profileType_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.profileType_ = profileType_;
      }

      private void buildPartial0(xla.XlaData.OpMetadata result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.opType_ = opType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.opName_ = opName_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sourceFile_ = sourceFile_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.sourceLine_ = sourceLine_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.creationPassId_ = creationPassId_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.logicalCreationPassId_ = logicalCreationPassId_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.sizeOfGeneratedCodeInBytes_ = sizeOfGeneratedCodeInBytes_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.sizeOfMemoryWorkingSetInBytes_ = sizeOfMemoryWorkingSetInBytes_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.OpMetadata) {
          return mergeFrom((xla.XlaData.OpMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.OpMetadata other) {
        if (other == xla.XlaData.OpMetadata.getDefaultInstance()) return this;
        if (!other.getOpType().isEmpty()) {
          opType_ = other.opType_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getOpName().isEmpty()) {
          opName_ = other.opName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getSourceFile().isEmpty()) {
          sourceFile_ = other.sourceFile_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.getSourceLine() != 0) {
          setSourceLine(other.getSourceLine());
        }
        if (!other.profileType_.isEmpty()) {
          if (profileType_.isEmpty()) {
            profileType_ = other.profileType_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureProfileTypeIsMutable();
            profileType_.addAll(other.profileType_);
          }
          onChanged();
        }
        if (other.getCreationPassId() != 0L) {
          setCreationPassId(other.getCreationPassId());
        }
        if (other.getLogicalCreationPassId() != 0L) {
          setLogicalCreationPassId(other.getLogicalCreationPassId());
        }
        if (other.getSizeOfGeneratedCodeInBytes() != 0L) {
          setSizeOfGeneratedCodeInBytes(other.getSizeOfGeneratedCodeInBytes());
        }
        if (other.getSizeOfMemoryWorkingSetInBytes() != 0L) {
          setSizeOfMemoryWorkingSetInBytes(other.getSizeOfMemoryWorkingSetInBytes());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                opType_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                opName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                sourceFile_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                sourceLine_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                int tmpRaw = input.readEnum();
                ensureProfileTypeIsMutable();
                profileType_.add(tmpRaw);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureProfileTypeIsMutable();
                  profileType_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 42
              case 48: {
                creationPassId_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                logicalCreationPassId_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                sizeOfGeneratedCodeInBytes_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                sizeOfMemoryWorkingSetInBytes_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object opType_ = "";
      /**
       * <pre>
       * The framework op name that generated this XLA op.
       * Frameworks that build on top of XLA should mirror the names of their ops
       * back to users by specifying the op_type. In this way, even if the
       * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
       * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
       * multiple ops, then each op should have the op_type be "SoftMax".)
       * </pre>
       *
       * <code>string op_type = 1;</code>
       * @return The opType.
       */
      public java.lang.String getOpType() {
        java.lang.Object ref = opType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          opType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The framework op name that generated this XLA op.
       * Frameworks that build on top of XLA should mirror the names of their ops
       * back to users by specifying the op_type. In this way, even if the
       * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
       * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
       * multiple ops, then each op should have the op_type be "SoftMax".)
       * </pre>
       *
       * <code>string op_type = 1;</code>
       * @return The bytes for opType.
       */
      public com.google.protobuf.ByteString
          getOpTypeBytes() {
        java.lang.Object ref = opType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The framework op name that generated this XLA op.
       * Frameworks that build on top of XLA should mirror the names of their ops
       * back to users by specifying the op_type. In this way, even if the
       * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
       * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
       * multiple ops, then each op should have the op_type be "SoftMax".)
       * </pre>
       *
       * <code>string op_type = 1;</code>
       * @param value The opType to set.
       * @return This builder for chaining.
       */
      public Builder setOpType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        opType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The framework op name that generated this XLA op.
       * Frameworks that build on top of XLA should mirror the names of their ops
       * back to users by specifying the op_type. In this way, even if the
       * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
       * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
       * multiple ops, then each op should have the op_type be "SoftMax".)
       * </pre>
       *
       * <code>string op_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpType() {
        opType_ = getDefaultInstance().getOpType();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The framework op name that generated this XLA op.
       * Frameworks that build on top of XLA should mirror the names of their ops
       * back to users by specifying the op_type. In this way, even if the
       * framework's "ops" are implemented as multiple XLA HLO Ops, they can be
       * grouped appropriately. (e.g. if a SoftMax layer is emitted into XLA as
       * multiple ops, then each op should have the op_type be "SoftMax".)
       * </pre>
       *
       * <code>string op_type = 1;</code>
       * @param value The bytes for opType to set.
       * @return This builder for chaining.
       */
      public Builder setOpTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        opType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object opName_ = "";
      /**
       * <pre>
       * The user-specified name of the op.
       * This name is often unique within a computation. Note: some frameworks
       * add auto-generated names if the user does not provide one.
       * </pre>
       *
       * <code>string op_name = 2;</code>
       * @return The opName.
       */
      public java.lang.String getOpName() {
        java.lang.Object ref = opName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          opName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The user-specified name of the op.
       * This name is often unique within a computation. Note: some frameworks
       * add auto-generated names if the user does not provide one.
       * </pre>
       *
       * <code>string op_name = 2;</code>
       * @return The bytes for opName.
       */
      public com.google.protobuf.ByteString
          getOpNameBytes() {
        java.lang.Object ref = opName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          opName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The user-specified name of the op.
       * This name is often unique within a computation. Note: some frameworks
       * add auto-generated names if the user does not provide one.
       * </pre>
       *
       * <code>string op_name = 2;</code>
       * @param value The opName to set.
       * @return This builder for chaining.
       */
      public Builder setOpName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        opName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user-specified name of the op.
       * This name is often unique within a computation. Note: some frameworks
       * add auto-generated names if the user does not provide one.
       * </pre>
       *
       * <code>string op_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOpName() {
        opName_ = getDefaultInstance().getOpName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The user-specified name of the op.
       * This name is often unique within a computation. Note: some frameworks
       * add auto-generated names if the user does not provide one.
       * </pre>
       *
       * <code>string op_name = 2;</code>
       * @param value The bytes for opName to set.
       * @return This builder for chaining.
       */
      public Builder setOpNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        opName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object sourceFile_ = "";
      /**
       * <pre>
       * Indicate a file and line that this op is associated to in a user's program.
       * e.g. it could be the file and line of user code that generated the op.
       * </pre>
       *
       * <code>string source_file = 3;</code>
       * @return The sourceFile.
       */
      public java.lang.String getSourceFile() {
        java.lang.Object ref = sourceFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sourceFile_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Indicate a file and line that this op is associated to in a user's program.
       * e.g. it could be the file and line of user code that generated the op.
       * </pre>
       *
       * <code>string source_file = 3;</code>
       * @return The bytes for sourceFile.
       */
      public com.google.protobuf.ByteString
          getSourceFileBytes() {
        java.lang.Object ref = sourceFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sourceFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Indicate a file and line that this op is associated to in a user's program.
       * e.g. it could be the file and line of user code that generated the op.
       * </pre>
       *
       * <code>string source_file = 3;</code>
       * @param value The sourceFile to set.
       * @return This builder for chaining.
       */
      public Builder setSourceFile(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        sourceFile_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicate a file and line that this op is associated to in a user's program.
       * e.g. it could be the file and line of user code that generated the op.
       * </pre>
       *
       * <code>string source_file = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceFile() {
        sourceFile_ = getDefaultInstance().getSourceFile();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicate a file and line that this op is associated to in a user's program.
       * e.g. it could be the file and line of user code that generated the op.
       * </pre>
       *
       * <code>string source_file = 3;</code>
       * @param value The bytes for sourceFile to set.
       * @return This builder for chaining.
       */
      public Builder setSourceFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        sourceFile_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int sourceLine_ ;
      /**
       * <code>int32 source_line = 4;</code>
       * @return The sourceLine.
       */
      @java.lang.Override
      public int getSourceLine() {
        return sourceLine_;
      }
      /**
       * <code>int32 source_line = 4;</code>
       * @param value The sourceLine to set.
       * @return This builder for chaining.
       */
      public Builder setSourceLine(int value) {
        
        sourceLine_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 source_line = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSourceLine() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sourceLine_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> profileType_ =
        java.util.Collections.emptyList();
      private void ensureProfileTypeIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          profileType_ = new java.util.ArrayList<java.lang.Integer>(profileType_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @return A list containing the profileType.
       */
      public java.util.List<xla.XlaData.ProfileType> getProfileTypeList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, xla.XlaData.ProfileType>(profileType_, profileType_converter_);
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @return The count of profileType.
       */
      public int getProfileTypeCount() {
        return profileType_.size();
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param index The index of the element to return.
       * @return The profileType at the given index.
       */
      public xla.XlaData.ProfileType getProfileType(int index) {
        return profileType_converter_.convert(profileType_.get(index));
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param index The index to set the value at.
       * @param value The profileType to set.
       * @return This builder for chaining.
       */
      public Builder setProfileType(
          int index, xla.XlaData.ProfileType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfileTypeIsMutable();
        profileType_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param value The profileType to add.
       * @return This builder for chaining.
       */
      public Builder addProfileType(xla.XlaData.ProfileType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProfileTypeIsMutable();
        profileType_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param values The profileType to add.
       * @return This builder for chaining.
       */
      public Builder addAllProfileType(
          java.lang.Iterable<? extends xla.XlaData.ProfileType> values) {
        ensureProfileTypeIsMutable();
        for (xla.XlaData.ProfileType value : values) {
          profileType_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearProfileType() {
        profileType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @return A list containing the enum numeric values on the wire for profileType.
       */
      public java.util.List<java.lang.Integer>
      getProfileTypeValueList() {
        return java.util.Collections.unmodifiableList(profileType_);
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of profileType at the given index.
       */
      public int getProfileTypeValue(int index) {
        return profileType_.get(index);
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for profileType to set.
       * @return This builder for chaining.
       */
      public Builder setProfileTypeValue(
          int index, int value) {
        ensureProfileTypeIsMutable();
        profileType_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param value The enum numeric value on the wire for profileType to add.
       * @return This builder for chaining.
       */
      public Builder addProfileTypeValue(int value) {
        ensureProfileTypeIsMutable();
        profileType_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.ProfileType profile_type = 5;</code>
       * @param values The enum numeric values on the wire for profileType to add.
       * @return This builder for chaining.
       */
      public Builder addAllProfileTypeValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureProfileTypeIsMutable();
        for (int value : values) {
          profileType_.add(value);
        }
        onChanged();
        return this;
      }

      private long creationPassId_ ;
      /**
       * <pre>
       * HloPassMetadata.pass_id of the pass that created this HLO instruction
       * object. Should never be copied between HLO instructions. Zero if unset and
       * -1 if the instruction was created before HLO passes began.
       * </pre>
       *
       * <code>int64 creation_pass_id = 6;</code>
       * @return The creationPassId.
       */
      @java.lang.Override
      public long getCreationPassId() {
        return creationPassId_;
      }
      /**
       * <pre>
       * HloPassMetadata.pass_id of the pass that created this HLO instruction
       * object. Should never be copied between HLO instructions. Zero if unset and
       * -1 if the instruction was created before HLO passes began.
       * </pre>
       *
       * <code>int64 creation_pass_id = 6;</code>
       * @param value The creationPassId to set.
       * @return This builder for chaining.
       */
      public Builder setCreationPassId(long value) {
        
        creationPassId_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HloPassMetadata.pass_id of the pass that created this HLO instruction
       * object. Should never be copied between HLO instructions. Zero if unset and
       * -1 if the instruction was created before HLO passes began.
       * </pre>
       *
       * <code>int64 creation_pass_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreationPassId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        creationPassId_ = 0L;
        onChanged();
        return this;
      }

      private long logicalCreationPassId_ ;
      /**
       * <pre>
       * HloPassMetadata.pass_id of the pass that created the logical functionality
       * that this HLO instruction represents. Should be copied between HLO
       * instructions that correspond across compilation passes. Zero if unset and
       * -1 if the instruction was created before HLO passes began.
       * </pre>
       *
       * <code>int64 logical_creation_pass_id = 7;</code>
       * @return The logicalCreationPassId.
       */
      @java.lang.Override
      public long getLogicalCreationPassId() {
        return logicalCreationPassId_;
      }
      /**
       * <pre>
       * HloPassMetadata.pass_id of the pass that created the logical functionality
       * that this HLO instruction represents. Should be copied between HLO
       * instructions that correspond across compilation passes. Zero if unset and
       * -1 if the instruction was created before HLO passes began.
       * </pre>
       *
       * <code>int64 logical_creation_pass_id = 7;</code>
       * @param value The logicalCreationPassId to set.
       * @return This builder for chaining.
       */
      public Builder setLogicalCreationPassId(long value) {
        
        logicalCreationPassId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * HloPassMetadata.pass_id of the pass that created the logical functionality
       * that this HLO instruction represents. Should be copied between HLO
       * instructions that correspond across compilation passes. Zero if unset and
       * -1 if the instruction was created before HLO passes began.
       * </pre>
       *
       * <code>int64 logical_creation_pass_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogicalCreationPassId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        logicalCreationPassId_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfGeneratedCodeInBytes_ ;
      /**
       * <pre>
       * The footprint of the generated code for the instruction.
       * </pre>
       *
       * <code>int64 size_of_generated_code_in_bytes = 8;</code>
       * @return The sizeOfGeneratedCodeInBytes.
       */
      @java.lang.Override
      public long getSizeOfGeneratedCodeInBytes() {
        return sizeOfGeneratedCodeInBytes_;
      }
      /**
       * <pre>
       * The footprint of the generated code for the instruction.
       * </pre>
       *
       * <code>int64 size_of_generated_code_in_bytes = 8;</code>
       * @param value The sizeOfGeneratedCodeInBytes to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfGeneratedCodeInBytes(long value) {
        
        sizeOfGeneratedCodeInBytes_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The footprint of the generated code for the instruction.
       * </pre>
       *
       * <code>int64 size_of_generated_code_in_bytes = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfGeneratedCodeInBytes() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sizeOfGeneratedCodeInBytes_ = 0L;
        onChanged();
        return this;
      }

      private long sizeOfMemoryWorkingSetInBytes_ ;
      /**
       * <pre>
       * The size of the working set, i.e., the amount of memory, used by the
       * instruction in a compiler-managed fast device memory.
       * </pre>
       *
       * <code>int64 size_of_memory_working_set_in_bytes = 9;</code>
       * @return The sizeOfMemoryWorkingSetInBytes.
       */
      @java.lang.Override
      public long getSizeOfMemoryWorkingSetInBytes() {
        return sizeOfMemoryWorkingSetInBytes_;
      }
      /**
       * <pre>
       * The size of the working set, i.e., the amount of memory, used by the
       * instruction in a compiler-managed fast device memory.
       * </pre>
       *
       * <code>int64 size_of_memory_working_set_in_bytes = 9;</code>
       * @param value The sizeOfMemoryWorkingSetInBytes to set.
       * @return This builder for chaining.
       */
      public Builder setSizeOfMemoryWorkingSetInBytes(long value) {
        
        sizeOfMemoryWorkingSetInBytes_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of the working set, i.e., the amount of memory, used by the
       * instruction in a compiler-managed fast device memory.
       * </pre>
       *
       * <code>int64 size_of_memory_working_set_in_bytes = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSizeOfMemoryWorkingSetInBytes() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sizeOfMemoryWorkingSetInBytes_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.OpMetadata)
    }

    // @@protoc_insertion_point(class_scope:xla.OpMetadata)
    private static final xla.XlaData.OpMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.OpMetadata();
    }

    public static xla.XlaData.OpMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OpMetadata>
        PARSER = new com.google.protobuf.AbstractParser<OpMetadata>() {
      @java.lang.Override
      public OpMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OpMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OpMetadata> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.OpMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExecutionProfileOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ExecutionProfile)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Whether the executable was read from the compilation cache.
     * </pre>
     *
     * <code>bool compilation_cache_hit = 1;</code>
     * @return The compilationCacheHit.
     */
    boolean getCompilationCacheHit();

    /**
     * <pre>
     * The time in milliseconds spent to compile the computation. This only set if
     * the executable was not read from the compilation cache
     * (compilation_cache_hit == false).
     * </pre>
     *
     * <code>int64 compile_time_ms = 2;</code>
     * @return The compileTimeMs.
     */
    long getCompileTimeMs();

    /**
     * <pre>
     * The number of cycles spent for the computation. This does not include the
     * time taken for the data transfers between the host and the device. This is
     * a target-dependent field and only used for debugging purposes.
     * </pre>
     *
     * <code>int64 compute_cycle_count = 3;</code>
     * @return The computeCycleCount.
     */
    long getComputeCycleCount();

    /**
     * <pre>
     * The time in nanoseconds spent for the computation, without data transfer.
     * </pre>
     *
     * <code>int64 compute_time_ns = 4;</code>
     * @return The computeTimeNs.
     */
    long getComputeTimeNs();

    /**
     * <pre>
     * The time in nanoseconds spent for the entire computation, including the
     * result data transfer time. Current implementation does not spend any cycles
     * for the input data transfer since the memory is initialized with the proper
     * values before the execution.
     * </pre>
     *
     * <code>int64 compute_and_transfer_time_ns = 5;</code>
     * @return The computeAndTransferTimeNs.
     */
    long getComputeAndTransferTimeNs();

    /**
     * <pre>
     * The size of the binary code in the executable.
     * </pre>
     *
     * <code>int64 executable_size_in_bytes = 6;</code>
     * @return The executableSizeInBytes.
     */
    long getExecutableSizeInBytes();

    /**
     * <pre>
     * Whether this profile was drawn from a cache of profiles instead of from
     * execution on the hardware.
     * </pre>
     *
     * <code>bool profile_cache_hit = 7;</code>
     * @return The profileCacheHit.
     */
    boolean getProfileCacheHit();
  }
  /**
   * <pre>
   * Profile data from the execution of a computation.
   * </pre>
   *
   * Protobuf type {@code xla.ExecutionProfile}
   */
  public static final class ExecutionProfile extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ExecutionProfile)
      ExecutionProfileOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExecutionProfile.newBuilder() to construct.
    private ExecutionProfile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExecutionProfile() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExecutionProfile();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ExecutionProfile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ExecutionProfile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ExecutionProfile.class, xla.XlaData.ExecutionProfile.Builder.class);
    }

    public static final int COMPILATION_CACHE_HIT_FIELD_NUMBER = 1;
    private boolean compilationCacheHit_ = false;
    /**
     * <pre>
     * Whether the executable was read from the compilation cache.
     * </pre>
     *
     * <code>bool compilation_cache_hit = 1;</code>
     * @return The compilationCacheHit.
     */
    @java.lang.Override
    public boolean getCompilationCacheHit() {
      return compilationCacheHit_;
    }

    public static final int COMPILE_TIME_MS_FIELD_NUMBER = 2;
    private long compileTimeMs_ = 0L;
    /**
     * <pre>
     * The time in milliseconds spent to compile the computation. This only set if
     * the executable was not read from the compilation cache
     * (compilation_cache_hit == false).
     * </pre>
     *
     * <code>int64 compile_time_ms = 2;</code>
     * @return The compileTimeMs.
     */
    @java.lang.Override
    public long getCompileTimeMs() {
      return compileTimeMs_;
    }

    public static final int COMPUTE_CYCLE_COUNT_FIELD_NUMBER = 3;
    private long computeCycleCount_ = 0L;
    /**
     * <pre>
     * The number of cycles spent for the computation. This does not include the
     * time taken for the data transfers between the host and the device. This is
     * a target-dependent field and only used for debugging purposes.
     * </pre>
     *
     * <code>int64 compute_cycle_count = 3;</code>
     * @return The computeCycleCount.
     */
    @java.lang.Override
    public long getComputeCycleCount() {
      return computeCycleCount_;
    }

    public static final int COMPUTE_TIME_NS_FIELD_NUMBER = 4;
    private long computeTimeNs_ = 0L;
    /**
     * <pre>
     * The time in nanoseconds spent for the computation, without data transfer.
     * </pre>
     *
     * <code>int64 compute_time_ns = 4;</code>
     * @return The computeTimeNs.
     */
    @java.lang.Override
    public long getComputeTimeNs() {
      return computeTimeNs_;
    }

    public static final int COMPUTE_AND_TRANSFER_TIME_NS_FIELD_NUMBER = 5;
    private long computeAndTransferTimeNs_ = 0L;
    /**
     * <pre>
     * The time in nanoseconds spent for the entire computation, including the
     * result data transfer time. Current implementation does not spend any cycles
     * for the input data transfer since the memory is initialized with the proper
     * values before the execution.
     * </pre>
     *
     * <code>int64 compute_and_transfer_time_ns = 5;</code>
     * @return The computeAndTransferTimeNs.
     */
    @java.lang.Override
    public long getComputeAndTransferTimeNs() {
      return computeAndTransferTimeNs_;
    }

    public static final int EXECUTABLE_SIZE_IN_BYTES_FIELD_NUMBER = 6;
    private long executableSizeInBytes_ = 0L;
    /**
     * <pre>
     * The size of the binary code in the executable.
     * </pre>
     *
     * <code>int64 executable_size_in_bytes = 6;</code>
     * @return The executableSizeInBytes.
     */
    @java.lang.Override
    public long getExecutableSizeInBytes() {
      return executableSizeInBytes_;
    }

    public static final int PROFILE_CACHE_HIT_FIELD_NUMBER = 7;
    private boolean profileCacheHit_ = false;
    /**
     * <pre>
     * Whether this profile was drawn from a cache of profiles instead of from
     * execution on the hardware.
     * </pre>
     *
     * <code>bool profile_cache_hit = 7;</code>
     * @return The profileCacheHit.
     */
    @java.lang.Override
    public boolean getProfileCacheHit() {
      return profileCacheHit_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (compilationCacheHit_ != false) {
        output.writeBool(1, compilationCacheHit_);
      }
      if (compileTimeMs_ != 0L) {
        output.writeInt64(2, compileTimeMs_);
      }
      if (computeCycleCount_ != 0L) {
        output.writeInt64(3, computeCycleCount_);
      }
      if (computeTimeNs_ != 0L) {
        output.writeInt64(4, computeTimeNs_);
      }
      if (computeAndTransferTimeNs_ != 0L) {
        output.writeInt64(5, computeAndTransferTimeNs_);
      }
      if (executableSizeInBytes_ != 0L) {
        output.writeInt64(6, executableSizeInBytes_);
      }
      if (profileCacheHit_ != false) {
        output.writeBool(7, profileCacheHit_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (compilationCacheHit_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, compilationCacheHit_);
      }
      if (compileTimeMs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, compileTimeMs_);
      }
      if (computeCycleCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, computeCycleCount_);
      }
      if (computeTimeNs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, computeTimeNs_);
      }
      if (computeAndTransferTimeNs_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, computeAndTransferTimeNs_);
      }
      if (executableSizeInBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, executableSizeInBytes_);
      }
      if (profileCacheHit_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, profileCacheHit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ExecutionProfile)) {
        return super.equals(obj);
      }
      xla.XlaData.ExecutionProfile other = (xla.XlaData.ExecutionProfile) obj;

      if (getCompilationCacheHit()
          != other.getCompilationCacheHit()) return false;
      if (getCompileTimeMs()
          != other.getCompileTimeMs()) return false;
      if (getComputeCycleCount()
          != other.getComputeCycleCount()) return false;
      if (getComputeTimeNs()
          != other.getComputeTimeNs()) return false;
      if (getComputeAndTransferTimeNs()
          != other.getComputeAndTransferTimeNs()) return false;
      if (getExecutableSizeInBytes()
          != other.getExecutableSizeInBytes()) return false;
      if (getProfileCacheHit()
          != other.getProfileCacheHit()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COMPILATION_CACHE_HIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCompilationCacheHit());
      hash = (37 * hash) + COMPILE_TIME_MS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCompileTimeMs());
      hash = (37 * hash) + COMPUTE_CYCLE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getComputeCycleCount());
      hash = (37 * hash) + COMPUTE_TIME_NS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getComputeTimeNs());
      hash = (37 * hash) + COMPUTE_AND_TRANSFER_TIME_NS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getComputeAndTransferTimeNs());
      hash = (37 * hash) + EXECUTABLE_SIZE_IN_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecutableSizeInBytes());
      hash = (37 * hash) + PROFILE_CACHE_HIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getProfileCacheHit());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ExecutionProfile parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ExecutionProfile parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ExecutionProfile parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ExecutionProfile parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ExecutionProfile prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Profile data from the execution of a computation.
     * </pre>
     *
     * Protobuf type {@code xla.ExecutionProfile}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ExecutionProfile)
        xla.XlaData.ExecutionProfileOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ExecutionProfile_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ExecutionProfile_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ExecutionProfile.class, xla.XlaData.ExecutionProfile.Builder.class);
      }

      // Construct using xla.XlaData.ExecutionProfile.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        compilationCacheHit_ = false;
        compileTimeMs_ = 0L;
        computeCycleCount_ = 0L;
        computeTimeNs_ = 0L;
        computeAndTransferTimeNs_ = 0L;
        executableSizeInBytes_ = 0L;
        profileCacheHit_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ExecutionProfile_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ExecutionProfile getDefaultInstanceForType() {
        return xla.XlaData.ExecutionProfile.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ExecutionProfile build() {
        xla.XlaData.ExecutionProfile result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ExecutionProfile buildPartial() {
        xla.XlaData.ExecutionProfile result = new xla.XlaData.ExecutionProfile(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.ExecutionProfile result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.compilationCacheHit_ = compilationCacheHit_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.compileTimeMs_ = compileTimeMs_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.computeCycleCount_ = computeCycleCount_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.computeTimeNs_ = computeTimeNs_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.computeAndTransferTimeNs_ = computeAndTransferTimeNs_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.executableSizeInBytes_ = executableSizeInBytes_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.profileCacheHit_ = profileCacheHit_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ExecutionProfile) {
          return mergeFrom((xla.XlaData.ExecutionProfile)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ExecutionProfile other) {
        if (other == xla.XlaData.ExecutionProfile.getDefaultInstance()) return this;
        if (other.getCompilationCacheHit() != false) {
          setCompilationCacheHit(other.getCompilationCacheHit());
        }
        if (other.getCompileTimeMs() != 0L) {
          setCompileTimeMs(other.getCompileTimeMs());
        }
        if (other.getComputeCycleCount() != 0L) {
          setComputeCycleCount(other.getComputeCycleCount());
        }
        if (other.getComputeTimeNs() != 0L) {
          setComputeTimeNs(other.getComputeTimeNs());
        }
        if (other.getComputeAndTransferTimeNs() != 0L) {
          setComputeAndTransferTimeNs(other.getComputeAndTransferTimeNs());
        }
        if (other.getExecutableSizeInBytes() != 0L) {
          setExecutableSizeInBytes(other.getExecutableSizeInBytes());
        }
        if (other.getProfileCacheHit() != false) {
          setProfileCacheHit(other.getProfileCacheHit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                compilationCacheHit_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                compileTimeMs_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                computeCycleCount_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                computeTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                computeAndTransferTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                executableSizeInBytes_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                profileCacheHit_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean compilationCacheHit_ ;
      /**
       * <pre>
       * Whether the executable was read from the compilation cache.
       * </pre>
       *
       * <code>bool compilation_cache_hit = 1;</code>
       * @return The compilationCacheHit.
       */
      @java.lang.Override
      public boolean getCompilationCacheHit() {
        return compilationCacheHit_;
      }
      /**
       * <pre>
       * Whether the executable was read from the compilation cache.
       * </pre>
       *
       * <code>bool compilation_cache_hit = 1;</code>
       * @param value The compilationCacheHit to set.
       * @return This builder for chaining.
       */
      public Builder setCompilationCacheHit(boolean value) {
        
        compilationCacheHit_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the executable was read from the compilation cache.
       * </pre>
       *
       * <code>bool compilation_cache_hit = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompilationCacheHit() {
        bitField0_ = (bitField0_ & ~0x00000001);
        compilationCacheHit_ = false;
        onChanged();
        return this;
      }

      private long compileTimeMs_ ;
      /**
       * <pre>
       * The time in milliseconds spent to compile the computation. This only set if
       * the executable was not read from the compilation cache
       * (compilation_cache_hit == false).
       * </pre>
       *
       * <code>int64 compile_time_ms = 2;</code>
       * @return The compileTimeMs.
       */
      @java.lang.Override
      public long getCompileTimeMs() {
        return compileTimeMs_;
      }
      /**
       * <pre>
       * The time in milliseconds spent to compile the computation. This only set if
       * the executable was not read from the compilation cache
       * (compilation_cache_hit == false).
       * </pre>
       *
       * <code>int64 compile_time_ms = 2;</code>
       * @param value The compileTimeMs to set.
       * @return This builder for chaining.
       */
      public Builder setCompileTimeMs(long value) {
        
        compileTimeMs_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time in milliseconds spent to compile the computation. This only set if
       * the executable was not read from the compilation cache
       * (compilation_cache_hit == false).
       * </pre>
       *
       * <code>int64 compile_time_ms = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCompileTimeMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        compileTimeMs_ = 0L;
        onChanged();
        return this;
      }

      private long computeCycleCount_ ;
      /**
       * <pre>
       * The number of cycles spent for the computation. This does not include the
       * time taken for the data transfers between the host and the device. This is
       * a target-dependent field and only used for debugging purposes.
       * </pre>
       *
       * <code>int64 compute_cycle_count = 3;</code>
       * @return The computeCycleCount.
       */
      @java.lang.Override
      public long getComputeCycleCount() {
        return computeCycleCount_;
      }
      /**
       * <pre>
       * The number of cycles spent for the computation. This does not include the
       * time taken for the data transfers between the host and the device. This is
       * a target-dependent field and only used for debugging purposes.
       * </pre>
       *
       * <code>int64 compute_cycle_count = 3;</code>
       * @param value The computeCycleCount to set.
       * @return This builder for chaining.
       */
      public Builder setComputeCycleCount(long value) {
        
        computeCycleCount_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of cycles spent for the computation. This does not include the
       * time taken for the data transfers between the host and the device. This is
       * a target-dependent field and only used for debugging purposes.
       * </pre>
       *
       * <code>int64 compute_cycle_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearComputeCycleCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        computeCycleCount_ = 0L;
        onChanged();
        return this;
      }

      private long computeTimeNs_ ;
      /**
       * <pre>
       * The time in nanoseconds spent for the computation, without data transfer.
       * </pre>
       *
       * <code>int64 compute_time_ns = 4;</code>
       * @return The computeTimeNs.
       */
      @java.lang.Override
      public long getComputeTimeNs() {
        return computeTimeNs_;
      }
      /**
       * <pre>
       * The time in nanoseconds spent for the computation, without data transfer.
       * </pre>
       *
       * <code>int64 compute_time_ns = 4;</code>
       * @param value The computeTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setComputeTimeNs(long value) {
        
        computeTimeNs_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time in nanoseconds spent for the computation, without data transfer.
       * </pre>
       *
       * <code>int64 compute_time_ns = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearComputeTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        computeTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long computeAndTransferTimeNs_ ;
      /**
       * <pre>
       * The time in nanoseconds spent for the entire computation, including the
       * result data transfer time. Current implementation does not spend any cycles
       * for the input data transfer since the memory is initialized with the proper
       * values before the execution.
       * </pre>
       *
       * <code>int64 compute_and_transfer_time_ns = 5;</code>
       * @return The computeAndTransferTimeNs.
       */
      @java.lang.Override
      public long getComputeAndTransferTimeNs() {
        return computeAndTransferTimeNs_;
      }
      /**
       * <pre>
       * The time in nanoseconds spent for the entire computation, including the
       * result data transfer time. Current implementation does not spend any cycles
       * for the input data transfer since the memory is initialized with the proper
       * values before the execution.
       * </pre>
       *
       * <code>int64 compute_and_transfer_time_ns = 5;</code>
       * @param value The computeAndTransferTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setComputeAndTransferTimeNs(long value) {
        
        computeAndTransferTimeNs_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time in nanoseconds spent for the entire computation, including the
       * result data transfer time. Current implementation does not spend any cycles
       * for the input data transfer since the memory is initialized with the proper
       * values before the execution.
       * </pre>
       *
       * <code>int64 compute_and_transfer_time_ns = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearComputeAndTransferTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000010);
        computeAndTransferTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long executableSizeInBytes_ ;
      /**
       * <pre>
       * The size of the binary code in the executable.
       * </pre>
       *
       * <code>int64 executable_size_in_bytes = 6;</code>
       * @return The executableSizeInBytes.
       */
      @java.lang.Override
      public long getExecutableSizeInBytes() {
        return executableSizeInBytes_;
      }
      /**
       * <pre>
       * The size of the binary code in the executable.
       * </pre>
       *
       * <code>int64 executable_size_in_bytes = 6;</code>
       * @param value The executableSizeInBytes to set.
       * @return This builder for chaining.
       */
      public Builder setExecutableSizeInBytes(long value) {
        
        executableSizeInBytes_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of the binary code in the executable.
       * </pre>
       *
       * <code>int64 executable_size_in_bytes = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearExecutableSizeInBytes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        executableSizeInBytes_ = 0L;
        onChanged();
        return this;
      }

      private boolean profileCacheHit_ ;
      /**
       * <pre>
       * Whether this profile was drawn from a cache of profiles instead of from
       * execution on the hardware.
       * </pre>
       *
       * <code>bool profile_cache_hit = 7;</code>
       * @return The profileCacheHit.
       */
      @java.lang.Override
      public boolean getProfileCacheHit() {
        return profileCacheHit_;
      }
      /**
       * <pre>
       * Whether this profile was drawn from a cache of profiles instead of from
       * execution on the hardware.
       * </pre>
       *
       * <code>bool profile_cache_hit = 7;</code>
       * @param value The profileCacheHit to set.
       * @return This builder for chaining.
       */
      public Builder setProfileCacheHit(boolean value) {
        
        profileCacheHit_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this profile was drawn from a cache of profiles instead of from
       * execution on the hardware.
       * </pre>
       *
       * <code>bool profile_cache_hit = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearProfileCacheHit() {
        bitField0_ = (bitField0_ & ~0x00000040);
        profileCacheHit_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ExecutionProfile)
    }

    // @@protoc_insertion_point(class_scope:xla.ExecutionProfile)
    private static final xla.XlaData.ExecutionProfile DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ExecutionProfile();
    }

    public static xla.XlaData.ExecutionProfile getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExecutionProfile>
        PARSER = new com.google.protobuf.AbstractParser<ExecutionProfile>() {
      @java.lang.Override
      public ExecutionProfile parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ExecutionProfile> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExecutionProfile> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ExecutionProfile getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExecutionHandleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ExecutionHandle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    long getHandle();
  }
  /**
   * <pre>
   * Handle given to a user that represents an execution that the user launched
   * asynchronously on the device.
   * </pre>
   *
   * Protobuf type {@code xla.ExecutionHandle}
   */
  public static final class ExecutionHandle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ExecutionHandle)
      ExecutionHandleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExecutionHandle.newBuilder() to construct.
    private ExecutionHandle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExecutionHandle() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExecutionHandle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ExecutionHandle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ExecutionHandle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ExecutionHandle.class, xla.XlaData.ExecutionHandle.Builder.class);
    }

    public static final int HANDLE_FIELD_NUMBER = 1;
    private long handle_ = 0L;
    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    @java.lang.Override
    public long getHandle() {
      return handle_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (handle_ != 0L) {
        output.writeInt64(1, handle_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (handle_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, handle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ExecutionHandle)) {
        return super.equals(obj);
      }
      xla.XlaData.ExecutionHandle other = (xla.XlaData.ExecutionHandle) obj;

      if (getHandle()
          != other.getHandle()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HANDLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHandle());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ExecutionHandle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ExecutionHandle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ExecutionHandle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ExecutionHandle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ExecutionHandle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Handle given to a user that represents an execution that the user launched
     * asynchronously on the device.
     * </pre>
     *
     * Protobuf type {@code xla.ExecutionHandle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ExecutionHandle)
        xla.XlaData.ExecutionHandleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ExecutionHandle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ExecutionHandle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ExecutionHandle.class, xla.XlaData.ExecutionHandle.Builder.class);
      }

      // Construct using xla.XlaData.ExecutionHandle.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        handle_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ExecutionHandle_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ExecutionHandle getDefaultInstanceForType() {
        return xla.XlaData.ExecutionHandle.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ExecutionHandle build() {
        xla.XlaData.ExecutionHandle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ExecutionHandle buildPartial() {
        xla.XlaData.ExecutionHandle result = new xla.XlaData.ExecutionHandle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.ExecutionHandle result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.handle_ = handle_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ExecutionHandle) {
          return mergeFrom((xla.XlaData.ExecutionHandle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ExecutionHandle other) {
        if (other == xla.XlaData.ExecutionHandle.getDefaultInstance()) return this;
        if (other.getHandle() != 0L) {
          setHandle(other.getHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                handle_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long handle_ ;
      /**
       * <code>int64 handle = 1;</code>
       * @return The handle.
       */
      @java.lang.Override
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @param value The handle to set.
       * @return This builder for chaining.
       */
      public Builder setHandle(long value) {
        
        handle_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ExecutionHandle)
    }

    // @@protoc_insertion_point(class_scope:xla.ExecutionHandle)
    private static final xla.XlaData.ExecutionHandle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ExecutionHandle();
    }

    public static xla.XlaData.ExecutionHandle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExecutionHandle>
        PARSER = new com.google.protobuf.AbstractParser<ExecutionHandle>() {
      @java.lang.Override
      public ExecutionHandle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ExecutionHandle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExecutionHandle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ExecutionHandle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GlobalDataHandleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.GlobalDataHandle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    long getHandle();
  }
  /**
   * <pre>
   * Handle given to a user that represents a globally accessible allocation.
   * Contrast this against a ComputationDataHandle, which is not globally
   * accessible, since it only exists within a specific computation.
   * </pre>
   *
   * Protobuf type {@code xla.GlobalDataHandle}
   */
  public static final class GlobalDataHandle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.GlobalDataHandle)
      GlobalDataHandleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GlobalDataHandle.newBuilder() to construct.
    private GlobalDataHandle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GlobalDataHandle() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GlobalDataHandle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_GlobalDataHandle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_GlobalDataHandle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.GlobalDataHandle.class, xla.XlaData.GlobalDataHandle.Builder.class);
    }

    public static final int HANDLE_FIELD_NUMBER = 1;
    private long handle_ = 0L;
    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    @java.lang.Override
    public long getHandle() {
      return handle_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (handle_ != 0L) {
        output.writeInt64(1, handle_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (handle_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, handle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.GlobalDataHandle)) {
        return super.equals(obj);
      }
      xla.XlaData.GlobalDataHandle other = (xla.XlaData.GlobalDataHandle) obj;

      if (getHandle()
          != other.getHandle()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HANDLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHandle());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.GlobalDataHandle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.GlobalDataHandle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.GlobalDataHandle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.GlobalDataHandle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.GlobalDataHandle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Handle given to a user that represents a globally accessible allocation.
     * Contrast this against a ComputationDataHandle, which is not globally
     * accessible, since it only exists within a specific computation.
     * </pre>
     *
     * Protobuf type {@code xla.GlobalDataHandle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.GlobalDataHandle)
        xla.XlaData.GlobalDataHandleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_GlobalDataHandle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_GlobalDataHandle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.GlobalDataHandle.class, xla.XlaData.GlobalDataHandle.Builder.class);
      }

      // Construct using xla.XlaData.GlobalDataHandle.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        handle_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_GlobalDataHandle_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.GlobalDataHandle getDefaultInstanceForType() {
        return xla.XlaData.GlobalDataHandle.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.GlobalDataHandle build() {
        xla.XlaData.GlobalDataHandle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.GlobalDataHandle buildPartial() {
        xla.XlaData.GlobalDataHandle result = new xla.XlaData.GlobalDataHandle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.GlobalDataHandle result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.handle_ = handle_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.GlobalDataHandle) {
          return mergeFrom((xla.XlaData.GlobalDataHandle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.GlobalDataHandle other) {
        if (other == xla.XlaData.GlobalDataHandle.getDefaultInstance()) return this;
        if (other.getHandle() != 0L) {
          setHandle(other.getHandle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                handle_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long handle_ ;
      /**
       * <code>int64 handle = 1;</code>
       * @return The handle.
       */
      @java.lang.Override
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @param value The handle to set.
       * @return This builder for chaining.
       */
      public Builder setHandle(long value) {
        
        handle_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.GlobalDataHandle)
    }

    // @@protoc_insertion_point(class_scope:xla.GlobalDataHandle)
    private static final xla.XlaData.GlobalDataHandle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.GlobalDataHandle();
    }

    public static xla.XlaData.GlobalDataHandle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GlobalDataHandle>
        PARSER = new com.google.protobuf.AbstractParser<GlobalDataHandle>() {
      @java.lang.Override
      public GlobalDataHandle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GlobalDataHandle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GlobalDataHandle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.GlobalDataHandle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceHandleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.DeviceHandle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    long getHandle();

    /**
     * <pre>
     * The number of model-parallel virtual devices that communicate via XLA
     * Send/Recv instructions.
     * </pre>
     *
     * <code>int64 device_count = 2;</code>
     * @return The deviceCount.
     */
    long getDeviceCount();
  }
  /**
   * <pre>
   * Handle given to a user that represents a replicated virtual device. Each
   * replicated device represents N physical devices for execution where N is the
   * number of replicas.
   * </pre>
   *
   * Protobuf type {@code xla.DeviceHandle}
   */
  public static final class DeviceHandle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.DeviceHandle)
      DeviceHandleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceHandle.newBuilder() to construct.
    private DeviceHandle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceHandle() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceHandle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_DeviceHandle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_DeviceHandle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.DeviceHandle.class, xla.XlaData.DeviceHandle.Builder.class);
    }

    public static final int HANDLE_FIELD_NUMBER = 1;
    private long handle_ = 0L;
    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    @java.lang.Override
    public long getHandle() {
      return handle_;
    }

    public static final int DEVICE_COUNT_FIELD_NUMBER = 2;
    private long deviceCount_ = 0L;
    /**
     * <pre>
     * The number of model-parallel virtual devices that communicate via XLA
     * Send/Recv instructions.
     * </pre>
     *
     * <code>int64 device_count = 2;</code>
     * @return The deviceCount.
     */
    @java.lang.Override
    public long getDeviceCount() {
      return deviceCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (handle_ != 0L) {
        output.writeInt64(1, handle_);
      }
      if (deviceCount_ != 0L) {
        output.writeInt64(2, deviceCount_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (handle_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, handle_);
      }
      if (deviceCount_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, deviceCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.DeviceHandle)) {
        return super.equals(obj);
      }
      xla.XlaData.DeviceHandle other = (xla.XlaData.DeviceHandle) obj;

      if (getHandle()
          != other.getHandle()) return false;
      if (getDeviceCount()
          != other.getDeviceCount()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HANDLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHandle());
      hash = (37 * hash) + DEVICE_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getDeviceCount());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.DeviceHandle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DeviceHandle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DeviceHandle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.DeviceHandle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.DeviceHandle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.DeviceHandle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.DeviceHandle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Handle given to a user that represents a replicated virtual device. Each
     * replicated device represents N physical devices for execution where N is the
     * number of replicas.
     * </pre>
     *
     * Protobuf type {@code xla.DeviceHandle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.DeviceHandle)
        xla.XlaData.DeviceHandleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_DeviceHandle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_DeviceHandle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.DeviceHandle.class, xla.XlaData.DeviceHandle.Builder.class);
      }

      // Construct using xla.XlaData.DeviceHandle.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        handle_ = 0L;
        deviceCount_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_DeviceHandle_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.DeviceHandle getDefaultInstanceForType() {
        return xla.XlaData.DeviceHandle.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.DeviceHandle build() {
        xla.XlaData.DeviceHandle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.DeviceHandle buildPartial() {
        xla.XlaData.DeviceHandle result = new xla.XlaData.DeviceHandle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.DeviceHandle result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.handle_ = handle_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.deviceCount_ = deviceCount_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.DeviceHandle) {
          return mergeFrom((xla.XlaData.DeviceHandle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.DeviceHandle other) {
        if (other == xla.XlaData.DeviceHandle.getDefaultInstance()) return this;
        if (other.getHandle() != 0L) {
          setHandle(other.getHandle());
        }
        if (other.getDeviceCount() != 0L) {
          setDeviceCount(other.getDeviceCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                handle_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                deviceCount_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long handle_ ;
      /**
       * <code>int64 handle = 1;</code>
       * @return The handle.
       */
      @java.lang.Override
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @param value The handle to set.
       * @return This builder for chaining.
       */
      public Builder setHandle(long value) {
        
        handle_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0L;
        onChanged();
        return this;
      }

      private long deviceCount_ ;
      /**
       * <pre>
       * The number of model-parallel virtual devices that communicate via XLA
       * Send/Recv instructions.
       * </pre>
       *
       * <code>int64 device_count = 2;</code>
       * @return The deviceCount.
       */
      @java.lang.Override
      public long getDeviceCount() {
        return deviceCount_;
      }
      /**
       * <pre>
       * The number of model-parallel virtual devices that communicate via XLA
       * Send/Recv instructions.
       * </pre>
       *
       * <code>int64 device_count = 2;</code>
       * @param value The deviceCount to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceCount(long value) {
        
        deviceCount_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of model-parallel virtual devices that communicate via XLA
       * Send/Recv instructions.
       * </pre>
       *
       * <code>int64 device_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceCount_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.DeviceHandle)
    }

    // @@protoc_insertion_point(class_scope:xla.DeviceHandle)
    private static final xla.XlaData.DeviceHandle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.DeviceHandle();
    }

    public static xla.XlaData.DeviceHandle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceHandle>
        PARSER = new com.google.protobuf.AbstractParser<DeviceHandle>() {
      @java.lang.Override
      public DeviceHandle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeviceHandle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceHandle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.DeviceHandle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChannelHandleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ChannelHandle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    long getHandle();

    /**
     * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
     * @return The type.
     */
    xla.XlaData.ChannelHandle.ChannelType getType();
  }
  /**
   * <pre>
   * Handle given to a user to represent a channel between two computations
   * via a Send and Recv instruction pair. Channels are unbuffered, so Send
   * Send instructions will be blocked until the data is transferred.
   * </pre>
   *
   * Protobuf type {@code xla.ChannelHandle}
   */
  public static final class ChannelHandle extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ChannelHandle)
      ChannelHandleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChannelHandle.newBuilder() to construct.
    private ChannelHandle(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChannelHandle() {
      type_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ChannelHandle();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ChannelHandle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ChannelHandle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ChannelHandle.class, xla.XlaData.ChannelHandle.Builder.class);
    }

    /**
     * Protobuf enum {@code xla.ChannelHandle.ChannelType}
     */
    public enum ChannelType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Invalid primitive type to serve as default.
       * </pre>
       *
       * <code>CHANNEL_TYPE_INVALID = 0;</code>
       */
      CHANNEL_TYPE_INVALID(0),
      /**
       * <pre>
       * A channel for sending data between devices.
       * </pre>
       *
       * <code>DEVICE_TO_DEVICE = 1;</code>
       */
      DEVICE_TO_DEVICE(1),
      /**
       * <pre>
       * A channel for sending data from the device to the host. Can only be used
       * with a Send operation.
       * </pre>
       *
       * <code>DEVICE_TO_HOST = 2;</code>
       */
      DEVICE_TO_HOST(2),
      /**
       * <pre>
       * A channel for sending data from the host to the device. Can only be used
       * with a Recv operation.
       * </pre>
       *
       * <code>HOST_TO_DEVICE = 3;</code>
       */
      HOST_TO_DEVICE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Invalid primitive type to serve as default.
       * </pre>
       *
       * <code>CHANNEL_TYPE_INVALID = 0;</code>
       */
      public static final int CHANNEL_TYPE_INVALID_VALUE = 0;
      /**
       * <pre>
       * A channel for sending data between devices.
       * </pre>
       *
       * <code>DEVICE_TO_DEVICE = 1;</code>
       */
      public static final int DEVICE_TO_DEVICE_VALUE = 1;
      /**
       * <pre>
       * A channel for sending data from the device to the host. Can only be used
       * with a Send operation.
       * </pre>
       *
       * <code>DEVICE_TO_HOST = 2;</code>
       */
      public static final int DEVICE_TO_HOST_VALUE = 2;
      /**
       * <pre>
       * A channel for sending data from the host to the device. Can only be used
       * with a Recv operation.
       * </pre>
       *
       * <code>HOST_TO_DEVICE = 3;</code>
       */
      public static final int HOST_TO_DEVICE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ChannelType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ChannelType forNumber(int value) {
        switch (value) {
          case 0: return CHANNEL_TYPE_INVALID;
          case 1: return DEVICE_TO_DEVICE;
          case 2: return DEVICE_TO_HOST;
          case 3: return HOST_TO_DEVICE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ChannelType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ChannelType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ChannelType>() {
              public ChannelType findValueByNumber(int number) {
                return ChannelType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return xla.XlaData.ChannelHandle.getDescriptor().getEnumTypes().get(0);
      }

      private static final ChannelType[] VALUES = values();

      public static ChannelType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ChannelType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:xla.ChannelHandle.ChannelType)
    }

    public static final int HANDLE_FIELD_NUMBER = 1;
    private long handle_ = 0L;
    /**
     * <code>int64 handle = 1;</code>
     * @return The handle.
     */
    @java.lang.Override
    public long getHandle() {
      return handle_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override public xla.XlaData.ChannelHandle.ChannelType getType() {
      xla.XlaData.ChannelHandle.ChannelType result = xla.XlaData.ChannelHandle.ChannelType.forNumber(type_);
      return result == null ? xla.XlaData.ChannelHandle.ChannelType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (handle_ != 0L) {
        output.writeInt64(1, handle_);
      }
      if (type_ != xla.XlaData.ChannelHandle.ChannelType.CHANNEL_TYPE_INVALID.getNumber()) {
        output.writeEnum(2, type_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (handle_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, handle_);
      }
      if (type_ != xla.XlaData.ChannelHandle.ChannelType.CHANNEL_TYPE_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ChannelHandle)) {
        return super.equals(obj);
      }
      xla.XlaData.ChannelHandle other = (xla.XlaData.ChannelHandle) obj;

      if (getHandle()
          != other.getHandle()) return false;
      if (type_ != other.type_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HANDLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHandle());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ChannelHandle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ChannelHandle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ChannelHandle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ChannelHandle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ChannelHandle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ChannelHandle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ChannelHandle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Handle given to a user to represent a channel between two computations
     * via a Send and Recv instruction pair. Channels are unbuffered, so Send
     * Send instructions will be blocked until the data is transferred.
     * </pre>
     *
     * Protobuf type {@code xla.ChannelHandle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ChannelHandle)
        xla.XlaData.ChannelHandleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ChannelHandle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ChannelHandle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ChannelHandle.class, xla.XlaData.ChannelHandle.Builder.class);
      }

      // Construct using xla.XlaData.ChannelHandle.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        handle_ = 0L;
        type_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ChannelHandle_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ChannelHandle getDefaultInstanceForType() {
        return xla.XlaData.ChannelHandle.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ChannelHandle build() {
        xla.XlaData.ChannelHandle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ChannelHandle buildPartial() {
        xla.XlaData.ChannelHandle result = new xla.XlaData.ChannelHandle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.ChannelHandle result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.handle_ = handle_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ChannelHandle) {
          return mergeFrom((xla.XlaData.ChannelHandle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ChannelHandle other) {
        if (other == xla.XlaData.ChannelHandle.getDefaultInstance()) return this;
        if (other.getHandle() != 0L) {
          setHandle(other.getHandle());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                handle_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long handle_ ;
      /**
       * <code>int64 handle = 1;</code>
       * @return The handle.
       */
      @java.lang.Override
      public long getHandle() {
        return handle_;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @param value The handle to set.
       * @return This builder for chaining.
       */
      public Builder setHandle(long value) {
        
        handle_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 handle = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHandle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        handle_ = 0L;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
       * @return The type.
       */
      @java.lang.Override
      public xla.XlaData.ChannelHandle.ChannelType getType() {
        xla.XlaData.ChannelHandle.ChannelType result = xla.XlaData.ChannelHandle.ChannelType.forNumber(type_);
        return result == null ? xla.XlaData.ChannelHandle.ChannelType.UNRECOGNIZED : result;
      }
      /**
       * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(xla.XlaData.ChannelHandle.ChannelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ChannelHandle.ChannelType type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ChannelHandle)
    }

    // @@protoc_insertion_point(class_scope:xla.ChannelHandle)
    private static final xla.XlaData.ChannelHandle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ChannelHandle();
    }

    public static xla.XlaData.ChannelHandle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChannelHandle>
        PARSER = new com.google.protobuf.AbstractParser<ChannelHandle>() {
      @java.lang.Override
      public ChannelHandle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ChannelHandle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChannelHandle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ChannelHandle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeviceAssignmentProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.DeviceAssignmentProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 replica_count = 1;</code>
     * @return The replicaCount.
     */
    int getReplicaCount();

    /**
     * <code>int32 computation_count = 2;</code>
     * @return The computationCount.
     */
    int getComputationCount();

    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    java.util.List<xla.XlaData.DeviceAssignmentProto.ComputationDevice> 
        getComputationDevicesList();
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    xla.XlaData.DeviceAssignmentProto.ComputationDevice getComputationDevices(int index);
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    int getComputationDevicesCount();
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    java.util.List<? extends xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder> 
        getComputationDevicesOrBuilderList();
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder getComputationDevicesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * DeviceAssignmentProto is a serialized form of DeviceAssignment class, which
   * represents the device ids assigned to a set of replicated computations.
   * See xla::DeviceAssignment class comment for more details.
   * </pre>
   *
   * Protobuf type {@code xla.DeviceAssignmentProto}
   */
  public static final class DeviceAssignmentProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.DeviceAssignmentProto)
      DeviceAssignmentProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeviceAssignmentProto.newBuilder() to construct.
    private DeviceAssignmentProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeviceAssignmentProto() {
      computationDevices_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeviceAssignmentProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_DeviceAssignmentProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_DeviceAssignmentProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.DeviceAssignmentProto.class, xla.XlaData.DeviceAssignmentProto.Builder.class);
    }

    public interface ComputationDeviceOrBuilder extends
        // @@protoc_insertion_point(interface_extends:xla.DeviceAssignmentProto.ComputationDevice)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated int32 replica_device_ids = 1;</code>
       * @return A list containing the replicaDeviceIds.
       */
      java.util.List<java.lang.Integer> getReplicaDeviceIdsList();
      /**
       * <code>repeated int32 replica_device_ids = 1;</code>
       * @return The count of replicaDeviceIds.
       */
      int getReplicaDeviceIdsCount();
      /**
       * <code>repeated int32 replica_device_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The replicaDeviceIds at the given index.
       */
      int getReplicaDeviceIds(int index);
    }
    /**
     * <pre>
     * Each logical computation runs on replica_count physical devices.
     * ComputationDevice represents the device ids assinged to the replicas.
     * </pre>
     *
     * Protobuf type {@code xla.DeviceAssignmentProto.ComputationDevice}
     */
    public static final class ComputationDevice extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xla.DeviceAssignmentProto.ComputationDevice)
        ComputationDeviceOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ComputationDevice.newBuilder() to construct.
      private ComputationDevice(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ComputationDevice() {
        replicaDeviceIds_ = emptyIntList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ComputationDevice();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_DeviceAssignmentProto_ComputationDevice_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_DeviceAssignmentProto_ComputationDevice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.DeviceAssignmentProto.ComputationDevice.class, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder.class);
      }

      public static final int REPLICA_DEVICE_IDS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList replicaDeviceIds_;
      /**
       * <code>repeated int32 replica_device_ids = 1;</code>
       * @return A list containing the replicaDeviceIds.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getReplicaDeviceIdsList() {
        return replicaDeviceIds_;
      }
      /**
       * <code>repeated int32 replica_device_ids = 1;</code>
       * @return The count of replicaDeviceIds.
       */
      public int getReplicaDeviceIdsCount() {
        return replicaDeviceIds_.size();
      }
      /**
       * <code>repeated int32 replica_device_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The replicaDeviceIds at the given index.
       */
      public int getReplicaDeviceIds(int index) {
        return replicaDeviceIds_.getInt(index);
      }
      private int replicaDeviceIdsMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getReplicaDeviceIdsList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(replicaDeviceIdsMemoizedSerializedSize);
        }
        for (int i = 0; i < replicaDeviceIds_.size(); i++) {
          output.writeInt32NoTag(replicaDeviceIds_.getInt(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < replicaDeviceIds_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(replicaDeviceIds_.getInt(i));
          }
          size += dataSize;
          if (!getReplicaDeviceIdsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          replicaDeviceIdsMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof xla.XlaData.DeviceAssignmentProto.ComputationDevice)) {
          return super.equals(obj);
        }
        xla.XlaData.DeviceAssignmentProto.ComputationDevice other = (xla.XlaData.DeviceAssignmentProto.ComputationDevice) obj;

        if (!getReplicaDeviceIdsList()
            .equals(other.getReplicaDeviceIdsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getReplicaDeviceIdsCount() > 0) {
          hash = (37 * hash) + REPLICA_DEVICE_IDS_FIELD_NUMBER;
          hash = (53 * hash) + getReplicaDeviceIdsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(xla.XlaData.DeviceAssignmentProto.ComputationDevice prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Each logical computation runs on replica_count physical devices.
       * ComputationDevice represents the device ids assinged to the replicas.
       * </pre>
       *
       * Protobuf type {@code xla.DeviceAssignmentProto.ComputationDevice}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:xla.DeviceAssignmentProto.ComputationDevice)
          xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xla.XlaData.internal_static_xla_DeviceAssignmentProto_ComputationDevice_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xla.XlaData.internal_static_xla_DeviceAssignmentProto_ComputationDevice_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xla.XlaData.DeviceAssignmentProto.ComputationDevice.class, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder.class);
        }

        // Construct using xla.XlaData.DeviceAssignmentProto.ComputationDevice.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          replicaDeviceIds_ = emptyIntList();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xla.XlaData.internal_static_xla_DeviceAssignmentProto_ComputationDevice_descriptor;
        }

        @java.lang.Override
        public xla.XlaData.DeviceAssignmentProto.ComputationDevice getDefaultInstanceForType() {
          return xla.XlaData.DeviceAssignmentProto.ComputationDevice.getDefaultInstance();
        }

        @java.lang.Override
        public xla.XlaData.DeviceAssignmentProto.ComputationDevice build() {
          xla.XlaData.DeviceAssignmentProto.ComputationDevice result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public xla.XlaData.DeviceAssignmentProto.ComputationDevice buildPartial() {
          xla.XlaData.DeviceAssignmentProto.ComputationDevice result = new xla.XlaData.DeviceAssignmentProto.ComputationDevice(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(xla.XlaData.DeviceAssignmentProto.ComputationDevice result) {
          if (((bitField0_ & 0x00000001) != 0)) {
            replicaDeviceIds_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.replicaDeviceIds_ = replicaDeviceIds_;
        }

        private void buildPartial0(xla.XlaData.DeviceAssignmentProto.ComputationDevice result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xla.XlaData.DeviceAssignmentProto.ComputationDevice) {
            return mergeFrom((xla.XlaData.DeviceAssignmentProto.ComputationDevice)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xla.XlaData.DeviceAssignmentProto.ComputationDevice other) {
          if (other == xla.XlaData.DeviceAssignmentProto.ComputationDevice.getDefaultInstance()) return this;
          if (!other.replicaDeviceIds_.isEmpty()) {
            if (replicaDeviceIds_.isEmpty()) {
              replicaDeviceIds_ = other.replicaDeviceIds_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureReplicaDeviceIdsIsMutable();
              replicaDeviceIds_.addAll(other.replicaDeviceIds_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int v = input.readInt32();
                  ensureReplicaDeviceIdsIsMutable();
                  replicaDeviceIds_.addInt(v);
                  break;
                } // case 8
                case 10: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureReplicaDeviceIdsIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    replicaDeviceIds_.addInt(input.readInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList replicaDeviceIds_ = emptyIntList();
        private void ensureReplicaDeviceIdsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            replicaDeviceIds_ = mutableCopy(replicaDeviceIds_);
            bitField0_ |= 0x00000001;
          }
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @return A list containing the replicaDeviceIds.
         */
        public java.util.List<java.lang.Integer>
            getReplicaDeviceIdsList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(replicaDeviceIds_) : replicaDeviceIds_;
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @return The count of replicaDeviceIds.
         */
        public int getReplicaDeviceIdsCount() {
          return replicaDeviceIds_.size();
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @param index The index of the element to return.
         * @return The replicaDeviceIds at the given index.
         */
        public int getReplicaDeviceIds(int index) {
          return replicaDeviceIds_.getInt(index);
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @param index The index to set the value at.
         * @param value The replicaDeviceIds to set.
         * @return This builder for chaining.
         */
        public Builder setReplicaDeviceIds(
            int index, int value) {
          
          ensureReplicaDeviceIdsIsMutable();
          replicaDeviceIds_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @param value The replicaDeviceIds to add.
         * @return This builder for chaining.
         */
        public Builder addReplicaDeviceIds(int value) {
          
          ensureReplicaDeviceIdsIsMutable();
          replicaDeviceIds_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @param values The replicaDeviceIds to add.
         * @return This builder for chaining.
         */
        public Builder addAllReplicaDeviceIds(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureReplicaDeviceIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, replicaDeviceIds_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 replica_device_ids = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearReplicaDeviceIds() {
          replicaDeviceIds_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xla.DeviceAssignmentProto.ComputationDevice)
      }

      // @@protoc_insertion_point(class_scope:xla.DeviceAssignmentProto.ComputationDevice)
      private static final xla.XlaData.DeviceAssignmentProto.ComputationDevice DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new xla.XlaData.DeviceAssignmentProto.ComputationDevice();
      }

      public static xla.XlaData.DeviceAssignmentProto.ComputationDevice getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ComputationDevice>
          PARSER = new com.google.protobuf.AbstractParser<ComputationDevice>() {
        @java.lang.Override
        public ComputationDevice parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ComputationDevice> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ComputationDevice> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public xla.XlaData.DeviceAssignmentProto.ComputationDevice getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int REPLICA_COUNT_FIELD_NUMBER = 1;
    private int replicaCount_ = 0;
    /**
     * <code>int32 replica_count = 1;</code>
     * @return The replicaCount.
     */
    @java.lang.Override
    public int getReplicaCount() {
      return replicaCount_;
    }

    public static final int COMPUTATION_COUNT_FIELD_NUMBER = 2;
    private int computationCount_ = 0;
    /**
     * <code>int32 computation_count = 2;</code>
     * @return The computationCount.
     */
    @java.lang.Override
    public int getComputationCount() {
      return computationCount_;
    }

    public static final int COMPUTATION_DEVICES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.DeviceAssignmentProto.ComputationDevice> computationDevices_;
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.DeviceAssignmentProto.ComputationDevice> getComputationDevicesList() {
      return computationDevices_;
    }
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder> 
        getComputationDevicesOrBuilderList() {
      return computationDevices_;
    }
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    @java.lang.Override
    public int getComputationDevicesCount() {
      return computationDevices_.size();
    }
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    @java.lang.Override
    public xla.XlaData.DeviceAssignmentProto.ComputationDevice getComputationDevices(int index) {
      return computationDevices_.get(index);
    }
    /**
     * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
     */
    @java.lang.Override
    public xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder getComputationDevicesOrBuilder(
        int index) {
      return computationDevices_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (replicaCount_ != 0) {
        output.writeInt32(1, replicaCount_);
      }
      if (computationCount_ != 0) {
        output.writeInt32(2, computationCount_);
      }
      for (int i = 0; i < computationDevices_.size(); i++) {
        output.writeMessage(3, computationDevices_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (replicaCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, replicaCount_);
      }
      if (computationCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, computationCount_);
      }
      for (int i = 0; i < computationDevices_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, computationDevices_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.DeviceAssignmentProto)) {
        return super.equals(obj);
      }
      xla.XlaData.DeviceAssignmentProto other = (xla.XlaData.DeviceAssignmentProto) obj;

      if (getReplicaCount()
          != other.getReplicaCount()) return false;
      if (getComputationCount()
          != other.getComputationCount()) return false;
      if (!getComputationDevicesList()
          .equals(other.getComputationDevicesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REPLICA_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getReplicaCount();
      hash = (37 * hash) + COMPUTATION_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getComputationCount();
      if (getComputationDevicesCount() > 0) {
        hash = (37 * hash) + COMPUTATION_DEVICES_FIELD_NUMBER;
        hash = (53 * hash) + getComputationDevicesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.DeviceAssignmentProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.DeviceAssignmentProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.DeviceAssignmentProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.DeviceAssignmentProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DeviceAssignmentProto is a serialized form of DeviceAssignment class, which
     * represents the device ids assigned to a set of replicated computations.
     * See xla::DeviceAssignment class comment for more details.
     * </pre>
     *
     * Protobuf type {@code xla.DeviceAssignmentProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.DeviceAssignmentProto)
        xla.XlaData.DeviceAssignmentProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_DeviceAssignmentProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_DeviceAssignmentProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.DeviceAssignmentProto.class, xla.XlaData.DeviceAssignmentProto.Builder.class);
      }

      // Construct using xla.XlaData.DeviceAssignmentProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        replicaCount_ = 0;
        computationCount_ = 0;
        if (computationDevicesBuilder_ == null) {
          computationDevices_ = java.util.Collections.emptyList();
        } else {
          computationDevices_ = null;
          computationDevicesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_DeviceAssignmentProto_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.DeviceAssignmentProto getDefaultInstanceForType() {
        return xla.XlaData.DeviceAssignmentProto.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.DeviceAssignmentProto build() {
        xla.XlaData.DeviceAssignmentProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.DeviceAssignmentProto buildPartial() {
        xla.XlaData.DeviceAssignmentProto result = new xla.XlaData.DeviceAssignmentProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.DeviceAssignmentProto result) {
        if (computationDevicesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            computationDevices_ = java.util.Collections.unmodifiableList(computationDevices_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.computationDevices_ = computationDevices_;
        } else {
          result.computationDevices_ = computationDevicesBuilder_.build();
        }
      }

      private void buildPartial0(xla.XlaData.DeviceAssignmentProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.replicaCount_ = replicaCount_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.computationCount_ = computationCount_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.DeviceAssignmentProto) {
          return mergeFrom((xla.XlaData.DeviceAssignmentProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.DeviceAssignmentProto other) {
        if (other == xla.XlaData.DeviceAssignmentProto.getDefaultInstance()) return this;
        if (other.getReplicaCount() != 0) {
          setReplicaCount(other.getReplicaCount());
        }
        if (other.getComputationCount() != 0) {
          setComputationCount(other.getComputationCount());
        }
        if (computationDevicesBuilder_ == null) {
          if (!other.computationDevices_.isEmpty()) {
            if (computationDevices_.isEmpty()) {
              computationDevices_ = other.computationDevices_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureComputationDevicesIsMutable();
              computationDevices_.addAll(other.computationDevices_);
            }
            onChanged();
          }
        } else {
          if (!other.computationDevices_.isEmpty()) {
            if (computationDevicesBuilder_.isEmpty()) {
              computationDevicesBuilder_.dispose();
              computationDevicesBuilder_ = null;
              computationDevices_ = other.computationDevices_;
              bitField0_ = (bitField0_ & ~0x00000004);
              computationDevicesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getComputationDevicesFieldBuilder() : null;
            } else {
              computationDevicesBuilder_.addAllMessages(other.computationDevices_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                replicaCount_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                computationCount_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                xla.XlaData.DeviceAssignmentProto.ComputationDevice m =
                    input.readMessage(
                        xla.XlaData.DeviceAssignmentProto.ComputationDevice.parser(),
                        extensionRegistry);
                if (computationDevicesBuilder_ == null) {
                  ensureComputationDevicesIsMutable();
                  computationDevices_.add(m);
                } else {
                  computationDevicesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int replicaCount_ ;
      /**
       * <code>int32 replica_count = 1;</code>
       * @return The replicaCount.
       */
      @java.lang.Override
      public int getReplicaCount() {
        return replicaCount_;
      }
      /**
       * <code>int32 replica_count = 1;</code>
       * @param value The replicaCount to set.
       * @return This builder for chaining.
       */
      public Builder setReplicaCount(int value) {
        
        replicaCount_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int32 replica_count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplicaCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        replicaCount_ = 0;
        onChanged();
        return this;
      }

      private int computationCount_ ;
      /**
       * <code>int32 computation_count = 2;</code>
       * @return The computationCount.
       */
      @java.lang.Override
      public int getComputationCount() {
        return computationCount_;
      }
      /**
       * <code>int32 computation_count = 2;</code>
       * @param value The computationCount to set.
       * @return This builder for chaining.
       */
      public Builder setComputationCount(int value) {
        
        computationCount_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int32 computation_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearComputationCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        computationCount_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<xla.XlaData.DeviceAssignmentProto.ComputationDevice> computationDevices_ =
        java.util.Collections.emptyList();
      private void ensureComputationDevicesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          computationDevices_ = new java.util.ArrayList<xla.XlaData.DeviceAssignmentProto.ComputationDevice>(computationDevices_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.DeviceAssignmentProto.ComputationDevice, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder, xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder> computationDevicesBuilder_;

      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public java.util.List<xla.XlaData.DeviceAssignmentProto.ComputationDevice> getComputationDevicesList() {
        if (computationDevicesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(computationDevices_);
        } else {
          return computationDevicesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public int getComputationDevicesCount() {
        if (computationDevicesBuilder_ == null) {
          return computationDevices_.size();
        } else {
          return computationDevicesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public xla.XlaData.DeviceAssignmentProto.ComputationDevice getComputationDevices(int index) {
        if (computationDevicesBuilder_ == null) {
          return computationDevices_.get(index);
        } else {
          return computationDevicesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder setComputationDevices(
          int index, xla.XlaData.DeviceAssignmentProto.ComputationDevice value) {
        if (computationDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComputationDevicesIsMutable();
          computationDevices_.set(index, value);
          onChanged();
        } else {
          computationDevicesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder setComputationDevices(
          int index, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder builderForValue) {
        if (computationDevicesBuilder_ == null) {
          ensureComputationDevicesIsMutable();
          computationDevices_.set(index, builderForValue.build());
          onChanged();
        } else {
          computationDevicesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder addComputationDevices(xla.XlaData.DeviceAssignmentProto.ComputationDevice value) {
        if (computationDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComputationDevicesIsMutable();
          computationDevices_.add(value);
          onChanged();
        } else {
          computationDevicesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder addComputationDevices(
          int index, xla.XlaData.DeviceAssignmentProto.ComputationDevice value) {
        if (computationDevicesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComputationDevicesIsMutable();
          computationDevices_.add(index, value);
          onChanged();
        } else {
          computationDevicesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder addComputationDevices(
          xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder builderForValue) {
        if (computationDevicesBuilder_ == null) {
          ensureComputationDevicesIsMutable();
          computationDevices_.add(builderForValue.build());
          onChanged();
        } else {
          computationDevicesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder addComputationDevices(
          int index, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder builderForValue) {
        if (computationDevicesBuilder_ == null) {
          ensureComputationDevicesIsMutable();
          computationDevices_.add(index, builderForValue.build());
          onChanged();
        } else {
          computationDevicesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder addAllComputationDevices(
          java.lang.Iterable<? extends xla.XlaData.DeviceAssignmentProto.ComputationDevice> values) {
        if (computationDevicesBuilder_ == null) {
          ensureComputationDevicesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, computationDevices_);
          onChanged();
        } else {
          computationDevicesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder clearComputationDevices() {
        if (computationDevicesBuilder_ == null) {
          computationDevices_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          computationDevicesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public Builder removeComputationDevices(int index) {
        if (computationDevicesBuilder_ == null) {
          ensureComputationDevicesIsMutable();
          computationDevices_.remove(index);
          onChanged();
        } else {
          computationDevicesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder getComputationDevicesBuilder(
          int index) {
        return getComputationDevicesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder getComputationDevicesOrBuilder(
          int index) {
        if (computationDevicesBuilder_ == null) {
          return computationDevices_.get(index);  } else {
          return computationDevicesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public java.util.List<? extends xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder> 
           getComputationDevicesOrBuilderList() {
        if (computationDevicesBuilder_ != null) {
          return computationDevicesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(computationDevices_);
        }
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder addComputationDevicesBuilder() {
        return getComputationDevicesFieldBuilder().addBuilder(
            xla.XlaData.DeviceAssignmentProto.ComputationDevice.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder addComputationDevicesBuilder(
          int index) {
        return getComputationDevicesFieldBuilder().addBuilder(
            index, xla.XlaData.DeviceAssignmentProto.ComputationDevice.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.DeviceAssignmentProto.ComputationDevice computation_devices = 3;</code>
       */
      public java.util.List<xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder> 
           getComputationDevicesBuilderList() {
        return getComputationDevicesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.DeviceAssignmentProto.ComputationDevice, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder, xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder> 
          getComputationDevicesFieldBuilder() {
        if (computationDevicesBuilder_ == null) {
          computationDevicesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.DeviceAssignmentProto.ComputationDevice, xla.XlaData.DeviceAssignmentProto.ComputationDevice.Builder, xla.XlaData.DeviceAssignmentProto.ComputationDeviceOrBuilder>(
                  computationDevices_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          computationDevices_ = null;
        }
        return computationDevicesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.DeviceAssignmentProto)
    }

    // @@protoc_insertion_point(class_scope:xla.DeviceAssignmentProto)
    private static final xla.XlaData.DeviceAssignmentProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.DeviceAssignmentProto();
    }

    public static xla.XlaData.DeviceAssignmentProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeviceAssignmentProto>
        PARSER = new com.google.protobuf.AbstractParser<DeviceAssignmentProto>() {
      @java.lang.Override
      public DeviceAssignmentProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DeviceAssignmentProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeviceAssignmentProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.DeviceAssignmentProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LiteralProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.LiteralProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xla.ShapeProto shape = 1;</code>
     * @return Whether the shape field is set.
     */
    boolean hasShape();
    /**
     * <code>.xla.ShapeProto shape = 1;</code>
     * @return The shape.
     */
    xla.XlaData.ShapeProto getShape();
    /**
     * <code>.xla.ShapeProto shape = 1;</code>
     */
    xla.XlaData.ShapeProtoOrBuilder getShapeOrBuilder();

    /**
     * <code>repeated bool preds = 2;</code>
     * @return A list containing the preds.
     */
    java.util.List<java.lang.Boolean> getPredsList();
    /**
     * <code>repeated bool preds = 2;</code>
     * @return The count of preds.
     */
    int getPredsCount();
    /**
     * <code>repeated bool preds = 2;</code>
     * @param index The index of the element to return.
     * @return The preds at the given index.
     */
    boolean getPreds(int index);

    /**
     * <code>bytes s8s = 15;</code>
     * @return The s8s.
     */
    com.google.protobuf.ByteString getS8S();

    /**
     * <code>bytes u8s = 3;</code>
     * @return The u8s.
     */
    com.google.protobuf.ByteString getU8S();

    /**
     * <code>repeated int32 s32s = 4;</code>
     * @return A list containing the s32s.
     */
    java.util.List<java.lang.Integer> getS32SList();
    /**
     * <code>repeated int32 s32s = 4;</code>
     * @return The count of s32s.
     */
    int getS32SCount();
    /**
     * <code>repeated int32 s32s = 4;</code>
     * @param index The index of the element to return.
     * @return The s32s at the given index.
     */
    int getS32S(int index);

    /**
     * <code>repeated int64 s64s = 5;</code>
     * @return A list containing the s64s.
     */
    java.util.List<java.lang.Long> getS64SList();
    /**
     * <code>repeated int64 s64s = 5;</code>
     * @return The count of s64s.
     */
    int getS64SCount();
    /**
     * <code>repeated int64 s64s = 5;</code>
     * @param index The index of the element to return.
     * @return The s64s at the given index.
     */
    long getS64S(int index);

    /**
     * <code>repeated uint32 u32s = 6;</code>
     * @return A list containing the u32s.
     */
    java.util.List<java.lang.Integer> getU32SList();
    /**
     * <code>repeated uint32 u32s = 6;</code>
     * @return The count of u32s.
     */
    int getU32SCount();
    /**
     * <code>repeated uint32 u32s = 6;</code>
     * @param index The index of the element to return.
     * @return The u32s at the given index.
     */
    int getU32S(int index);

    /**
     * <code>repeated uint64 u64s = 7;</code>
     * @return A list containing the u64s.
     */
    java.util.List<java.lang.Long> getU64SList();
    /**
     * <code>repeated uint64 u64s = 7;</code>
     * @return The count of u64s.
     */
    int getU64SCount();
    /**
     * <code>repeated uint64 u64s = 7;</code>
     * @param index The index of the element to return.
     * @return The u64s at the given index.
     */
    long getU64S(int index);

    /**
     * <code>repeated float f32s = 8;</code>
     * @return A list containing the f32s.
     */
    java.util.List<java.lang.Float> getF32SList();
    /**
     * <code>repeated float f32s = 8;</code>
     * @return The count of f32s.
     */
    int getF32SCount();
    /**
     * <code>repeated float f32s = 8;</code>
     * @param index The index of the element to return.
     * @return The f32s at the given index.
     */
    float getF32S(int index);

    /**
     * <code>repeated double f64s = 9;</code>
     * @return A list containing the f64s.
     */
    java.util.List<java.lang.Double> getF64SList();
    /**
     * <code>repeated double f64s = 9;</code>
     * @return The count of f64s.
     */
    int getF64SCount();
    /**
     * <code>repeated double f64s = 9;</code>
     * @param index The index of the element to return.
     * @return The f64s at the given index.
     */
    double getF64S(int index);

    /**
     * <pre>
     * Stored as interleaved real, imag floats.
     * </pre>
     *
     * <code>repeated float c64s = 12;</code>
     * @return A list containing the c64s.
     */
    java.util.List<java.lang.Float> getC64SList();
    /**
     * <pre>
     * Stored as interleaved real, imag floats.
     * </pre>
     *
     * <code>repeated float c64s = 12;</code>
     * @return The count of c64s.
     */
    int getC64SCount();
    /**
     * <pre>
     * Stored as interleaved real, imag floats.
     * </pre>
     *
     * <code>repeated float c64s = 12;</code>
     * @param index The index of the element to return.
     * @return The c64s at the given index.
     */
    float getC64S(int index);

    /**
     * <pre>
     * Stored as interleaved real, imag doubles.
     * </pre>
     *
     * <code>repeated double c128s = 18;</code>
     * @return A list containing the c128s.
     */
    java.util.List<java.lang.Double> getC128SList();
    /**
     * <pre>
     * Stored as interleaved real, imag doubles.
     * </pre>
     *
     * <code>repeated double c128s = 18;</code>
     * @return The count of c128s.
     */
    int getC128SCount();
    /**
     * <pre>
     * Stored as interleaved real, imag doubles.
     * </pre>
     *
     * <code>repeated double c128s = 18;</code>
     * @param index The index of the element to return.
     * @return The c128s at the given index.
     */
    double getC128S(int index);

    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    java.util.List<xla.XlaData.LiteralProto> 
        getTupleLiteralsList();
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    xla.XlaData.LiteralProto getTupleLiterals(int index);
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    int getTupleLiteralsCount();
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    java.util.List<? extends xla.XlaData.LiteralProtoOrBuilder> 
        getTupleLiteralsOrBuilderList();
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    xla.XlaData.LiteralProtoOrBuilder getTupleLiteralsOrBuilder(
        int index);

    /**
     * <pre>
     * The F16s, BF16s, U16s and S16s are encoded in little endian byte order
     * </pre>
     *
     * <code>bytes f16s = 11;</code>
     * @return The f16s.
     */
    com.google.protobuf.ByteString getF16S();

    /**
     * <code>bytes bf16s = 13;</code>
     * @return The bf16s.
     */
    com.google.protobuf.ByteString getBf16S();

    /**
     * <code>bytes u16s = 16;</code>
     * @return The u16s.
     */
    com.google.protobuf.ByteString getU16S();

    /**
     * <code>bytes s16s = 17;</code>
     * @return The s16s.
     */
    com.google.protobuf.ByteString getS16S();

    /**
     * <pre>
     * Next = 19
     * </pre>
     *
     * <code>repeated int64 sparse_indices = 14;</code>
     * @return A list containing the sparseIndices.
     */
    java.util.List<java.lang.Long> getSparseIndicesList();
    /**
     * <pre>
     * Next = 19
     * </pre>
     *
     * <code>repeated int64 sparse_indices = 14;</code>
     * @return The count of sparseIndices.
     */
    int getSparseIndicesCount();
    /**
     * <pre>
     * Next = 19
     * </pre>
     *
     * <code>repeated int64 sparse_indices = 14;</code>
     * @param index The index of the element to return.
     * @return The sparseIndices at the given index.
     */
    long getSparseIndices(int index);
  }
  /**
   * <pre>
   * Literals are used when the server and client need to exchange materialized
   * data / results. Literals are also used to describe constants used in
   * computations.
   * Transfers to/from the client are encoded in literal form, and the structure
   * of the repeated fields is implied by the shape.
   * </pre>
   *
   * Protobuf type {@code xla.LiteralProto}
   */
  public static final class LiteralProto extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.LiteralProto)
      LiteralProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LiteralProto.newBuilder() to construct.
    private LiteralProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LiteralProto() {
      preds_ = emptyBooleanList();
      s8S_ = com.google.protobuf.ByteString.EMPTY;
      u8S_ = com.google.protobuf.ByteString.EMPTY;
      s32S_ = emptyIntList();
      s64S_ = emptyLongList();
      u32S_ = emptyIntList();
      u64S_ = emptyLongList();
      f32S_ = emptyFloatList();
      f64S_ = emptyDoubleList();
      c64S_ = emptyFloatList();
      c128S_ = emptyDoubleList();
      tupleLiterals_ = java.util.Collections.emptyList();
      f16S_ = com.google.protobuf.ByteString.EMPTY;
      bf16S_ = com.google.protobuf.ByteString.EMPTY;
      u16S_ = com.google.protobuf.ByteString.EMPTY;
      s16S_ = com.google.protobuf.ByteString.EMPTY;
      sparseIndices_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LiteralProto();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_LiteralProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_LiteralProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.LiteralProto.class, xla.XlaData.LiteralProto.Builder.class);
    }

    public static final int SHAPE_FIELD_NUMBER = 1;
    private xla.XlaData.ShapeProto shape_;
    /**
     * <code>.xla.ShapeProto shape = 1;</code>
     * @return Whether the shape field is set.
     */
    @java.lang.Override
    public boolean hasShape() {
      return shape_ != null;
    }
    /**
     * <code>.xla.ShapeProto shape = 1;</code>
     * @return The shape.
     */
    @java.lang.Override
    public xla.XlaData.ShapeProto getShape() {
      return shape_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : shape_;
    }
    /**
     * <code>.xla.ShapeProto shape = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProtoOrBuilder getShapeOrBuilder() {
      return shape_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : shape_;
    }

    public static final int PREDS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList preds_;
    /**
     * <code>repeated bool preds = 2;</code>
     * @return A list containing the preds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getPredsList() {
      return preds_;
    }
    /**
     * <code>repeated bool preds = 2;</code>
     * @return The count of preds.
     */
    public int getPredsCount() {
      return preds_.size();
    }
    /**
     * <code>repeated bool preds = 2;</code>
     * @param index The index of the element to return.
     * @return The preds at the given index.
     */
    public boolean getPreds(int index) {
      return preds_.getBoolean(index);
    }
    private int predsMemoizedSerializedSize = -1;

    public static final int S8S_FIELD_NUMBER = 15;
    private com.google.protobuf.ByteString s8S_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes s8s = 15;</code>
     * @return The s8s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getS8S() {
      return s8S_;
    }

    public static final int U8S_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString u8S_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes u8s = 3;</code>
     * @return The u8s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getU8S() {
      return u8S_;
    }

    public static final int S32S_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList s32S_;
    /**
     * <code>repeated int32 s32s = 4;</code>
     * @return A list containing the s32s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getS32SList() {
      return s32S_;
    }
    /**
     * <code>repeated int32 s32s = 4;</code>
     * @return The count of s32s.
     */
    public int getS32SCount() {
      return s32S_.size();
    }
    /**
     * <code>repeated int32 s32s = 4;</code>
     * @param index The index of the element to return.
     * @return The s32s at the given index.
     */
    public int getS32S(int index) {
      return s32S_.getInt(index);
    }
    private int s32SMemoizedSerializedSize = -1;

    public static final int S64S_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList s64S_;
    /**
     * <code>repeated int64 s64s = 5;</code>
     * @return A list containing the s64s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getS64SList() {
      return s64S_;
    }
    /**
     * <code>repeated int64 s64s = 5;</code>
     * @return The count of s64s.
     */
    public int getS64SCount() {
      return s64S_.size();
    }
    /**
     * <code>repeated int64 s64s = 5;</code>
     * @param index The index of the element to return.
     * @return The s64s at the given index.
     */
    public long getS64S(int index) {
      return s64S_.getLong(index);
    }
    private int s64SMemoizedSerializedSize = -1;

    public static final int U32S_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList u32S_;
    /**
     * <code>repeated uint32 u32s = 6;</code>
     * @return A list containing the u32s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getU32SList() {
      return u32S_;
    }
    /**
     * <code>repeated uint32 u32s = 6;</code>
     * @return The count of u32s.
     */
    public int getU32SCount() {
      return u32S_.size();
    }
    /**
     * <code>repeated uint32 u32s = 6;</code>
     * @param index The index of the element to return.
     * @return The u32s at the given index.
     */
    public int getU32S(int index) {
      return u32S_.getInt(index);
    }
    private int u32SMemoizedSerializedSize = -1;

    public static final int U64S_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList u64S_;
    /**
     * <code>repeated uint64 u64s = 7;</code>
     * @return A list containing the u64s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getU64SList() {
      return u64S_;
    }
    /**
     * <code>repeated uint64 u64s = 7;</code>
     * @return The count of u64s.
     */
    public int getU64SCount() {
      return u64S_.size();
    }
    /**
     * <code>repeated uint64 u64s = 7;</code>
     * @param index The index of the element to return.
     * @return The u64s at the given index.
     */
    public long getU64S(int index) {
      return u64S_.getLong(index);
    }
    private int u64SMemoizedSerializedSize = -1;

    public static final int F32S_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList f32S_;
    /**
     * <code>repeated float f32s = 8;</code>
     * @return A list containing the f32s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getF32SList() {
      return f32S_;
    }
    /**
     * <code>repeated float f32s = 8;</code>
     * @return The count of f32s.
     */
    public int getF32SCount() {
      return f32S_.size();
    }
    /**
     * <code>repeated float f32s = 8;</code>
     * @param index The index of the element to return.
     * @return The f32s at the given index.
     */
    public float getF32S(int index) {
      return f32S_.getFloat(index);
    }
    private int f32SMemoizedSerializedSize = -1;

    public static final int F64S_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList f64S_;
    /**
     * <code>repeated double f64s = 9;</code>
     * @return A list containing the f64s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getF64SList() {
      return f64S_;
    }
    /**
     * <code>repeated double f64s = 9;</code>
     * @return The count of f64s.
     */
    public int getF64SCount() {
      return f64S_.size();
    }
    /**
     * <code>repeated double f64s = 9;</code>
     * @param index The index of the element to return.
     * @return The f64s at the given index.
     */
    public double getF64S(int index) {
      return f64S_.getDouble(index);
    }
    private int f64SMemoizedSerializedSize = -1;

    public static final int C64S_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList c64S_;
    /**
     * <pre>
     * Stored as interleaved real, imag floats.
     * </pre>
     *
     * <code>repeated float c64s = 12;</code>
     * @return A list containing the c64s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getC64SList() {
      return c64S_;
    }
    /**
     * <pre>
     * Stored as interleaved real, imag floats.
     * </pre>
     *
     * <code>repeated float c64s = 12;</code>
     * @return The count of c64s.
     */
    public int getC64SCount() {
      return c64S_.size();
    }
    /**
     * <pre>
     * Stored as interleaved real, imag floats.
     * </pre>
     *
     * <code>repeated float c64s = 12;</code>
     * @param index The index of the element to return.
     * @return The c64s at the given index.
     */
    public float getC64S(int index) {
      return c64S_.getFloat(index);
    }
    private int c64SMemoizedSerializedSize = -1;

    public static final int C128S_FIELD_NUMBER = 18;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList c128S_;
    /**
     * <pre>
     * Stored as interleaved real, imag doubles.
     * </pre>
     *
     * <code>repeated double c128s = 18;</code>
     * @return A list containing the c128s.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getC128SList() {
      return c128S_;
    }
    /**
     * <pre>
     * Stored as interleaved real, imag doubles.
     * </pre>
     *
     * <code>repeated double c128s = 18;</code>
     * @return The count of c128s.
     */
    public int getC128SCount() {
      return c128S_.size();
    }
    /**
     * <pre>
     * Stored as interleaved real, imag doubles.
     * </pre>
     *
     * <code>repeated double c128s = 18;</code>
     * @param index The index of the element to return.
     * @return The c128s at the given index.
     */
    public double getC128S(int index) {
      return c128S_.getDouble(index);
    }
    private int c128SMemoizedSerializedSize = -1;

    public static final int TUPLE_LITERALS_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.LiteralProto> tupleLiterals_;
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.LiteralProto> getTupleLiteralsList() {
      return tupleLiterals_;
    }
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.LiteralProtoOrBuilder> 
        getTupleLiteralsOrBuilderList() {
      return tupleLiterals_;
    }
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    @java.lang.Override
    public int getTupleLiteralsCount() {
      return tupleLiterals_.size();
    }
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    @java.lang.Override
    public xla.XlaData.LiteralProto getTupleLiterals(int index) {
      return tupleLiterals_.get(index);
    }
    /**
     * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
     */
    @java.lang.Override
    public xla.XlaData.LiteralProtoOrBuilder getTupleLiteralsOrBuilder(
        int index) {
      return tupleLiterals_.get(index);
    }

    public static final int F16S_FIELD_NUMBER = 11;
    private com.google.protobuf.ByteString f16S_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * The F16s, BF16s, U16s and S16s are encoded in little endian byte order
     * </pre>
     *
     * <code>bytes f16s = 11;</code>
     * @return The f16s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getF16S() {
      return f16S_;
    }

    public static final int BF16S_FIELD_NUMBER = 13;
    private com.google.protobuf.ByteString bf16S_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes bf16s = 13;</code>
     * @return The bf16s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBf16S() {
      return bf16S_;
    }

    public static final int U16S_FIELD_NUMBER = 16;
    private com.google.protobuf.ByteString u16S_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes u16s = 16;</code>
     * @return The u16s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getU16S() {
      return u16S_;
    }

    public static final int S16S_FIELD_NUMBER = 17;
    private com.google.protobuf.ByteString s16S_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes s16s = 17;</code>
     * @return The s16s.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getS16S() {
      return s16S_;
    }

    public static final int SPARSE_INDICES_FIELD_NUMBER = 14;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList sparseIndices_;
    /**
     * <pre>
     * Next = 19
     * </pre>
     *
     * <code>repeated int64 sparse_indices = 14;</code>
     * @return A list containing the sparseIndices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getSparseIndicesList() {
      return sparseIndices_;
    }
    /**
     * <pre>
     * Next = 19
     * </pre>
     *
     * <code>repeated int64 sparse_indices = 14;</code>
     * @return The count of sparseIndices.
     */
    public int getSparseIndicesCount() {
      return sparseIndices_.size();
    }
    /**
     * <pre>
     * Next = 19
     * </pre>
     *
     * <code>repeated int64 sparse_indices = 14;</code>
     * @param index The index of the element to return.
     * @return The sparseIndices at the given index.
     */
    public long getSparseIndices(int index) {
      return sparseIndices_.getLong(index);
    }
    private int sparseIndicesMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (shape_ != null) {
        output.writeMessage(1, getShape());
      }
      if (getPredsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(predsMemoizedSerializedSize);
      }
      for (int i = 0; i < preds_.size(); i++) {
        output.writeBoolNoTag(preds_.getBoolean(i));
      }
      if (!u8S_.isEmpty()) {
        output.writeBytes(3, u8S_);
      }
      if (getS32SList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(s32SMemoizedSerializedSize);
      }
      for (int i = 0; i < s32S_.size(); i++) {
        output.writeInt32NoTag(s32S_.getInt(i));
      }
      if (getS64SList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(s64SMemoizedSerializedSize);
      }
      for (int i = 0; i < s64S_.size(); i++) {
        output.writeInt64NoTag(s64S_.getLong(i));
      }
      if (getU32SList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(u32SMemoizedSerializedSize);
      }
      for (int i = 0; i < u32S_.size(); i++) {
        output.writeUInt32NoTag(u32S_.getInt(i));
      }
      if (getU64SList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(u64SMemoizedSerializedSize);
      }
      for (int i = 0; i < u64S_.size(); i++) {
        output.writeUInt64NoTag(u64S_.getLong(i));
      }
      if (getF32SList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(f32SMemoizedSerializedSize);
      }
      for (int i = 0; i < f32S_.size(); i++) {
        output.writeFloatNoTag(f32S_.getFloat(i));
      }
      if (getF64SList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(f64SMemoizedSerializedSize);
      }
      for (int i = 0; i < f64S_.size(); i++) {
        output.writeDoubleNoTag(f64S_.getDouble(i));
      }
      for (int i = 0; i < tupleLiterals_.size(); i++) {
        output.writeMessage(10, tupleLiterals_.get(i));
      }
      if (!f16S_.isEmpty()) {
        output.writeBytes(11, f16S_);
      }
      if (getC64SList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(c64SMemoizedSerializedSize);
      }
      for (int i = 0; i < c64S_.size(); i++) {
        output.writeFloatNoTag(c64S_.getFloat(i));
      }
      if (!bf16S_.isEmpty()) {
        output.writeBytes(13, bf16S_);
      }
      if (getSparseIndicesList().size() > 0) {
        output.writeUInt32NoTag(114);
        output.writeUInt32NoTag(sparseIndicesMemoizedSerializedSize);
      }
      for (int i = 0; i < sparseIndices_.size(); i++) {
        output.writeInt64NoTag(sparseIndices_.getLong(i));
      }
      if (!s8S_.isEmpty()) {
        output.writeBytes(15, s8S_);
      }
      if (!u16S_.isEmpty()) {
        output.writeBytes(16, u16S_);
      }
      if (!s16S_.isEmpty()) {
        output.writeBytes(17, s16S_);
      }
      if (getC128SList().size() > 0) {
        output.writeUInt32NoTag(146);
        output.writeUInt32NoTag(c128SMemoizedSerializedSize);
      }
      for (int i = 0; i < c128S_.size(); i++) {
        output.writeDoubleNoTag(c128S_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (shape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getShape());
      }
      {
        int dataSize = 0;
        dataSize = 1 * getPredsList().size();
        size += dataSize;
        if (!getPredsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        predsMemoizedSerializedSize = dataSize;
      }
      if (!u8S_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, u8S_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < s32S_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(s32S_.getInt(i));
        }
        size += dataSize;
        if (!getS32SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        s32SMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < s64S_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(s64S_.getLong(i));
        }
        size += dataSize;
        if (!getS64SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        s64SMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < u32S_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(u32S_.getInt(i));
        }
        size += dataSize;
        if (!getU32SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        u32SMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < u64S_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(u64S_.getLong(i));
        }
        size += dataSize;
        if (!getU64SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        u64SMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getF32SList().size();
        size += dataSize;
        if (!getF32SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        f32SMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 8 * getF64SList().size();
        size += dataSize;
        if (!getF64SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        f64SMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < tupleLiterals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, tupleLiterals_.get(i));
      }
      if (!f16S_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, f16S_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getC64SList().size();
        size += dataSize;
        if (!getC64SList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        c64SMemoizedSerializedSize = dataSize;
      }
      if (!bf16S_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, bf16S_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sparseIndices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(sparseIndices_.getLong(i));
        }
        size += dataSize;
        if (!getSparseIndicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        sparseIndicesMemoizedSerializedSize = dataSize;
      }
      if (!s8S_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, s8S_);
      }
      if (!u16S_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, u16S_);
      }
      if (!s16S_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, s16S_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getC128SList().size();
        size += dataSize;
        if (!getC128SList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        c128SMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.LiteralProto)) {
        return super.equals(obj);
      }
      xla.XlaData.LiteralProto other = (xla.XlaData.LiteralProto) obj;

      if (hasShape() != other.hasShape()) return false;
      if (hasShape()) {
        if (!getShape()
            .equals(other.getShape())) return false;
      }
      if (!getPredsList()
          .equals(other.getPredsList())) return false;
      if (!getS8S()
          .equals(other.getS8S())) return false;
      if (!getU8S()
          .equals(other.getU8S())) return false;
      if (!getS32SList()
          .equals(other.getS32SList())) return false;
      if (!getS64SList()
          .equals(other.getS64SList())) return false;
      if (!getU32SList()
          .equals(other.getU32SList())) return false;
      if (!getU64SList()
          .equals(other.getU64SList())) return false;
      if (!getF32SList()
          .equals(other.getF32SList())) return false;
      if (!getF64SList()
          .equals(other.getF64SList())) return false;
      if (!getC64SList()
          .equals(other.getC64SList())) return false;
      if (!getC128SList()
          .equals(other.getC128SList())) return false;
      if (!getTupleLiteralsList()
          .equals(other.getTupleLiteralsList())) return false;
      if (!getF16S()
          .equals(other.getF16S())) return false;
      if (!getBf16S()
          .equals(other.getBf16S())) return false;
      if (!getU16S()
          .equals(other.getU16S())) return false;
      if (!getS16S()
          .equals(other.getS16S())) return false;
      if (!getSparseIndicesList()
          .equals(other.getSparseIndicesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasShape()) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShape().hashCode();
      }
      if (getPredsCount() > 0) {
        hash = (37 * hash) + PREDS_FIELD_NUMBER;
        hash = (53 * hash) + getPredsList().hashCode();
      }
      hash = (37 * hash) + S8S_FIELD_NUMBER;
      hash = (53 * hash) + getS8S().hashCode();
      hash = (37 * hash) + U8S_FIELD_NUMBER;
      hash = (53 * hash) + getU8S().hashCode();
      if (getS32SCount() > 0) {
        hash = (37 * hash) + S32S_FIELD_NUMBER;
        hash = (53 * hash) + getS32SList().hashCode();
      }
      if (getS64SCount() > 0) {
        hash = (37 * hash) + S64S_FIELD_NUMBER;
        hash = (53 * hash) + getS64SList().hashCode();
      }
      if (getU32SCount() > 0) {
        hash = (37 * hash) + U32S_FIELD_NUMBER;
        hash = (53 * hash) + getU32SList().hashCode();
      }
      if (getU64SCount() > 0) {
        hash = (37 * hash) + U64S_FIELD_NUMBER;
        hash = (53 * hash) + getU64SList().hashCode();
      }
      if (getF32SCount() > 0) {
        hash = (37 * hash) + F32S_FIELD_NUMBER;
        hash = (53 * hash) + getF32SList().hashCode();
      }
      if (getF64SCount() > 0) {
        hash = (37 * hash) + F64S_FIELD_NUMBER;
        hash = (53 * hash) + getF64SList().hashCode();
      }
      if (getC64SCount() > 0) {
        hash = (37 * hash) + C64S_FIELD_NUMBER;
        hash = (53 * hash) + getC64SList().hashCode();
      }
      if (getC128SCount() > 0) {
        hash = (37 * hash) + C128S_FIELD_NUMBER;
        hash = (53 * hash) + getC128SList().hashCode();
      }
      if (getTupleLiteralsCount() > 0) {
        hash = (37 * hash) + TUPLE_LITERALS_FIELD_NUMBER;
        hash = (53 * hash) + getTupleLiteralsList().hashCode();
      }
      hash = (37 * hash) + F16S_FIELD_NUMBER;
      hash = (53 * hash) + getF16S().hashCode();
      hash = (37 * hash) + BF16S_FIELD_NUMBER;
      hash = (53 * hash) + getBf16S().hashCode();
      hash = (37 * hash) + U16S_FIELD_NUMBER;
      hash = (53 * hash) + getU16S().hashCode();
      hash = (37 * hash) + S16S_FIELD_NUMBER;
      hash = (53 * hash) + getS16S().hashCode();
      if (getSparseIndicesCount() > 0) {
        hash = (37 * hash) + SPARSE_INDICES_FIELD_NUMBER;
        hash = (53 * hash) + getSparseIndicesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.LiteralProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.LiteralProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.LiteralProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.LiteralProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.LiteralProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.LiteralProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.LiteralProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Literals are used when the server and client need to exchange materialized
     * data / results. Literals are also used to describe constants used in
     * computations.
     * Transfers to/from the client are encoded in literal form, and the structure
     * of the repeated fields is implied by the shape.
     * </pre>
     *
     * Protobuf type {@code xla.LiteralProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.LiteralProto)
        xla.XlaData.LiteralProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_LiteralProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_LiteralProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.LiteralProto.class, xla.XlaData.LiteralProto.Builder.class);
      }

      // Construct using xla.XlaData.LiteralProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        shape_ = null;
        if (shapeBuilder_ != null) {
          shapeBuilder_.dispose();
          shapeBuilder_ = null;
        }
        preds_ = emptyBooleanList();
        s8S_ = com.google.protobuf.ByteString.EMPTY;
        u8S_ = com.google.protobuf.ByteString.EMPTY;
        s32S_ = emptyIntList();
        s64S_ = emptyLongList();
        u32S_ = emptyIntList();
        u64S_ = emptyLongList();
        f32S_ = emptyFloatList();
        f64S_ = emptyDoubleList();
        c64S_ = emptyFloatList();
        c128S_ = emptyDoubleList();
        if (tupleLiteralsBuilder_ == null) {
          tupleLiterals_ = java.util.Collections.emptyList();
        } else {
          tupleLiterals_ = null;
          tupleLiteralsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        f16S_ = com.google.protobuf.ByteString.EMPTY;
        bf16S_ = com.google.protobuf.ByteString.EMPTY;
        u16S_ = com.google.protobuf.ByteString.EMPTY;
        s16S_ = com.google.protobuf.ByteString.EMPTY;
        sparseIndices_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_LiteralProto_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.LiteralProto getDefaultInstanceForType() {
        return xla.XlaData.LiteralProto.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.LiteralProto build() {
        xla.XlaData.LiteralProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.LiteralProto buildPartial() {
        xla.XlaData.LiteralProto result = new xla.XlaData.LiteralProto(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.LiteralProto result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          preds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.preds_ = preds_;
        if (((bitField0_ & 0x00000010) != 0)) {
          s32S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.s32S_ = s32S_;
        if (((bitField0_ & 0x00000020) != 0)) {
          s64S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.s64S_ = s64S_;
        if (((bitField0_ & 0x00000040) != 0)) {
          u32S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.u32S_ = u32S_;
        if (((bitField0_ & 0x00000080) != 0)) {
          u64S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.u64S_ = u64S_;
        if (((bitField0_ & 0x00000100) != 0)) {
          f32S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.f32S_ = f32S_;
        if (((bitField0_ & 0x00000200) != 0)) {
          f64S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.f64S_ = f64S_;
        if (((bitField0_ & 0x00000400) != 0)) {
          c64S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.c64S_ = c64S_;
        if (((bitField0_ & 0x00000800) != 0)) {
          c128S_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.c128S_ = c128S_;
        if (tupleLiteralsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0)) {
            tupleLiterals_ = java.util.Collections.unmodifiableList(tupleLiterals_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.tupleLiterals_ = tupleLiterals_;
        } else {
          result.tupleLiterals_ = tupleLiteralsBuilder_.build();
        }
        if (((bitField0_ & 0x00020000) != 0)) {
          sparseIndices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.sparseIndices_ = sparseIndices_;
      }

      private void buildPartial0(xla.XlaData.LiteralProto result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.shape_ = shapeBuilder_ == null
              ? shape_
              : shapeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.s8S_ = s8S_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.u8S_ = u8S_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.f16S_ = f16S_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.bf16S_ = bf16S_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.u16S_ = u16S_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.s16S_ = s16S_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.LiteralProto) {
          return mergeFrom((xla.XlaData.LiteralProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.LiteralProto other) {
        if (other == xla.XlaData.LiteralProto.getDefaultInstance()) return this;
        if (other.hasShape()) {
          mergeShape(other.getShape());
        }
        if (!other.preds_.isEmpty()) {
          if (preds_.isEmpty()) {
            preds_ = other.preds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePredsIsMutable();
            preds_.addAll(other.preds_);
          }
          onChanged();
        }
        if (other.getS8S() != com.google.protobuf.ByteString.EMPTY) {
          setS8S(other.getS8S());
        }
        if (other.getU8S() != com.google.protobuf.ByteString.EMPTY) {
          setU8S(other.getU8S());
        }
        if (!other.s32S_.isEmpty()) {
          if (s32S_.isEmpty()) {
            s32S_ = other.s32S_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureS32SIsMutable();
            s32S_.addAll(other.s32S_);
          }
          onChanged();
        }
        if (!other.s64S_.isEmpty()) {
          if (s64S_.isEmpty()) {
            s64S_ = other.s64S_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureS64SIsMutable();
            s64S_.addAll(other.s64S_);
          }
          onChanged();
        }
        if (!other.u32S_.isEmpty()) {
          if (u32S_.isEmpty()) {
            u32S_ = other.u32S_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureU32SIsMutable();
            u32S_.addAll(other.u32S_);
          }
          onChanged();
        }
        if (!other.u64S_.isEmpty()) {
          if (u64S_.isEmpty()) {
            u64S_ = other.u64S_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureU64SIsMutable();
            u64S_.addAll(other.u64S_);
          }
          onChanged();
        }
        if (!other.f32S_.isEmpty()) {
          if (f32S_.isEmpty()) {
            f32S_ = other.f32S_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureF32SIsMutable();
            f32S_.addAll(other.f32S_);
          }
          onChanged();
        }
        if (!other.f64S_.isEmpty()) {
          if (f64S_.isEmpty()) {
            f64S_ = other.f64S_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureF64SIsMutable();
            f64S_.addAll(other.f64S_);
          }
          onChanged();
        }
        if (!other.c64S_.isEmpty()) {
          if (c64S_.isEmpty()) {
            c64S_ = other.c64S_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureC64SIsMutable();
            c64S_.addAll(other.c64S_);
          }
          onChanged();
        }
        if (!other.c128S_.isEmpty()) {
          if (c128S_.isEmpty()) {
            c128S_ = other.c128S_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureC128SIsMutable();
            c128S_.addAll(other.c128S_);
          }
          onChanged();
        }
        if (tupleLiteralsBuilder_ == null) {
          if (!other.tupleLiterals_.isEmpty()) {
            if (tupleLiterals_.isEmpty()) {
              tupleLiterals_ = other.tupleLiterals_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureTupleLiteralsIsMutable();
              tupleLiterals_.addAll(other.tupleLiterals_);
            }
            onChanged();
          }
        } else {
          if (!other.tupleLiterals_.isEmpty()) {
            if (tupleLiteralsBuilder_.isEmpty()) {
              tupleLiteralsBuilder_.dispose();
              tupleLiteralsBuilder_ = null;
              tupleLiterals_ = other.tupleLiterals_;
              bitField0_ = (bitField0_ & ~0x00001000);
              tupleLiteralsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTupleLiteralsFieldBuilder() : null;
            } else {
              tupleLiteralsBuilder_.addAllMessages(other.tupleLiterals_);
            }
          }
        }
        if (other.getF16S() != com.google.protobuf.ByteString.EMPTY) {
          setF16S(other.getF16S());
        }
        if (other.getBf16S() != com.google.protobuf.ByteString.EMPTY) {
          setBf16S(other.getBf16S());
        }
        if (other.getU16S() != com.google.protobuf.ByteString.EMPTY) {
          setU16S(other.getU16S());
        }
        if (other.getS16S() != com.google.protobuf.ByteString.EMPTY) {
          setS16S(other.getS16S());
        }
        if (!other.sparseIndices_.isEmpty()) {
          if (sparseIndices_.isEmpty()) {
            sparseIndices_ = other.sparseIndices_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureSparseIndicesIsMutable();
            sparseIndices_.addAll(other.sparseIndices_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getShapeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                boolean v = input.readBool();
                ensurePredsIsMutable();
                preds_.addBoolean(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePredsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  preds_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 26: {
                u8S_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 26
              case 32: {
                int v = input.readInt32();
                ensureS32SIsMutable();
                s32S_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureS32SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  s32S_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                long v = input.readInt64();
                ensureS64SIsMutable();
                s64S_.addLong(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureS64SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  s64S_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 48: {
                int v = input.readUInt32();
                ensureU32SIsMutable();
                u32S_.addInt(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureU32SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  u32S_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 56: {
                long v = input.readUInt64();
                ensureU64SIsMutable();
                u64S_.addLong(v);
                break;
              } // case 56
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureU64SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  u64S_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 58
              case 69: {
                float v = input.readFloat();
                ensureF32SIsMutable();
                f32S_.addFloat(v);
                break;
              } // case 69
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureF32SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  f32S_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 66
              case 73: {
                double v = input.readDouble();
                ensureF64SIsMutable();
                f64S_.addDouble(v);
                break;
              } // case 73
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureF64SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  f64S_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 74
              case 82: {
                xla.XlaData.LiteralProto m =
                    input.readMessage(
                        xla.XlaData.LiteralProto.parser(),
                        extensionRegistry);
                if (tupleLiteralsBuilder_ == null) {
                  ensureTupleLiteralsIsMutable();
                  tupleLiterals_.add(m);
                } else {
                  tupleLiteralsBuilder_.addMessage(m);
                }
                break;
              } // case 82
              case 90: {
                f16S_ = input.readBytes();
                bitField0_ |= 0x00002000;
                break;
              } // case 90
              case 101: {
                float v = input.readFloat();
                ensureC64SIsMutable();
                c64S_.addFloat(v);
                break;
              } // case 101
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureC64SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  c64S_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 98
              case 106: {
                bf16S_ = input.readBytes();
                bitField0_ |= 0x00004000;
                break;
              } // case 106
              case 112: {
                long v = input.readInt64();
                ensureSparseIndicesIsMutable();
                sparseIndices_.addLong(v);
                break;
              } // case 112
              case 114: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSparseIndicesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  sparseIndices_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 114
              case 122: {
                s8S_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 122
              case 130: {
                u16S_ = input.readBytes();
                bitField0_ |= 0x00008000;
                break;
              } // case 130
              case 138: {
                s16S_ = input.readBytes();
                bitField0_ |= 0x00010000;
                break;
              } // case 138
              case 145: {
                double v = input.readDouble();
                ensureC128SIsMutable();
                c128S_.addDouble(v);
                break;
              } // case 145
              case 146: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureC128SIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  c128S_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 146
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private xla.XlaData.ShapeProto shape_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> shapeBuilder_;
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       * @return Whether the shape field is set.
       */
      public boolean hasShape() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       * @return The shape.
       */
      public xla.XlaData.ShapeProto getShape() {
        if (shapeBuilder_ == null) {
          return shape_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : shape_;
        } else {
          return shapeBuilder_.getMessage();
        }
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      public Builder setShape(xla.XlaData.ShapeProto value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shape_ = value;
        } else {
          shapeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      public Builder setShape(
          xla.XlaData.ShapeProto.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          shape_ = builderForValue.build();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      public Builder mergeShape(xla.XlaData.ShapeProto value) {
        if (shapeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            shape_ != null &&
            shape_ != xla.XlaData.ShapeProto.getDefaultInstance()) {
            getShapeBuilder().mergeFrom(value);
          } else {
            shape_ = value;
          }
        } else {
          shapeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      public Builder clearShape() {
        bitField0_ = (bitField0_ & ~0x00000001);
        shape_ = null;
        if (shapeBuilder_ != null) {
          shapeBuilder_.dispose();
          shapeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      public xla.XlaData.ShapeProto.Builder getShapeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      public xla.XlaData.ShapeProtoOrBuilder getShapeOrBuilder() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          return shape_ == null ?
              xla.XlaData.ShapeProto.getDefaultInstance() : shape_;
        }
      }
      /**
       * <code>.xla.ShapeProto shape = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder>(
                  getShape(),
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      private com.google.protobuf.Internal.BooleanList preds_ = emptyBooleanList();
      private void ensurePredsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          preds_ = mutableCopy(preds_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @return A list containing the preds.
       */
      public java.util.List<java.lang.Boolean>
          getPredsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(preds_) : preds_;
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @return The count of preds.
       */
      public int getPredsCount() {
        return preds_.size();
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @param index The index of the element to return.
       * @return The preds at the given index.
       */
      public boolean getPreds(int index) {
        return preds_.getBoolean(index);
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @param index The index to set the value at.
       * @param value The preds to set.
       * @return This builder for chaining.
       */
      public Builder setPreds(
          int index, boolean value) {
        
        ensurePredsIsMutable();
        preds_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @param value The preds to add.
       * @return This builder for chaining.
       */
      public Builder addPreds(boolean value) {
        
        ensurePredsIsMutable();
        preds_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @param values The preds to add.
       * @return This builder for chaining.
       */
      public Builder addAllPreds(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensurePredsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, preds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bool preds = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreds() {
        preds_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString s8S_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes s8s = 15;</code>
       * @return The s8s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getS8S() {
        return s8S_;
      }
      /**
       * <code>bytes s8s = 15;</code>
       * @param value The s8s to set.
       * @return This builder for chaining.
       */
      public Builder setS8S(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        s8S_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>bytes s8s = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearS8S() {
        bitField0_ = (bitField0_ & ~0x00000004);
        s8S_ = getDefaultInstance().getS8S();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString u8S_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes u8s = 3;</code>
       * @return The u8s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getU8S() {
        return u8S_;
      }
      /**
       * <code>bytes u8s = 3;</code>
       * @param value The u8s to set.
       * @return This builder for chaining.
       */
      public Builder setU8S(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        u8S_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bytes u8s = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearU8S() {
        bitField0_ = (bitField0_ & ~0x00000008);
        u8S_ = getDefaultInstance().getU8S();
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList s32S_ = emptyIntList();
      private void ensureS32SIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          s32S_ = mutableCopy(s32S_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @return A list containing the s32s.
       */
      public java.util.List<java.lang.Integer>
          getS32SList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(s32S_) : s32S_;
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @return The count of s32s.
       */
      public int getS32SCount() {
        return s32S_.size();
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @param index The index of the element to return.
       * @return The s32s at the given index.
       */
      public int getS32S(int index) {
        return s32S_.getInt(index);
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @param index The index to set the value at.
       * @param value The s32s to set.
       * @return This builder for chaining.
       */
      public Builder setS32S(
          int index, int value) {
        
        ensureS32SIsMutable();
        s32S_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @param value The s32s to add.
       * @return This builder for chaining.
       */
      public Builder addS32S(int value) {
        
        ensureS32SIsMutable();
        s32S_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @param values The s32s to add.
       * @return This builder for chaining.
       */
      public Builder addAllS32S(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureS32SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, s32S_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 s32s = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearS32S() {
        s32S_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList s64S_ = emptyLongList();
      private void ensureS64SIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          s64S_ = mutableCopy(s64S_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @return A list containing the s64s.
       */
      public java.util.List<java.lang.Long>
          getS64SList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(s64S_) : s64S_;
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @return The count of s64s.
       */
      public int getS64SCount() {
        return s64S_.size();
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @param index The index of the element to return.
       * @return The s64s at the given index.
       */
      public long getS64S(int index) {
        return s64S_.getLong(index);
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @param index The index to set the value at.
       * @param value The s64s to set.
       * @return This builder for chaining.
       */
      public Builder setS64S(
          int index, long value) {
        
        ensureS64SIsMutable();
        s64S_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @param value The s64s to add.
       * @return This builder for chaining.
       */
      public Builder addS64S(long value) {
        
        ensureS64SIsMutable();
        s64S_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @param values The s64s to add.
       * @return This builder for chaining.
       */
      public Builder addAllS64S(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureS64SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, s64S_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 s64s = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearS64S() {
        s64S_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList u32S_ = emptyIntList();
      private void ensureU32SIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          u32S_ = mutableCopy(u32S_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @return A list containing the u32s.
       */
      public java.util.List<java.lang.Integer>
          getU32SList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(u32S_) : u32S_;
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @return The count of u32s.
       */
      public int getU32SCount() {
        return u32S_.size();
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @param index The index of the element to return.
       * @return The u32s at the given index.
       */
      public int getU32S(int index) {
        return u32S_.getInt(index);
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @param index The index to set the value at.
       * @param value The u32s to set.
       * @return This builder for chaining.
       */
      public Builder setU32S(
          int index, int value) {
        
        ensureU32SIsMutable();
        u32S_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @param value The u32s to add.
       * @return This builder for chaining.
       */
      public Builder addU32S(int value) {
        
        ensureU32SIsMutable();
        u32S_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @param values The u32s to add.
       * @return This builder for chaining.
       */
      public Builder addAllU32S(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureU32SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, u32S_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 u32s = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearU32S() {
        u32S_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList u64S_ = emptyLongList();
      private void ensureU64SIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          u64S_ = mutableCopy(u64S_);
          bitField0_ |= 0x00000080;
        }
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @return A list containing the u64s.
       */
      public java.util.List<java.lang.Long>
          getU64SList() {
        return ((bitField0_ & 0x00000080) != 0) ?
                 java.util.Collections.unmodifiableList(u64S_) : u64S_;
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @return The count of u64s.
       */
      public int getU64SCount() {
        return u64S_.size();
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @param index The index of the element to return.
       * @return The u64s at the given index.
       */
      public long getU64S(int index) {
        return u64S_.getLong(index);
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @param index The index to set the value at.
       * @param value The u64s to set.
       * @return This builder for chaining.
       */
      public Builder setU64S(
          int index, long value) {
        
        ensureU64SIsMutable();
        u64S_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @param value The u64s to add.
       * @return This builder for chaining.
       */
      public Builder addU64S(long value) {
        
        ensureU64SIsMutable();
        u64S_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @param values The u64s to add.
       * @return This builder for chaining.
       */
      public Builder addAllU64S(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureU64SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, u64S_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 u64s = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearU64S() {
        u64S_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList f32S_ = emptyFloatList();
      private void ensureF32SIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          f32S_ = mutableCopy(f32S_);
          bitField0_ |= 0x00000100;
        }
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @return A list containing the f32s.
       */
      public java.util.List<java.lang.Float>
          getF32SList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(f32S_) : f32S_;
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @return The count of f32s.
       */
      public int getF32SCount() {
        return f32S_.size();
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @param index The index of the element to return.
       * @return The f32s at the given index.
       */
      public float getF32S(int index) {
        return f32S_.getFloat(index);
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @param index The index to set the value at.
       * @param value The f32s to set.
       * @return This builder for chaining.
       */
      public Builder setF32S(
          int index, float value) {
        
        ensureF32SIsMutable();
        f32S_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @param value The f32s to add.
       * @return This builder for chaining.
       */
      public Builder addF32S(float value) {
        
        ensureF32SIsMutable();
        f32S_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @param values The f32s to add.
       * @return This builder for chaining.
       */
      public Builder addAllF32S(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureF32SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, f32S_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float f32s = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearF32S() {
        f32S_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList f64S_ = emptyDoubleList();
      private void ensureF64SIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          f64S_ = mutableCopy(f64S_);
          bitField0_ |= 0x00000200;
        }
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @return A list containing the f64s.
       */
      public java.util.List<java.lang.Double>
          getF64SList() {
        return ((bitField0_ & 0x00000200) != 0) ?
                 java.util.Collections.unmodifiableList(f64S_) : f64S_;
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @return The count of f64s.
       */
      public int getF64SCount() {
        return f64S_.size();
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @param index The index of the element to return.
       * @return The f64s at the given index.
       */
      public double getF64S(int index) {
        return f64S_.getDouble(index);
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @param index The index to set the value at.
       * @param value The f64s to set.
       * @return This builder for chaining.
       */
      public Builder setF64S(
          int index, double value) {
        
        ensureF64SIsMutable();
        f64S_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @param value The f64s to add.
       * @return This builder for chaining.
       */
      public Builder addF64S(double value) {
        
        ensureF64SIsMutable();
        f64S_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @param values The f64s to add.
       * @return This builder for chaining.
       */
      public Builder addAllF64S(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureF64SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, f64S_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double f64s = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearF64S() {
        f64S_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList c64S_ = emptyFloatList();
      private void ensureC64SIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          c64S_ = mutableCopy(c64S_);
          bitField0_ |= 0x00000400;
        }
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @return A list containing the c64s.
       */
      public java.util.List<java.lang.Float>
          getC64SList() {
        return ((bitField0_ & 0x00000400) != 0) ?
                 java.util.Collections.unmodifiableList(c64S_) : c64S_;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @return The count of c64s.
       */
      public int getC64SCount() {
        return c64S_.size();
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @param index The index of the element to return.
       * @return The c64s at the given index.
       */
      public float getC64S(int index) {
        return c64S_.getFloat(index);
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @param index The index to set the value at.
       * @param value The c64s to set.
       * @return This builder for chaining.
       */
      public Builder setC64S(
          int index, float value) {
        
        ensureC64SIsMutable();
        c64S_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @param value The c64s to add.
       * @return This builder for chaining.
       */
      public Builder addC64S(float value) {
        
        ensureC64SIsMutable();
        c64S_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @param values The c64s to add.
       * @return This builder for chaining.
       */
      public Builder addAllC64S(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureC64SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, c64S_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag floats.
       * </pre>
       *
       * <code>repeated float c64s = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearC64S() {
        c64S_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList c128S_ = emptyDoubleList();
      private void ensureC128SIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          c128S_ = mutableCopy(c128S_);
          bitField0_ |= 0x00000800;
        }
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @return A list containing the c128s.
       */
      public java.util.List<java.lang.Double>
          getC128SList() {
        return ((bitField0_ & 0x00000800) != 0) ?
                 java.util.Collections.unmodifiableList(c128S_) : c128S_;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @return The count of c128s.
       */
      public int getC128SCount() {
        return c128S_.size();
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @param index The index of the element to return.
       * @return The c128s at the given index.
       */
      public double getC128S(int index) {
        return c128S_.getDouble(index);
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @param index The index to set the value at.
       * @param value The c128s to set.
       * @return This builder for chaining.
       */
      public Builder setC128S(
          int index, double value) {
        
        ensureC128SIsMutable();
        c128S_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @param value The c128s to add.
       * @return This builder for chaining.
       */
      public Builder addC128S(double value) {
        
        ensureC128SIsMutable();
        c128S_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @param values The c128s to add.
       * @return This builder for chaining.
       */
      public Builder addAllC128S(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureC128SIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, c128S_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stored as interleaved real, imag doubles.
       * </pre>
       *
       * <code>repeated double c128s = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearC128S() {
        c128S_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<xla.XlaData.LiteralProto> tupleLiterals_ =
        java.util.Collections.emptyList();
      private void ensureTupleLiteralsIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          tupleLiterals_ = new java.util.ArrayList<xla.XlaData.LiteralProto>(tupleLiterals_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder> tupleLiteralsBuilder_;

      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public java.util.List<xla.XlaData.LiteralProto> getTupleLiteralsList() {
        if (tupleLiteralsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tupleLiterals_);
        } else {
          return tupleLiteralsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public int getTupleLiteralsCount() {
        if (tupleLiteralsBuilder_ == null) {
          return tupleLiterals_.size();
        } else {
          return tupleLiteralsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public xla.XlaData.LiteralProto getTupleLiterals(int index) {
        if (tupleLiteralsBuilder_ == null) {
          return tupleLiterals_.get(index);
        } else {
          return tupleLiteralsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder setTupleLiterals(
          int index, xla.XlaData.LiteralProto value) {
        if (tupleLiteralsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.set(index, value);
          onChanged();
        } else {
          tupleLiteralsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder setTupleLiterals(
          int index, xla.XlaData.LiteralProto.Builder builderForValue) {
        if (tupleLiteralsBuilder_ == null) {
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.set(index, builderForValue.build());
          onChanged();
        } else {
          tupleLiteralsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder addTupleLiterals(xla.XlaData.LiteralProto value) {
        if (tupleLiteralsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.add(value);
          onChanged();
        } else {
          tupleLiteralsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder addTupleLiterals(
          int index, xla.XlaData.LiteralProto value) {
        if (tupleLiteralsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.add(index, value);
          onChanged();
        } else {
          tupleLiteralsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder addTupleLiterals(
          xla.XlaData.LiteralProto.Builder builderForValue) {
        if (tupleLiteralsBuilder_ == null) {
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.add(builderForValue.build());
          onChanged();
        } else {
          tupleLiteralsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder addTupleLiterals(
          int index, xla.XlaData.LiteralProto.Builder builderForValue) {
        if (tupleLiteralsBuilder_ == null) {
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.add(index, builderForValue.build());
          onChanged();
        } else {
          tupleLiteralsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder addAllTupleLiterals(
          java.lang.Iterable<? extends xla.XlaData.LiteralProto> values) {
        if (tupleLiteralsBuilder_ == null) {
          ensureTupleLiteralsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tupleLiterals_);
          onChanged();
        } else {
          tupleLiteralsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder clearTupleLiterals() {
        if (tupleLiteralsBuilder_ == null) {
          tupleLiterals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          tupleLiteralsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public Builder removeTupleLiterals(int index) {
        if (tupleLiteralsBuilder_ == null) {
          ensureTupleLiteralsIsMutable();
          tupleLiterals_.remove(index);
          onChanged();
        } else {
          tupleLiteralsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public xla.XlaData.LiteralProto.Builder getTupleLiteralsBuilder(
          int index) {
        return getTupleLiteralsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public xla.XlaData.LiteralProtoOrBuilder getTupleLiteralsOrBuilder(
          int index) {
        if (tupleLiteralsBuilder_ == null) {
          return tupleLiterals_.get(index);  } else {
          return tupleLiteralsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public java.util.List<? extends xla.XlaData.LiteralProtoOrBuilder> 
           getTupleLiteralsOrBuilderList() {
        if (tupleLiteralsBuilder_ != null) {
          return tupleLiteralsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tupleLiterals_);
        }
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public xla.XlaData.LiteralProto.Builder addTupleLiteralsBuilder() {
        return getTupleLiteralsFieldBuilder().addBuilder(
            xla.XlaData.LiteralProto.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public xla.XlaData.LiteralProto.Builder addTupleLiteralsBuilder(
          int index) {
        return getTupleLiteralsFieldBuilder().addBuilder(
            index, xla.XlaData.LiteralProto.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.LiteralProto tuple_literals = 10;</code>
       */
      public java.util.List<xla.XlaData.LiteralProto.Builder> 
           getTupleLiteralsBuilderList() {
        return getTupleLiteralsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder> 
          getTupleLiteralsFieldBuilder() {
        if (tupleLiteralsBuilder_ == null) {
          tupleLiteralsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder>(
                  tupleLiterals_,
                  ((bitField0_ & 0x00001000) != 0),
                  getParentForChildren(),
                  isClean());
          tupleLiterals_ = null;
        }
        return tupleLiteralsBuilder_;
      }

      private com.google.protobuf.ByteString f16S_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * The F16s, BF16s, U16s and S16s are encoded in little endian byte order
       * </pre>
       *
       * <code>bytes f16s = 11;</code>
       * @return The f16s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getF16S() {
        return f16S_;
      }
      /**
       * <pre>
       * The F16s, BF16s, U16s and S16s are encoded in little endian byte order
       * </pre>
       *
       * <code>bytes f16s = 11;</code>
       * @param value The f16s to set.
       * @return This builder for chaining.
       */
      public Builder setF16S(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        f16S_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The F16s, BF16s, U16s and S16s are encoded in little endian byte order
       * </pre>
       *
       * <code>bytes f16s = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearF16S() {
        bitField0_ = (bitField0_ & ~0x00002000);
        f16S_ = getDefaultInstance().getF16S();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString bf16S_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes bf16s = 13;</code>
       * @return The bf16s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBf16S() {
        return bf16S_;
      }
      /**
       * <code>bytes bf16s = 13;</code>
       * @param value The bf16s to set.
       * @return This builder for chaining.
       */
      public Builder setBf16S(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        bf16S_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bf16s = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBf16S() {
        bitField0_ = (bitField0_ & ~0x00004000);
        bf16S_ = getDefaultInstance().getBf16S();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString u16S_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes u16s = 16;</code>
       * @return The u16s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getU16S() {
        return u16S_;
      }
      /**
       * <code>bytes u16s = 16;</code>
       * @param value The u16s to set.
       * @return This builder for chaining.
       */
      public Builder setU16S(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        u16S_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>bytes u16s = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearU16S() {
        bitField0_ = (bitField0_ & ~0x00008000);
        u16S_ = getDefaultInstance().getU16S();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString s16S_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes s16s = 17;</code>
       * @return The s16s.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getS16S() {
        return s16S_;
      }
      /**
       * <code>bytes s16s = 17;</code>
       * @param value The s16s to set.
       * @return This builder for chaining.
       */
      public Builder setS16S(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        s16S_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>bytes s16s = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearS16S() {
        bitField0_ = (bitField0_ & ~0x00010000);
        s16S_ = getDefaultInstance().getS16S();
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList sparseIndices_ = emptyLongList();
      private void ensureSparseIndicesIsMutable() {
        if (!((bitField0_ & 0x00020000) != 0)) {
          sparseIndices_ = mutableCopy(sparseIndices_);
          bitField0_ |= 0x00020000;
        }
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @return A list containing the sparseIndices.
       */
      public java.util.List<java.lang.Long>
          getSparseIndicesList() {
        return ((bitField0_ & 0x00020000) != 0) ?
                 java.util.Collections.unmodifiableList(sparseIndices_) : sparseIndices_;
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @return The count of sparseIndices.
       */
      public int getSparseIndicesCount() {
        return sparseIndices_.size();
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @param index The index of the element to return.
       * @return The sparseIndices at the given index.
       */
      public long getSparseIndices(int index) {
        return sparseIndices_.getLong(index);
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @param index The index to set the value at.
       * @param value The sparseIndices to set.
       * @return This builder for chaining.
       */
      public Builder setSparseIndices(
          int index, long value) {
        
        ensureSparseIndicesIsMutable();
        sparseIndices_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @param value The sparseIndices to add.
       * @return This builder for chaining.
       */
      public Builder addSparseIndices(long value) {
        
        ensureSparseIndicesIsMutable();
        sparseIndices_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @param values The sparseIndices to add.
       * @return This builder for chaining.
       */
      public Builder addAllSparseIndices(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSparseIndicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sparseIndices_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Next = 19
       * </pre>
       *
       * <code>repeated int64 sparse_indices = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSparseIndices() {
        sparseIndices_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.LiteralProto)
    }

    // @@protoc_insertion_point(class_scope:xla.LiteralProto)
    private static final xla.XlaData.LiteralProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.LiteralProto();
    }

    public static xla.XlaData.LiteralProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LiteralProto>
        PARSER = new com.google.protobuf.AbstractParser<LiteralProto>() {
      @java.lang.Override
      public LiteralProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LiteralProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LiteralProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.LiteralProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WindowDimensionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.WindowDimension)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The size of the window in this dimension. For a rectangle, this would be
     * the width or height.
     * </pre>
     *
     * <code>int64 size = 1;</code>
     * @return The size.
     */
    long getSize();

    /**
     * <pre>
     * The stride at which the window moves across the base area in this
     * dimension. In other words, this is the spacing between different
     * positions of the window in this dimension.
     * </pre>
     *
     * <code>int64 stride = 2;</code>
     * @return The stride.
     */
    long getStride();

    /**
     * <pre>
     * If positive, means the amount of padding to add to the base area at the low
     * end of this dimension; if negative, its negative means the number of
     * elements removed from the low end of this dimension. For example, in the
     * horizontal dimension of a rectangle, this would be the number of padding
     * values to pad on the left, given that indices increase when going right.
     * The actual padding value depends upon the context. Convolution pads with
     * zeros. ReduceWindow and SelectAndScatter pads with the reduce function's
     * init value.
     * </pre>
     *
     * <code>int64 padding_low = 3;</code>
     * @return The paddingLow.
     */
    long getPaddingLow();

    /**
     * <pre>
     * As padding_low, but on the high end of this dimension. For example, in the
     * horizontal dimension of a rectangle, this would be the number of values to
     * pad on the right, given that indices increase when going right.
     * </pre>
     *
     * <code>int64 padding_high = 4;</code>
     * @return The paddingHigh.
     */
    long getPaddingHigh();

    /**
     * <pre>
     * Dilation factor of the sliding window in this dimension. A dilation factor
     * of 1 means no dilation. window_dilation - 1 no-op entries ("holes") are
     * implicitly placed between each kernel element. This value may not be less
     * than 1. See documentation for convolution.
     * </pre>
     *
     * <code>int64 window_dilation = 5;</code>
     * @return The windowDilation.
     */
    long getWindowDilation();

    /**
     * <pre>
     * Dilation factor of the base area in this dimension. A dilation factor of 1
     * means no dilation. base_dilation - 1 no-op entries ("holes") are implicitly
     * placed between each base area element. This value may not be less than 1.
     * See documentation for convolution.
     * </pre>
     *
     * <code>int64 base_dilation = 6;</code>
     * @return The baseDilation.
     */
    long getBaseDilation();

    /**
     * <pre>
     * Window reversal means that this dimension was logically reversed before the
     * operation.
     * </pre>
     *
     * <code>bool window_reversal = 7;</code>
     * @return The windowReversal.
     */
    boolean getWindowReversal();
  }
  /**
   * Protobuf type {@code xla.WindowDimension}
   */
  public static final class WindowDimension extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.WindowDimension)
      WindowDimensionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WindowDimension.newBuilder() to construct.
    private WindowDimension(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WindowDimension() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WindowDimension();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_WindowDimension_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_WindowDimension_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.WindowDimension.class, xla.XlaData.WindowDimension.Builder.class);
    }

    public static final int SIZE_FIELD_NUMBER = 1;
    private long size_ = 0L;
    /**
     * <pre>
     * The size of the window in this dimension. For a rectangle, this would be
     * the width or height.
     * </pre>
     *
     * <code>int64 size = 1;</code>
     * @return The size.
     */
    @java.lang.Override
    public long getSize() {
      return size_;
    }

    public static final int STRIDE_FIELD_NUMBER = 2;
    private long stride_ = 0L;
    /**
     * <pre>
     * The stride at which the window moves across the base area in this
     * dimension. In other words, this is the spacing between different
     * positions of the window in this dimension.
     * </pre>
     *
     * <code>int64 stride = 2;</code>
     * @return The stride.
     */
    @java.lang.Override
    public long getStride() {
      return stride_;
    }

    public static final int PADDING_LOW_FIELD_NUMBER = 3;
    private long paddingLow_ = 0L;
    /**
     * <pre>
     * If positive, means the amount of padding to add to the base area at the low
     * end of this dimension; if negative, its negative means the number of
     * elements removed from the low end of this dimension. For example, in the
     * horizontal dimension of a rectangle, this would be the number of padding
     * values to pad on the left, given that indices increase when going right.
     * The actual padding value depends upon the context. Convolution pads with
     * zeros. ReduceWindow and SelectAndScatter pads with the reduce function's
     * init value.
     * </pre>
     *
     * <code>int64 padding_low = 3;</code>
     * @return The paddingLow.
     */
    @java.lang.Override
    public long getPaddingLow() {
      return paddingLow_;
    }

    public static final int PADDING_HIGH_FIELD_NUMBER = 4;
    private long paddingHigh_ = 0L;
    /**
     * <pre>
     * As padding_low, but on the high end of this dimension. For example, in the
     * horizontal dimension of a rectangle, this would be the number of values to
     * pad on the right, given that indices increase when going right.
     * </pre>
     *
     * <code>int64 padding_high = 4;</code>
     * @return The paddingHigh.
     */
    @java.lang.Override
    public long getPaddingHigh() {
      return paddingHigh_;
    }

    public static final int WINDOW_DILATION_FIELD_NUMBER = 5;
    private long windowDilation_ = 0L;
    /**
     * <pre>
     * Dilation factor of the sliding window in this dimension. A dilation factor
     * of 1 means no dilation. window_dilation - 1 no-op entries ("holes") are
     * implicitly placed between each kernel element. This value may not be less
     * than 1. See documentation for convolution.
     * </pre>
     *
     * <code>int64 window_dilation = 5;</code>
     * @return The windowDilation.
     */
    @java.lang.Override
    public long getWindowDilation() {
      return windowDilation_;
    }

    public static final int BASE_DILATION_FIELD_NUMBER = 6;
    private long baseDilation_ = 0L;
    /**
     * <pre>
     * Dilation factor of the base area in this dimension. A dilation factor of 1
     * means no dilation. base_dilation - 1 no-op entries ("holes") are implicitly
     * placed between each base area element. This value may not be less than 1.
     * See documentation for convolution.
     * </pre>
     *
     * <code>int64 base_dilation = 6;</code>
     * @return The baseDilation.
     */
    @java.lang.Override
    public long getBaseDilation() {
      return baseDilation_;
    }

    public static final int WINDOW_REVERSAL_FIELD_NUMBER = 7;
    private boolean windowReversal_ = false;
    /**
     * <pre>
     * Window reversal means that this dimension was logically reversed before the
     * operation.
     * </pre>
     *
     * <code>bool window_reversal = 7;</code>
     * @return The windowReversal.
     */
    @java.lang.Override
    public boolean getWindowReversal() {
      return windowReversal_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (size_ != 0L) {
        output.writeInt64(1, size_);
      }
      if (stride_ != 0L) {
        output.writeInt64(2, stride_);
      }
      if (paddingLow_ != 0L) {
        output.writeInt64(3, paddingLow_);
      }
      if (paddingHigh_ != 0L) {
        output.writeInt64(4, paddingHigh_);
      }
      if (windowDilation_ != 0L) {
        output.writeInt64(5, windowDilation_);
      }
      if (baseDilation_ != 0L) {
        output.writeInt64(6, baseDilation_);
      }
      if (windowReversal_ != false) {
        output.writeBool(7, windowReversal_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (size_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, size_);
      }
      if (stride_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, stride_);
      }
      if (paddingLow_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, paddingLow_);
      }
      if (paddingHigh_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, paddingHigh_);
      }
      if (windowDilation_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, windowDilation_);
      }
      if (baseDilation_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, baseDilation_);
      }
      if (windowReversal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, windowReversal_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.WindowDimension)) {
        return super.equals(obj);
      }
      xla.XlaData.WindowDimension other = (xla.XlaData.WindowDimension) obj;

      if (getSize()
          != other.getSize()) return false;
      if (getStride()
          != other.getStride()) return false;
      if (getPaddingLow()
          != other.getPaddingLow()) return false;
      if (getPaddingHigh()
          != other.getPaddingHigh()) return false;
      if (getWindowDilation()
          != other.getWindowDilation()) return false;
      if (getBaseDilation()
          != other.getBaseDilation()) return false;
      if (getWindowReversal()
          != other.getWindowReversal()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSize());
      hash = (37 * hash) + STRIDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStride());
      hash = (37 * hash) + PADDING_LOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPaddingLow());
      hash = (37 * hash) + PADDING_HIGH_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getPaddingHigh());
      hash = (37 * hash) + WINDOW_DILATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getWindowDilation());
      hash = (37 * hash) + BASE_DILATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBaseDilation());
      hash = (37 * hash) + WINDOW_REVERSAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWindowReversal());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.WindowDimension parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.WindowDimension parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.WindowDimension parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.WindowDimension parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.WindowDimension parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.WindowDimension parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.WindowDimension prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xla.WindowDimension}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.WindowDimension)
        xla.XlaData.WindowDimensionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_WindowDimension_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_WindowDimension_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.WindowDimension.class, xla.XlaData.WindowDimension.Builder.class);
      }

      // Construct using xla.XlaData.WindowDimension.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        size_ = 0L;
        stride_ = 0L;
        paddingLow_ = 0L;
        paddingHigh_ = 0L;
        windowDilation_ = 0L;
        baseDilation_ = 0L;
        windowReversal_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_WindowDimension_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.WindowDimension getDefaultInstanceForType() {
        return xla.XlaData.WindowDimension.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.WindowDimension build() {
        xla.XlaData.WindowDimension result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.WindowDimension buildPartial() {
        xla.XlaData.WindowDimension result = new xla.XlaData.WindowDimension(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.WindowDimension result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.size_ = size_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.stride_ = stride_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.paddingLow_ = paddingLow_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.paddingHigh_ = paddingHigh_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.windowDilation_ = windowDilation_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.baseDilation_ = baseDilation_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.windowReversal_ = windowReversal_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.WindowDimension) {
          return mergeFrom((xla.XlaData.WindowDimension)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.WindowDimension other) {
        if (other == xla.XlaData.WindowDimension.getDefaultInstance()) return this;
        if (other.getSize() != 0L) {
          setSize(other.getSize());
        }
        if (other.getStride() != 0L) {
          setStride(other.getStride());
        }
        if (other.getPaddingLow() != 0L) {
          setPaddingLow(other.getPaddingLow());
        }
        if (other.getPaddingHigh() != 0L) {
          setPaddingHigh(other.getPaddingHigh());
        }
        if (other.getWindowDilation() != 0L) {
          setWindowDilation(other.getWindowDilation());
        }
        if (other.getBaseDilation() != 0L) {
          setBaseDilation(other.getBaseDilation());
        }
        if (other.getWindowReversal() != false) {
          setWindowReversal(other.getWindowReversal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                size_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                stride_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                paddingLow_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                paddingHigh_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                windowDilation_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                baseDilation_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                windowReversal_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long size_ ;
      /**
       * <pre>
       * The size of the window in this dimension. For a rectangle, this would be
       * the width or height.
       * </pre>
       *
       * <code>int64 size = 1;</code>
       * @return The size.
       */
      @java.lang.Override
      public long getSize() {
        return size_;
      }
      /**
       * <pre>
       * The size of the window in this dimension. For a rectangle, this would be
       * the width or height.
       * </pre>
       *
       * <code>int64 size = 1;</code>
       * @param value The size to set.
       * @return This builder for chaining.
       */
      public Builder setSize(long value) {
        
        size_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of the window in this dimension. For a rectangle, this would be
       * the width or height.
       * </pre>
       *
       * <code>int64 size = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0L;
        onChanged();
        return this;
      }

      private long stride_ ;
      /**
       * <pre>
       * The stride at which the window moves across the base area in this
       * dimension. In other words, this is the spacing between different
       * positions of the window in this dimension.
       * </pre>
       *
       * <code>int64 stride = 2;</code>
       * @return The stride.
       */
      @java.lang.Override
      public long getStride() {
        return stride_;
      }
      /**
       * <pre>
       * The stride at which the window moves across the base area in this
       * dimension. In other words, this is the spacing between different
       * positions of the window in this dimension.
       * </pre>
       *
       * <code>int64 stride = 2;</code>
       * @param value The stride to set.
       * @return This builder for chaining.
       */
      public Builder setStride(long value) {
        
        stride_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The stride at which the window moves across the base area in this
       * dimension. In other words, this is the spacing between different
       * positions of the window in this dimension.
       * </pre>
       *
       * <code>int64 stride = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStride() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stride_ = 0L;
        onChanged();
        return this;
      }

      private long paddingLow_ ;
      /**
       * <pre>
       * If positive, means the amount of padding to add to the base area at the low
       * end of this dimension; if negative, its negative means the number of
       * elements removed from the low end of this dimension. For example, in the
       * horizontal dimension of a rectangle, this would be the number of padding
       * values to pad on the left, given that indices increase when going right.
       * The actual padding value depends upon the context. Convolution pads with
       * zeros. ReduceWindow and SelectAndScatter pads with the reduce function's
       * init value.
       * </pre>
       *
       * <code>int64 padding_low = 3;</code>
       * @return The paddingLow.
       */
      @java.lang.Override
      public long getPaddingLow() {
        return paddingLow_;
      }
      /**
       * <pre>
       * If positive, means the amount of padding to add to the base area at the low
       * end of this dimension; if negative, its negative means the number of
       * elements removed from the low end of this dimension. For example, in the
       * horizontal dimension of a rectangle, this would be the number of padding
       * values to pad on the left, given that indices increase when going right.
       * The actual padding value depends upon the context. Convolution pads with
       * zeros. ReduceWindow and SelectAndScatter pads with the reduce function's
       * init value.
       * </pre>
       *
       * <code>int64 padding_low = 3;</code>
       * @param value The paddingLow to set.
       * @return This builder for chaining.
       */
      public Builder setPaddingLow(long value) {
        
        paddingLow_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If positive, means the amount of padding to add to the base area at the low
       * end of this dimension; if negative, its negative means the number of
       * elements removed from the low end of this dimension. For example, in the
       * horizontal dimension of a rectangle, this would be the number of padding
       * values to pad on the left, given that indices increase when going right.
       * The actual padding value depends upon the context. Convolution pads with
       * zeros. ReduceWindow and SelectAndScatter pads with the reduce function's
       * init value.
       * </pre>
       *
       * <code>int64 padding_low = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPaddingLow() {
        bitField0_ = (bitField0_ & ~0x00000004);
        paddingLow_ = 0L;
        onChanged();
        return this;
      }

      private long paddingHigh_ ;
      /**
       * <pre>
       * As padding_low, but on the high end of this dimension. For example, in the
       * horizontal dimension of a rectangle, this would be the number of values to
       * pad on the right, given that indices increase when going right.
       * </pre>
       *
       * <code>int64 padding_high = 4;</code>
       * @return The paddingHigh.
       */
      @java.lang.Override
      public long getPaddingHigh() {
        return paddingHigh_;
      }
      /**
       * <pre>
       * As padding_low, but on the high end of this dimension. For example, in the
       * horizontal dimension of a rectangle, this would be the number of values to
       * pad on the right, given that indices increase when going right.
       * </pre>
       *
       * <code>int64 padding_high = 4;</code>
       * @param value The paddingHigh to set.
       * @return This builder for chaining.
       */
      public Builder setPaddingHigh(long value) {
        
        paddingHigh_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * As padding_low, but on the high end of this dimension. For example, in the
       * horizontal dimension of a rectangle, this would be the number of values to
       * pad on the right, given that indices increase when going right.
       * </pre>
       *
       * <code>int64 padding_high = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPaddingHigh() {
        bitField0_ = (bitField0_ & ~0x00000008);
        paddingHigh_ = 0L;
        onChanged();
        return this;
      }

      private long windowDilation_ ;
      /**
       * <pre>
       * Dilation factor of the sliding window in this dimension. A dilation factor
       * of 1 means no dilation. window_dilation - 1 no-op entries ("holes") are
       * implicitly placed between each kernel element. This value may not be less
       * than 1. See documentation for convolution.
       * </pre>
       *
       * <code>int64 window_dilation = 5;</code>
       * @return The windowDilation.
       */
      @java.lang.Override
      public long getWindowDilation() {
        return windowDilation_;
      }
      /**
       * <pre>
       * Dilation factor of the sliding window in this dimension. A dilation factor
       * of 1 means no dilation. window_dilation - 1 no-op entries ("holes") are
       * implicitly placed between each kernel element. This value may not be less
       * than 1. See documentation for convolution.
       * </pre>
       *
       * <code>int64 window_dilation = 5;</code>
       * @param value The windowDilation to set.
       * @return This builder for chaining.
       */
      public Builder setWindowDilation(long value) {
        
        windowDilation_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dilation factor of the sliding window in this dimension. A dilation factor
       * of 1 means no dilation. window_dilation - 1 no-op entries ("holes") are
       * implicitly placed between each kernel element. This value may not be less
       * than 1. See documentation for convolution.
       * </pre>
       *
       * <code>int64 window_dilation = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowDilation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        windowDilation_ = 0L;
        onChanged();
        return this;
      }

      private long baseDilation_ ;
      /**
       * <pre>
       * Dilation factor of the base area in this dimension. A dilation factor of 1
       * means no dilation. base_dilation - 1 no-op entries ("holes") are implicitly
       * placed between each base area element. This value may not be less than 1.
       * See documentation for convolution.
       * </pre>
       *
       * <code>int64 base_dilation = 6;</code>
       * @return The baseDilation.
       */
      @java.lang.Override
      public long getBaseDilation() {
        return baseDilation_;
      }
      /**
       * <pre>
       * Dilation factor of the base area in this dimension. A dilation factor of 1
       * means no dilation. base_dilation - 1 no-op entries ("holes") are implicitly
       * placed between each base area element. This value may not be less than 1.
       * See documentation for convolution.
       * </pre>
       *
       * <code>int64 base_dilation = 6;</code>
       * @param value The baseDilation to set.
       * @return This builder for chaining.
       */
      public Builder setBaseDilation(long value) {
        
        baseDilation_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Dilation factor of the base area in this dimension. A dilation factor of 1
       * means no dilation. base_dilation - 1 no-op entries ("holes") are implicitly
       * placed between each base area element. This value may not be less than 1.
       * See documentation for convolution.
       * </pre>
       *
       * <code>int64 base_dilation = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaseDilation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        baseDilation_ = 0L;
        onChanged();
        return this;
      }

      private boolean windowReversal_ ;
      /**
       * <pre>
       * Window reversal means that this dimension was logically reversed before the
       * operation.
       * </pre>
       *
       * <code>bool window_reversal = 7;</code>
       * @return The windowReversal.
       */
      @java.lang.Override
      public boolean getWindowReversal() {
        return windowReversal_;
      }
      /**
       * <pre>
       * Window reversal means that this dimension was logically reversed before the
       * operation.
       * </pre>
       *
       * <code>bool window_reversal = 7;</code>
       * @param value The windowReversal to set.
       * @return This builder for chaining.
       */
      public Builder setWindowReversal(boolean value) {
        
        windowReversal_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Window reversal means that this dimension was logically reversed before the
       * operation.
       * </pre>
       *
       * <code>bool window_reversal = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowReversal() {
        bitField0_ = (bitField0_ & ~0x00000040);
        windowReversal_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.WindowDimension)
    }

    // @@protoc_insertion_point(class_scope:xla.WindowDimension)
    private static final xla.XlaData.WindowDimension DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.WindowDimension();
    }

    public static xla.XlaData.WindowDimension getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WindowDimension>
        PARSER = new com.google.protobuf.AbstractParser<WindowDimension>() {
      @java.lang.Override
      public WindowDimension parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WindowDimension> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WindowDimension> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.WindowDimension getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WindowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.Window)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    java.util.List<xla.XlaData.WindowDimension> 
        getDimensionsList();
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    xla.XlaData.WindowDimension getDimensions(int index);
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    int getDimensionsCount();
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    java.util.List<? extends xla.XlaData.WindowDimensionOrBuilder> 
        getDimensionsOrBuilderList();
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    xla.XlaData.WindowDimensionOrBuilder getDimensionsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Describes the windowing in an operation such as convolution.
   * The window is moved across a base area and for each position of the
   * window a computation is performed. The field below describes the
   * window and the movement of the window across a base area.
   * </pre>
   *
   * Protobuf type {@code xla.Window}
   */
  public static final class Window extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.Window)
      WindowOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Window.newBuilder() to construct.
    private Window(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Window() {
      dimensions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Window();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_Window_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_Window_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.Window.class, xla.XlaData.Window.Builder.class);
    }

    public static final int DIMENSIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.WindowDimension> dimensions_;
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.WindowDimension> getDimensionsList() {
      return dimensions_;
    }
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.WindowDimensionOrBuilder> 
        getDimensionsOrBuilderList() {
      return dimensions_;
    }
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public int getDimensionsCount() {
      return dimensions_.size();
    }
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.WindowDimension getDimensions(int index) {
      return dimensions_.get(index);
    }
    /**
     * <code>repeated .xla.WindowDimension dimensions = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.WindowDimensionOrBuilder getDimensionsOrBuilder(
        int index) {
      return dimensions_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < dimensions_.size(); i++) {
        output.writeMessage(1, dimensions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dimensions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dimensions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.Window)) {
        return super.equals(obj);
      }
      xla.XlaData.Window other = (xla.XlaData.Window) obj;

      if (!getDimensionsList()
          .equals(other.getDimensionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDimensionsCount() > 0) {
        hash = (37 * hash) + DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getDimensionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.Window parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.Window parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.Window parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.Window parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.Window parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.Window parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.Window parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.Window parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.Window parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.Window parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.Window parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.Window parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.Window prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the windowing in an operation such as convolution.
     * The window is moved across a base area and for each position of the
     * window a computation is performed. The field below describes the
     * window and the movement of the window across a base area.
     * </pre>
     *
     * Protobuf type {@code xla.Window}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.Window)
        xla.XlaData.WindowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_Window_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_Window_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.Window.class, xla.XlaData.Window.Builder.class);
      }

      // Construct using xla.XlaData.Window.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (dimensionsBuilder_ == null) {
          dimensions_ = java.util.Collections.emptyList();
        } else {
          dimensions_ = null;
          dimensionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_Window_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.Window getDefaultInstanceForType() {
        return xla.XlaData.Window.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.Window build() {
        xla.XlaData.Window result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.Window buildPartial() {
        xla.XlaData.Window result = new xla.XlaData.Window(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.Window result) {
        if (dimensionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            dimensions_ = java.util.Collections.unmodifiableList(dimensions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dimensions_ = dimensions_;
        } else {
          result.dimensions_ = dimensionsBuilder_.build();
        }
      }

      private void buildPartial0(xla.XlaData.Window result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.Window) {
          return mergeFrom((xla.XlaData.Window)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.Window other) {
        if (other == xla.XlaData.Window.getDefaultInstance()) return this;
        if (dimensionsBuilder_ == null) {
          if (!other.dimensions_.isEmpty()) {
            if (dimensions_.isEmpty()) {
              dimensions_ = other.dimensions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDimensionsIsMutable();
              dimensions_.addAll(other.dimensions_);
            }
            onChanged();
          }
        } else {
          if (!other.dimensions_.isEmpty()) {
            if (dimensionsBuilder_.isEmpty()) {
              dimensionsBuilder_.dispose();
              dimensionsBuilder_ = null;
              dimensions_ = other.dimensions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dimensionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDimensionsFieldBuilder() : null;
            } else {
              dimensionsBuilder_.addAllMessages(other.dimensions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                xla.XlaData.WindowDimension m =
                    input.readMessage(
                        xla.XlaData.WindowDimension.parser(),
                        extensionRegistry);
                if (dimensionsBuilder_ == null) {
                  ensureDimensionsIsMutable();
                  dimensions_.add(m);
                } else {
                  dimensionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<xla.XlaData.WindowDimension> dimensions_ =
        java.util.Collections.emptyList();
      private void ensureDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dimensions_ = new java.util.ArrayList<xla.XlaData.WindowDimension>(dimensions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.WindowDimension, xla.XlaData.WindowDimension.Builder, xla.XlaData.WindowDimensionOrBuilder> dimensionsBuilder_;

      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public java.util.List<xla.XlaData.WindowDimension> getDimensionsList() {
        if (dimensionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dimensions_);
        } else {
          return dimensionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public int getDimensionsCount() {
        if (dimensionsBuilder_ == null) {
          return dimensions_.size();
        } else {
          return dimensionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public xla.XlaData.WindowDimension getDimensions(int index) {
        if (dimensionsBuilder_ == null) {
          return dimensions_.get(index);
        } else {
          return dimensionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder setDimensions(
          int index, xla.XlaData.WindowDimension value) {
        if (dimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionsIsMutable();
          dimensions_.set(index, value);
          onChanged();
        } else {
          dimensionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder setDimensions(
          int index, xla.XlaData.WindowDimension.Builder builderForValue) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.set(index, builderForValue.build());
          onChanged();
        } else {
          dimensionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder addDimensions(xla.XlaData.WindowDimension value) {
        if (dimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionsIsMutable();
          dimensions_.add(value);
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder addDimensions(
          int index, xla.XlaData.WindowDimension value) {
        if (dimensionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDimensionsIsMutable();
          dimensions_.add(index, value);
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder addDimensions(
          xla.XlaData.WindowDimension.Builder builderForValue) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.add(builderForValue.build());
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder addDimensions(
          int index, xla.XlaData.WindowDimension.Builder builderForValue) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.add(index, builderForValue.build());
          onChanged();
        } else {
          dimensionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder addAllDimensions(
          java.lang.Iterable<? extends xla.XlaData.WindowDimension> values) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dimensions_);
          onChanged();
        } else {
          dimensionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder clearDimensions() {
        if (dimensionsBuilder_ == null) {
          dimensions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dimensionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public Builder removeDimensions(int index) {
        if (dimensionsBuilder_ == null) {
          ensureDimensionsIsMutable();
          dimensions_.remove(index);
          onChanged();
        } else {
          dimensionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public xla.XlaData.WindowDimension.Builder getDimensionsBuilder(
          int index) {
        return getDimensionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public xla.XlaData.WindowDimensionOrBuilder getDimensionsOrBuilder(
          int index) {
        if (dimensionsBuilder_ == null) {
          return dimensions_.get(index);  } else {
          return dimensionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public java.util.List<? extends xla.XlaData.WindowDimensionOrBuilder> 
           getDimensionsOrBuilderList() {
        if (dimensionsBuilder_ != null) {
          return dimensionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dimensions_);
        }
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public xla.XlaData.WindowDimension.Builder addDimensionsBuilder() {
        return getDimensionsFieldBuilder().addBuilder(
            xla.XlaData.WindowDimension.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public xla.XlaData.WindowDimension.Builder addDimensionsBuilder(
          int index) {
        return getDimensionsFieldBuilder().addBuilder(
            index, xla.XlaData.WindowDimension.getDefaultInstance());
      }
      /**
       * <code>repeated .xla.WindowDimension dimensions = 1;</code>
       */
      public java.util.List<xla.XlaData.WindowDimension.Builder> 
           getDimensionsBuilderList() {
        return getDimensionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.WindowDimension, xla.XlaData.WindowDimension.Builder, xla.XlaData.WindowDimensionOrBuilder> 
          getDimensionsFieldBuilder() {
        if (dimensionsBuilder_ == null) {
          dimensionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.WindowDimension, xla.XlaData.WindowDimension.Builder, xla.XlaData.WindowDimensionOrBuilder>(
                  dimensions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          dimensions_ = null;
        }
        return dimensionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.Window)
    }

    // @@protoc_insertion_point(class_scope:xla.Window)
    private static final xla.XlaData.Window DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.Window();
    }

    public static xla.XlaData.Window getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Window>
        PARSER = new com.google.protobuf.AbstractParser<Window>() {
      @java.lang.Override
      public Window parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Window> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Window> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.Window getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GatherDimensionNumbersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.GatherDimensionNumbers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * "Window indices" is a term for a set of indices that index into the
     * interior of a dynamic-slice from the input tensor, the starting indices for
     * which were computed from output_gather_dims (see the operation semantic for
     * how this is defined) and the start_indices tensor.
     * The window indices for a specific output index Out is computed as:
     *  i = 0
     *  for (k : [0, input_tensor_shape.rank))
     *    window_indices[k] =
     *      if k in collapsed_slice_dims
     *      then 0
     *      else Out[offset_dims[i++]]
     * </pre>
     *
     * <code>repeated int64 offset_dims = 1;</code>
     * @return A list containing the offsetDims.
     */
    java.util.List<java.lang.Long> getOffsetDimsList();
    /**
     * <pre>
     * "Window indices" is a term for a set of indices that index into the
     * interior of a dynamic-slice from the input tensor, the starting indices for
     * which were computed from output_gather_dims (see the operation semantic for
     * how this is defined) and the start_indices tensor.
     * The window indices for a specific output index Out is computed as:
     *  i = 0
     *  for (k : [0, input_tensor_shape.rank))
     *    window_indices[k] =
     *      if k in collapsed_slice_dims
     *      then 0
     *      else Out[offset_dims[i++]]
     * </pre>
     *
     * <code>repeated int64 offset_dims = 1;</code>
     * @return The count of offsetDims.
     */
    int getOffsetDimsCount();
    /**
     * <pre>
     * "Window indices" is a term for a set of indices that index into the
     * interior of a dynamic-slice from the input tensor, the starting indices for
     * which were computed from output_gather_dims (see the operation semantic for
     * how this is defined) and the start_indices tensor.
     * The window indices for a specific output index Out is computed as:
     *  i = 0
     *  for (k : [0, input_tensor_shape.rank))
     *    window_indices[k] =
     *      if k in collapsed_slice_dims
     *      then 0
     *      else Out[offset_dims[i++]]
     * </pre>
     *
     * <code>repeated int64 offset_dims = 1;</code>
     * @param index The index of the element to return.
     * @return The offsetDims at the given index.
     */
    long getOffsetDims(int index);

    /**
     * <code>repeated int64 collapsed_slice_dims = 2;</code>
     * @return A list containing the collapsedSliceDims.
     */
    java.util.List<java.lang.Long> getCollapsedSliceDimsList();
    /**
     * <code>repeated int64 collapsed_slice_dims = 2;</code>
     * @return The count of collapsedSliceDims.
     */
    int getCollapsedSliceDimsCount();
    /**
     * <code>repeated int64 collapsed_slice_dims = 2;</code>
     * @param index The index of the element to return.
     * @return The collapsedSliceDims at the given index.
     */
    long getCollapsedSliceDims(int index);

    /**
     * <pre>
     * This is interpreted as a map from i to start_index_map[i]. It
     * transforms the gather index looked up from the start_indices tensor into
     * the starting index in the input space.
     * </pre>
     *
     * <code>repeated int64 start_index_map = 3;</code>
     * @return A list containing the startIndexMap.
     */
    java.util.List<java.lang.Long> getStartIndexMapList();
    /**
     * <pre>
     * This is interpreted as a map from i to start_index_map[i]. It
     * transforms the gather index looked up from the start_indices tensor into
     * the starting index in the input space.
     * </pre>
     *
     * <code>repeated int64 start_index_map = 3;</code>
     * @return The count of startIndexMap.
     */
    int getStartIndexMapCount();
    /**
     * <pre>
     * This is interpreted as a map from i to start_index_map[i]. It
     * transforms the gather index looked up from the start_indices tensor into
     * the starting index in the input space.
     * </pre>
     *
     * <code>repeated int64 start_index_map = 3;</code>
     * @param index The index of the element to return.
     * @return The startIndexMap at the given index.
     */
    long getStartIndexMap(int index);

    /**
     * <pre>
     * The dimension in the start_indices input that contains the starting
     * indices.
     * </pre>
     *
     * <code>int64 index_vector_dim = 4;</code>
     * @return The indexVectorDim.
     */
    long getIndexVectorDim();
  }
  /**
   * <pre>
   * Describes the dimension numbers for a gather operation.
   * See https://www.tensorflow.org/performance/xla/operation_semantics#gather for
   * more details.
   * </pre>
   *
   * Protobuf type {@code xla.GatherDimensionNumbers}
   */
  public static final class GatherDimensionNumbers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.GatherDimensionNumbers)
      GatherDimensionNumbersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GatherDimensionNumbers.newBuilder() to construct.
    private GatherDimensionNumbers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GatherDimensionNumbers() {
      offsetDims_ = emptyLongList();
      collapsedSliceDims_ = emptyLongList();
      startIndexMap_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GatherDimensionNumbers();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_GatherDimensionNumbers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_GatherDimensionNumbers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.GatherDimensionNumbers.class, xla.XlaData.GatherDimensionNumbers.Builder.class);
    }

    public static final int OFFSET_DIMS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList offsetDims_;
    /**
     * <pre>
     * "Window indices" is a term for a set of indices that index into the
     * interior of a dynamic-slice from the input tensor, the starting indices for
     * which were computed from output_gather_dims (see the operation semantic for
     * how this is defined) and the start_indices tensor.
     * The window indices for a specific output index Out is computed as:
     *  i = 0
     *  for (k : [0, input_tensor_shape.rank))
     *    window_indices[k] =
     *      if k in collapsed_slice_dims
     *      then 0
     *      else Out[offset_dims[i++]]
     * </pre>
     *
     * <code>repeated int64 offset_dims = 1;</code>
     * @return A list containing the offsetDims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getOffsetDimsList() {
      return offsetDims_;
    }
    /**
     * <pre>
     * "Window indices" is a term for a set of indices that index into the
     * interior of a dynamic-slice from the input tensor, the starting indices for
     * which were computed from output_gather_dims (see the operation semantic for
     * how this is defined) and the start_indices tensor.
     * The window indices for a specific output index Out is computed as:
     *  i = 0
     *  for (k : [0, input_tensor_shape.rank))
     *    window_indices[k] =
     *      if k in collapsed_slice_dims
     *      then 0
     *      else Out[offset_dims[i++]]
     * </pre>
     *
     * <code>repeated int64 offset_dims = 1;</code>
     * @return The count of offsetDims.
     */
    public int getOffsetDimsCount() {
      return offsetDims_.size();
    }
    /**
     * <pre>
     * "Window indices" is a term for a set of indices that index into the
     * interior of a dynamic-slice from the input tensor, the starting indices for
     * which were computed from output_gather_dims (see the operation semantic for
     * how this is defined) and the start_indices tensor.
     * The window indices for a specific output index Out is computed as:
     *  i = 0
     *  for (k : [0, input_tensor_shape.rank))
     *    window_indices[k] =
     *      if k in collapsed_slice_dims
     *      then 0
     *      else Out[offset_dims[i++]]
     * </pre>
     *
     * <code>repeated int64 offset_dims = 1;</code>
     * @param index The index of the element to return.
     * @return The offsetDims at the given index.
     */
    public long getOffsetDims(int index) {
      return offsetDims_.getLong(index);
    }
    private int offsetDimsMemoizedSerializedSize = -1;

    public static final int COLLAPSED_SLICE_DIMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList collapsedSliceDims_;
    /**
     * <code>repeated int64 collapsed_slice_dims = 2;</code>
     * @return A list containing the collapsedSliceDims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getCollapsedSliceDimsList() {
      return collapsedSliceDims_;
    }
    /**
     * <code>repeated int64 collapsed_slice_dims = 2;</code>
     * @return The count of collapsedSliceDims.
     */
    public int getCollapsedSliceDimsCount() {
      return collapsedSliceDims_.size();
    }
    /**
     * <code>repeated int64 collapsed_slice_dims = 2;</code>
     * @param index The index of the element to return.
     * @return The collapsedSliceDims at the given index.
     */
    public long getCollapsedSliceDims(int index) {
      return collapsedSliceDims_.getLong(index);
    }
    private int collapsedSliceDimsMemoizedSerializedSize = -1;

    public static final int START_INDEX_MAP_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList startIndexMap_;
    /**
     * <pre>
     * This is interpreted as a map from i to start_index_map[i]. It
     * transforms the gather index looked up from the start_indices tensor into
     * the starting index in the input space.
     * </pre>
     *
     * <code>repeated int64 start_index_map = 3;</code>
     * @return A list containing the startIndexMap.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getStartIndexMapList() {
      return startIndexMap_;
    }
    /**
     * <pre>
     * This is interpreted as a map from i to start_index_map[i]. It
     * transforms the gather index looked up from the start_indices tensor into
     * the starting index in the input space.
     * </pre>
     *
     * <code>repeated int64 start_index_map = 3;</code>
     * @return The count of startIndexMap.
     */
    public int getStartIndexMapCount() {
      return startIndexMap_.size();
    }
    /**
     * <pre>
     * This is interpreted as a map from i to start_index_map[i]. It
     * transforms the gather index looked up from the start_indices tensor into
     * the starting index in the input space.
     * </pre>
     *
     * <code>repeated int64 start_index_map = 3;</code>
     * @param index The index of the element to return.
     * @return The startIndexMap at the given index.
     */
    public long getStartIndexMap(int index) {
      return startIndexMap_.getLong(index);
    }
    private int startIndexMapMemoizedSerializedSize = -1;

    public static final int INDEX_VECTOR_DIM_FIELD_NUMBER = 4;
    private long indexVectorDim_ = 0L;
    /**
     * <pre>
     * The dimension in the start_indices input that contains the starting
     * indices.
     * </pre>
     *
     * <code>int64 index_vector_dim = 4;</code>
     * @return The indexVectorDim.
     */
    @java.lang.Override
    public long getIndexVectorDim() {
      return indexVectorDim_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getOffsetDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(offsetDimsMemoizedSerializedSize);
      }
      for (int i = 0; i < offsetDims_.size(); i++) {
        output.writeInt64NoTag(offsetDims_.getLong(i));
      }
      if (getCollapsedSliceDimsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(collapsedSliceDimsMemoizedSerializedSize);
      }
      for (int i = 0; i < collapsedSliceDims_.size(); i++) {
        output.writeInt64NoTag(collapsedSliceDims_.getLong(i));
      }
      if (getStartIndexMapList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(startIndexMapMemoizedSerializedSize);
      }
      for (int i = 0; i < startIndexMap_.size(); i++) {
        output.writeInt64NoTag(startIndexMap_.getLong(i));
      }
      if (indexVectorDim_ != 0L) {
        output.writeInt64(4, indexVectorDim_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < offsetDims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(offsetDims_.getLong(i));
        }
        size += dataSize;
        if (!getOffsetDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        offsetDimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < collapsedSliceDims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(collapsedSliceDims_.getLong(i));
        }
        size += dataSize;
        if (!getCollapsedSliceDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        collapsedSliceDimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < startIndexMap_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(startIndexMap_.getLong(i));
        }
        size += dataSize;
        if (!getStartIndexMapList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        startIndexMapMemoizedSerializedSize = dataSize;
      }
      if (indexVectorDim_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, indexVectorDim_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.GatherDimensionNumbers)) {
        return super.equals(obj);
      }
      xla.XlaData.GatherDimensionNumbers other = (xla.XlaData.GatherDimensionNumbers) obj;

      if (!getOffsetDimsList()
          .equals(other.getOffsetDimsList())) return false;
      if (!getCollapsedSliceDimsList()
          .equals(other.getCollapsedSliceDimsList())) return false;
      if (!getStartIndexMapList()
          .equals(other.getStartIndexMapList())) return false;
      if (getIndexVectorDim()
          != other.getIndexVectorDim()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOffsetDimsCount() > 0) {
        hash = (37 * hash) + OFFSET_DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getOffsetDimsList().hashCode();
      }
      if (getCollapsedSliceDimsCount() > 0) {
        hash = (37 * hash) + COLLAPSED_SLICE_DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getCollapsedSliceDimsList().hashCode();
      }
      if (getStartIndexMapCount() > 0) {
        hash = (37 * hash) + START_INDEX_MAP_FIELD_NUMBER;
        hash = (53 * hash) + getStartIndexMapList().hashCode();
      }
      hash = (37 * hash) + INDEX_VECTOR_DIM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndexVectorDim());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.GatherDimensionNumbers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.GatherDimensionNumbers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.GatherDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.GatherDimensionNumbers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the dimension numbers for a gather operation.
     * See https://www.tensorflow.org/performance/xla/operation_semantics#gather for
     * more details.
     * </pre>
     *
     * Protobuf type {@code xla.GatherDimensionNumbers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.GatherDimensionNumbers)
        xla.XlaData.GatherDimensionNumbersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_GatherDimensionNumbers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_GatherDimensionNumbers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.GatherDimensionNumbers.class, xla.XlaData.GatherDimensionNumbers.Builder.class);
      }

      // Construct using xla.XlaData.GatherDimensionNumbers.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        offsetDims_ = emptyLongList();
        collapsedSliceDims_ = emptyLongList();
        startIndexMap_ = emptyLongList();
        indexVectorDim_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_GatherDimensionNumbers_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.GatherDimensionNumbers getDefaultInstanceForType() {
        return xla.XlaData.GatherDimensionNumbers.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.GatherDimensionNumbers build() {
        xla.XlaData.GatherDimensionNumbers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.GatherDimensionNumbers buildPartial() {
        xla.XlaData.GatherDimensionNumbers result = new xla.XlaData.GatherDimensionNumbers(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.GatherDimensionNumbers result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          offsetDims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.offsetDims_ = offsetDims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          collapsedSliceDims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.collapsedSliceDims_ = collapsedSliceDims_;
        if (((bitField0_ & 0x00000004) != 0)) {
          startIndexMap_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.startIndexMap_ = startIndexMap_;
      }

      private void buildPartial0(xla.XlaData.GatherDimensionNumbers result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.indexVectorDim_ = indexVectorDim_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.GatherDimensionNumbers) {
          return mergeFrom((xla.XlaData.GatherDimensionNumbers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.GatherDimensionNumbers other) {
        if (other == xla.XlaData.GatherDimensionNumbers.getDefaultInstance()) return this;
        if (!other.offsetDims_.isEmpty()) {
          if (offsetDims_.isEmpty()) {
            offsetDims_ = other.offsetDims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOffsetDimsIsMutable();
            offsetDims_.addAll(other.offsetDims_);
          }
          onChanged();
        }
        if (!other.collapsedSliceDims_.isEmpty()) {
          if (collapsedSliceDims_.isEmpty()) {
            collapsedSliceDims_ = other.collapsedSliceDims_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCollapsedSliceDimsIsMutable();
            collapsedSliceDims_.addAll(other.collapsedSliceDims_);
          }
          onChanged();
        }
        if (!other.startIndexMap_.isEmpty()) {
          if (startIndexMap_.isEmpty()) {
            startIndexMap_ = other.startIndexMap_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureStartIndexMapIsMutable();
            startIndexMap_.addAll(other.startIndexMap_);
          }
          onChanged();
        }
        if (other.getIndexVectorDim() != 0L) {
          setIndexVectorDim(other.getIndexVectorDim());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureOffsetDimsIsMutable();
                offsetDims_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureOffsetDimsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  offsetDims_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                long v = input.readInt64();
                ensureCollapsedSliceDimsIsMutable();
                collapsedSliceDims_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureCollapsedSliceDimsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  collapsedSliceDims_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readInt64();
                ensureStartIndexMapIsMutable();
                startIndexMap_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureStartIndexMapIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  startIndexMap_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                indexVectorDim_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList offsetDims_ = emptyLongList();
      private void ensureOffsetDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          offsetDims_ = mutableCopy(offsetDims_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @return A list containing the offsetDims.
       */
      public java.util.List<java.lang.Long>
          getOffsetDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(offsetDims_) : offsetDims_;
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @return The count of offsetDims.
       */
      public int getOffsetDimsCount() {
        return offsetDims_.size();
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @param index The index of the element to return.
       * @return The offsetDims at the given index.
       */
      public long getOffsetDims(int index) {
        return offsetDims_.getLong(index);
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The offsetDims to set.
       * @return This builder for chaining.
       */
      public Builder setOffsetDims(
          int index, long value) {
        
        ensureOffsetDimsIsMutable();
        offsetDims_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @param value The offsetDims to add.
       * @return This builder for chaining.
       */
      public Builder addOffsetDims(long value) {
        
        ensureOffsetDimsIsMutable();
        offsetDims_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @param values The offsetDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllOffsetDims(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureOffsetDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, offsetDims_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Window indices" is a term for a set of indices that index into the
       * interior of a dynamic-slice from the input tensor, the starting indices for
       * which were computed from output_gather_dims (see the operation semantic for
       * how this is defined) and the start_indices tensor.
       * The window indices for a specific output index Out is computed as:
       *  i = 0
       *  for (k : [0, input_tensor_shape.rank))
       *    window_indices[k] =
       *      if k in collapsed_slice_dims
       *      then 0
       *      else Out[offset_dims[i++]]
       * </pre>
       *
       * <code>repeated int64 offset_dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffsetDims() {
        offsetDims_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList collapsedSliceDims_ = emptyLongList();
      private void ensureCollapsedSliceDimsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          collapsedSliceDims_ = mutableCopy(collapsedSliceDims_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @return A list containing the collapsedSliceDims.
       */
      public java.util.List<java.lang.Long>
          getCollapsedSliceDimsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(collapsedSliceDims_) : collapsedSliceDims_;
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @return The count of collapsedSliceDims.
       */
      public int getCollapsedSliceDimsCount() {
        return collapsedSliceDims_.size();
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @param index The index of the element to return.
       * @return The collapsedSliceDims at the given index.
       */
      public long getCollapsedSliceDims(int index) {
        return collapsedSliceDims_.getLong(index);
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @param index The index to set the value at.
       * @param value The collapsedSliceDims to set.
       * @return This builder for chaining.
       */
      public Builder setCollapsedSliceDims(
          int index, long value) {
        
        ensureCollapsedSliceDimsIsMutable();
        collapsedSliceDims_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @param value The collapsedSliceDims to add.
       * @return This builder for chaining.
       */
      public Builder addCollapsedSliceDims(long value) {
        
        ensureCollapsedSliceDimsIsMutable();
        collapsedSliceDims_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @param values The collapsedSliceDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllCollapsedSliceDims(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCollapsedSliceDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, collapsedSliceDims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 collapsed_slice_dims = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollapsedSliceDims() {
        collapsedSliceDims_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList startIndexMap_ = emptyLongList();
      private void ensureStartIndexMapIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          startIndexMap_ = mutableCopy(startIndexMap_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @return A list containing the startIndexMap.
       */
      public java.util.List<java.lang.Long>
          getStartIndexMapList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(startIndexMap_) : startIndexMap_;
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @return The count of startIndexMap.
       */
      public int getStartIndexMapCount() {
        return startIndexMap_.size();
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @param index The index of the element to return.
       * @return The startIndexMap at the given index.
       */
      public long getStartIndexMap(int index) {
        return startIndexMap_.getLong(index);
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @param index The index to set the value at.
       * @param value The startIndexMap to set.
       * @return This builder for chaining.
       */
      public Builder setStartIndexMap(
          int index, long value) {
        
        ensureStartIndexMapIsMutable();
        startIndexMap_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @param value The startIndexMap to add.
       * @return This builder for chaining.
       */
      public Builder addStartIndexMap(long value) {
        
        ensureStartIndexMapIsMutable();
        startIndexMap_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @param values The startIndexMap to add.
       * @return This builder for chaining.
       */
      public Builder addAllStartIndexMap(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureStartIndexMapIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, startIndexMap_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is interpreted as a map from i to start_index_map[i]. It
       * transforms the gather index looked up from the start_indices tensor into
       * the starting index in the input space.
       * </pre>
       *
       * <code>repeated int64 start_index_map = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartIndexMap() {
        startIndexMap_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private long indexVectorDim_ ;
      /**
       * <pre>
       * The dimension in the start_indices input that contains the starting
       * indices.
       * </pre>
       *
       * <code>int64 index_vector_dim = 4;</code>
       * @return The indexVectorDim.
       */
      @java.lang.Override
      public long getIndexVectorDim() {
        return indexVectorDim_;
      }
      /**
       * <pre>
       * The dimension in the start_indices input that contains the starting
       * indices.
       * </pre>
       *
       * <code>int64 index_vector_dim = 4;</code>
       * @param value The indexVectorDim to set.
       * @return This builder for chaining.
       */
      public Builder setIndexVectorDim(long value) {
        
        indexVectorDim_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension in the start_indices input that contains the starting
       * indices.
       * </pre>
       *
       * <code>int64 index_vector_dim = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndexVectorDim() {
        bitField0_ = (bitField0_ & ~0x00000008);
        indexVectorDim_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.GatherDimensionNumbers)
    }

    // @@protoc_insertion_point(class_scope:xla.GatherDimensionNumbers)
    private static final xla.XlaData.GatherDimensionNumbers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.GatherDimensionNumbers();
    }

    public static xla.XlaData.GatherDimensionNumbers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GatherDimensionNumbers>
        PARSER = new com.google.protobuf.AbstractParser<GatherDimensionNumbers>() {
      @java.lang.Override
      public GatherDimensionNumbers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GatherDimensionNumbers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GatherDimensionNumbers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.GatherDimensionNumbers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScatterDimensionNumbersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ScatterDimensionNumbers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The set of dimensions in the updates shape that are window dimensions.
     * </pre>
     *
     * <code>repeated int64 update_window_dims = 1;</code>
     * @return A list containing the updateWindowDims.
     */
    java.util.List<java.lang.Long> getUpdateWindowDimsList();
    /**
     * <pre>
     * The set of dimensions in the updates shape that are window dimensions.
     * </pre>
     *
     * <code>repeated int64 update_window_dims = 1;</code>
     * @return The count of updateWindowDims.
     */
    int getUpdateWindowDimsCount();
    /**
     * <pre>
     * The set of dimensions in the updates shape that are window dimensions.
     * </pre>
     *
     * <code>repeated int64 update_window_dims = 1;</code>
     * @param index The index of the element to return.
     * @return The updateWindowDims at the given index.
     */
    long getUpdateWindowDims(int index);

    /**
     * <pre>
     * The set of window dimensions that must be inserted into the updates shape.
     * </pre>
     *
     * <code>repeated int64 inserted_window_dims = 2;</code>
     * @return A list containing the insertedWindowDims.
     */
    java.util.List<java.lang.Long> getInsertedWindowDimsList();
    /**
     * <pre>
     * The set of window dimensions that must be inserted into the updates shape.
     * </pre>
     *
     * <code>repeated int64 inserted_window_dims = 2;</code>
     * @return The count of insertedWindowDims.
     */
    int getInsertedWindowDimsCount();
    /**
     * <pre>
     * The set of window dimensions that must be inserted into the updates shape.
     * </pre>
     *
     * <code>repeated int64 inserted_window_dims = 2;</code>
     * @param index The index of the element to return.
     * @return The insertedWindowDims at the given index.
     */
    long getInsertedWindowDims(int index);

    /**
     * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
     * @return A list containing the scatterDimsToOperandDims.
     */
    java.util.List<java.lang.Long> getScatterDimsToOperandDimsList();
    /**
     * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
     * @return The count of scatterDimsToOperandDims.
     */
    int getScatterDimsToOperandDimsCount();
    /**
     * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
     * @param index The index of the element to return.
     * @return The scatterDimsToOperandDims at the given index.
     */
    long getScatterDimsToOperandDims(int index);

    /**
     * <code>int64 index_vector_dim = 4;</code>
     * @return The indexVectorDim.
     */
    long getIndexVectorDim();
  }
  /**
   * <pre>
   * Describes the dimension numbers for a scatter operation.
   * All the fields are similar to the corresponding fields in
   * GatherDimensionNumbers. Differences are noted below.
   * </pre>
   *
   * Protobuf type {@code xla.ScatterDimensionNumbers}
   */
  public static final class ScatterDimensionNumbers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ScatterDimensionNumbers)
      ScatterDimensionNumbersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScatterDimensionNumbers.newBuilder() to construct.
    private ScatterDimensionNumbers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScatterDimensionNumbers() {
      updateWindowDims_ = emptyLongList();
      insertedWindowDims_ = emptyLongList();
      scatterDimsToOperandDims_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScatterDimensionNumbers();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ScatterDimensionNumbers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ScatterDimensionNumbers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ScatterDimensionNumbers.class, xla.XlaData.ScatterDimensionNumbers.Builder.class);
    }

    public static final int UPDATE_WINDOW_DIMS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList updateWindowDims_;
    /**
     * <pre>
     * The set of dimensions in the updates shape that are window dimensions.
     * </pre>
     *
     * <code>repeated int64 update_window_dims = 1;</code>
     * @return A list containing the updateWindowDims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getUpdateWindowDimsList() {
      return updateWindowDims_;
    }
    /**
     * <pre>
     * The set of dimensions in the updates shape that are window dimensions.
     * </pre>
     *
     * <code>repeated int64 update_window_dims = 1;</code>
     * @return The count of updateWindowDims.
     */
    public int getUpdateWindowDimsCount() {
      return updateWindowDims_.size();
    }
    /**
     * <pre>
     * The set of dimensions in the updates shape that are window dimensions.
     * </pre>
     *
     * <code>repeated int64 update_window_dims = 1;</code>
     * @param index The index of the element to return.
     * @return The updateWindowDims at the given index.
     */
    public long getUpdateWindowDims(int index) {
      return updateWindowDims_.getLong(index);
    }
    private int updateWindowDimsMemoizedSerializedSize = -1;

    public static final int INSERTED_WINDOW_DIMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList insertedWindowDims_;
    /**
     * <pre>
     * The set of window dimensions that must be inserted into the updates shape.
     * </pre>
     *
     * <code>repeated int64 inserted_window_dims = 2;</code>
     * @return A list containing the insertedWindowDims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getInsertedWindowDimsList() {
      return insertedWindowDims_;
    }
    /**
     * <pre>
     * The set of window dimensions that must be inserted into the updates shape.
     * </pre>
     *
     * <code>repeated int64 inserted_window_dims = 2;</code>
     * @return The count of insertedWindowDims.
     */
    public int getInsertedWindowDimsCount() {
      return insertedWindowDims_.size();
    }
    /**
     * <pre>
     * The set of window dimensions that must be inserted into the updates shape.
     * </pre>
     *
     * <code>repeated int64 inserted_window_dims = 2;</code>
     * @param index The index of the element to return.
     * @return The insertedWindowDims at the given index.
     */
    public long getInsertedWindowDims(int index) {
      return insertedWindowDims_.getLong(index);
    }
    private int insertedWindowDimsMemoizedSerializedSize = -1;

    public static final int SCATTER_DIMS_TO_OPERAND_DIMS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList scatterDimsToOperandDims_;
    /**
     * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
     * @return A list containing the scatterDimsToOperandDims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getScatterDimsToOperandDimsList() {
      return scatterDimsToOperandDims_;
    }
    /**
     * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
     * @return The count of scatterDimsToOperandDims.
     */
    public int getScatterDimsToOperandDimsCount() {
      return scatterDimsToOperandDims_.size();
    }
    /**
     * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
     * @param index The index of the element to return.
     * @return The scatterDimsToOperandDims at the given index.
     */
    public long getScatterDimsToOperandDims(int index) {
      return scatterDimsToOperandDims_.getLong(index);
    }
    private int scatterDimsToOperandDimsMemoizedSerializedSize = -1;

    public static final int INDEX_VECTOR_DIM_FIELD_NUMBER = 4;
    private long indexVectorDim_ = 0L;
    /**
     * <code>int64 index_vector_dim = 4;</code>
     * @return The indexVectorDim.
     */
    @java.lang.Override
    public long getIndexVectorDim() {
      return indexVectorDim_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getUpdateWindowDimsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(updateWindowDimsMemoizedSerializedSize);
      }
      for (int i = 0; i < updateWindowDims_.size(); i++) {
        output.writeInt64NoTag(updateWindowDims_.getLong(i));
      }
      if (getInsertedWindowDimsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(insertedWindowDimsMemoizedSerializedSize);
      }
      for (int i = 0; i < insertedWindowDims_.size(); i++) {
        output.writeInt64NoTag(insertedWindowDims_.getLong(i));
      }
      if (getScatterDimsToOperandDimsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(scatterDimsToOperandDimsMemoizedSerializedSize);
      }
      for (int i = 0; i < scatterDimsToOperandDims_.size(); i++) {
        output.writeInt64NoTag(scatterDimsToOperandDims_.getLong(i));
      }
      if (indexVectorDim_ != 0L) {
        output.writeInt64(4, indexVectorDim_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < updateWindowDims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(updateWindowDims_.getLong(i));
        }
        size += dataSize;
        if (!getUpdateWindowDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        updateWindowDimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < insertedWindowDims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(insertedWindowDims_.getLong(i));
        }
        size += dataSize;
        if (!getInsertedWindowDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        insertedWindowDimsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scatterDimsToOperandDims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(scatterDimsToOperandDims_.getLong(i));
        }
        size += dataSize;
        if (!getScatterDimsToOperandDimsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        scatterDimsToOperandDimsMemoizedSerializedSize = dataSize;
      }
      if (indexVectorDim_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, indexVectorDim_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ScatterDimensionNumbers)) {
        return super.equals(obj);
      }
      xla.XlaData.ScatterDimensionNumbers other = (xla.XlaData.ScatterDimensionNumbers) obj;

      if (!getUpdateWindowDimsList()
          .equals(other.getUpdateWindowDimsList())) return false;
      if (!getInsertedWindowDimsList()
          .equals(other.getInsertedWindowDimsList())) return false;
      if (!getScatterDimsToOperandDimsList()
          .equals(other.getScatterDimsToOperandDimsList())) return false;
      if (getIndexVectorDim()
          != other.getIndexVectorDim()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getUpdateWindowDimsCount() > 0) {
        hash = (37 * hash) + UPDATE_WINDOW_DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getUpdateWindowDimsList().hashCode();
      }
      if (getInsertedWindowDimsCount() > 0) {
        hash = (37 * hash) + INSERTED_WINDOW_DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getInsertedWindowDimsList().hashCode();
      }
      if (getScatterDimsToOperandDimsCount() > 0) {
        hash = (37 * hash) + SCATTER_DIMS_TO_OPERAND_DIMS_FIELD_NUMBER;
        hash = (53 * hash) + getScatterDimsToOperandDimsList().hashCode();
      }
      hash = (37 * hash) + INDEX_VECTOR_DIM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIndexVectorDim());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ScatterDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ScatterDimensionNumbers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the dimension numbers for a scatter operation.
     * All the fields are similar to the corresponding fields in
     * GatherDimensionNumbers. Differences are noted below.
     * </pre>
     *
     * Protobuf type {@code xla.ScatterDimensionNumbers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ScatterDimensionNumbers)
        xla.XlaData.ScatterDimensionNumbersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ScatterDimensionNumbers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ScatterDimensionNumbers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ScatterDimensionNumbers.class, xla.XlaData.ScatterDimensionNumbers.Builder.class);
      }

      // Construct using xla.XlaData.ScatterDimensionNumbers.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        updateWindowDims_ = emptyLongList();
        insertedWindowDims_ = emptyLongList();
        scatterDimsToOperandDims_ = emptyLongList();
        indexVectorDim_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ScatterDimensionNumbers_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ScatterDimensionNumbers getDefaultInstanceForType() {
        return xla.XlaData.ScatterDimensionNumbers.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ScatterDimensionNumbers build() {
        xla.XlaData.ScatterDimensionNumbers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ScatterDimensionNumbers buildPartial() {
        xla.XlaData.ScatterDimensionNumbers result = new xla.XlaData.ScatterDimensionNumbers(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.ScatterDimensionNumbers result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          updateWindowDims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.updateWindowDims_ = updateWindowDims_;
        if (((bitField0_ & 0x00000002) != 0)) {
          insertedWindowDims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.insertedWindowDims_ = insertedWindowDims_;
        if (((bitField0_ & 0x00000004) != 0)) {
          scatterDimsToOperandDims_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.scatterDimsToOperandDims_ = scatterDimsToOperandDims_;
      }

      private void buildPartial0(xla.XlaData.ScatterDimensionNumbers result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.indexVectorDim_ = indexVectorDim_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ScatterDimensionNumbers) {
          return mergeFrom((xla.XlaData.ScatterDimensionNumbers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ScatterDimensionNumbers other) {
        if (other == xla.XlaData.ScatterDimensionNumbers.getDefaultInstance()) return this;
        if (!other.updateWindowDims_.isEmpty()) {
          if (updateWindowDims_.isEmpty()) {
            updateWindowDims_ = other.updateWindowDims_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureUpdateWindowDimsIsMutable();
            updateWindowDims_.addAll(other.updateWindowDims_);
          }
          onChanged();
        }
        if (!other.insertedWindowDims_.isEmpty()) {
          if (insertedWindowDims_.isEmpty()) {
            insertedWindowDims_ = other.insertedWindowDims_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInsertedWindowDimsIsMutable();
            insertedWindowDims_.addAll(other.insertedWindowDims_);
          }
          onChanged();
        }
        if (!other.scatterDimsToOperandDims_.isEmpty()) {
          if (scatterDimsToOperandDims_.isEmpty()) {
            scatterDimsToOperandDims_ = other.scatterDimsToOperandDims_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureScatterDimsToOperandDimsIsMutable();
            scatterDimsToOperandDims_.addAll(other.scatterDimsToOperandDims_);
          }
          onChanged();
        }
        if (other.getIndexVectorDim() != 0L) {
          setIndexVectorDim(other.getIndexVectorDim());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureUpdateWindowDimsIsMutable();
                updateWindowDims_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureUpdateWindowDimsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  updateWindowDims_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                long v = input.readInt64();
                ensureInsertedWindowDimsIsMutable();
                insertedWindowDims_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureInsertedWindowDimsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  insertedWindowDims_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readInt64();
                ensureScatterDimsToOperandDimsIsMutable();
                scatterDimsToOperandDims_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureScatterDimsToOperandDimsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  scatterDimsToOperandDims_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                indexVectorDim_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList updateWindowDims_ = emptyLongList();
      private void ensureUpdateWindowDimsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          updateWindowDims_ = mutableCopy(updateWindowDims_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @return A list containing the updateWindowDims.
       */
      public java.util.List<java.lang.Long>
          getUpdateWindowDimsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(updateWindowDims_) : updateWindowDims_;
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @return The count of updateWindowDims.
       */
      public int getUpdateWindowDimsCount() {
        return updateWindowDims_.size();
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @param index The index of the element to return.
       * @return The updateWindowDims at the given index.
       */
      public long getUpdateWindowDims(int index) {
        return updateWindowDims_.getLong(index);
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @param index The index to set the value at.
       * @param value The updateWindowDims to set.
       * @return This builder for chaining.
       */
      public Builder setUpdateWindowDims(
          int index, long value) {
        
        ensureUpdateWindowDimsIsMutable();
        updateWindowDims_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @param value The updateWindowDims to add.
       * @return This builder for chaining.
       */
      public Builder addUpdateWindowDims(long value) {
        
        ensureUpdateWindowDimsIsMutable();
        updateWindowDims_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @param values The updateWindowDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllUpdateWindowDims(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUpdateWindowDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, updateWindowDims_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of dimensions in the updates shape that are window dimensions.
       * </pre>
       *
       * <code>repeated int64 update_window_dims = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUpdateWindowDims() {
        updateWindowDims_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList insertedWindowDims_ = emptyLongList();
      private void ensureInsertedWindowDimsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          insertedWindowDims_ = mutableCopy(insertedWindowDims_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @return A list containing the insertedWindowDims.
       */
      public java.util.List<java.lang.Long>
          getInsertedWindowDimsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(insertedWindowDims_) : insertedWindowDims_;
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @return The count of insertedWindowDims.
       */
      public int getInsertedWindowDimsCount() {
        return insertedWindowDims_.size();
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @param index The index of the element to return.
       * @return The insertedWindowDims at the given index.
       */
      public long getInsertedWindowDims(int index) {
        return insertedWindowDims_.getLong(index);
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @param index The index to set the value at.
       * @param value The insertedWindowDims to set.
       * @return This builder for chaining.
       */
      public Builder setInsertedWindowDims(
          int index, long value) {
        
        ensureInsertedWindowDimsIsMutable();
        insertedWindowDims_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @param value The insertedWindowDims to add.
       * @return This builder for chaining.
       */
      public Builder addInsertedWindowDims(long value) {
        
        ensureInsertedWindowDimsIsMutable();
        insertedWindowDims_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @param values The insertedWindowDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllInsertedWindowDims(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInsertedWindowDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, insertedWindowDims_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of window dimensions that must be inserted into the updates shape.
       * </pre>
       *
       * <code>repeated int64 inserted_window_dims = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInsertedWindowDims() {
        insertedWindowDims_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList scatterDimsToOperandDims_ = emptyLongList();
      private void ensureScatterDimsToOperandDimsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          scatterDimsToOperandDims_ = mutableCopy(scatterDimsToOperandDims_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @return A list containing the scatterDimsToOperandDims.
       */
      public java.util.List<java.lang.Long>
          getScatterDimsToOperandDimsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(scatterDimsToOperandDims_) : scatterDimsToOperandDims_;
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @return The count of scatterDimsToOperandDims.
       */
      public int getScatterDimsToOperandDimsCount() {
        return scatterDimsToOperandDims_.size();
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @param index The index of the element to return.
       * @return The scatterDimsToOperandDims at the given index.
       */
      public long getScatterDimsToOperandDims(int index) {
        return scatterDimsToOperandDims_.getLong(index);
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @param index The index to set the value at.
       * @param value The scatterDimsToOperandDims to set.
       * @return This builder for chaining.
       */
      public Builder setScatterDimsToOperandDims(
          int index, long value) {
        
        ensureScatterDimsToOperandDimsIsMutable();
        scatterDimsToOperandDims_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @param value The scatterDimsToOperandDims to add.
       * @return This builder for chaining.
       */
      public Builder addScatterDimsToOperandDims(long value) {
        
        ensureScatterDimsToOperandDimsIsMutable();
        scatterDimsToOperandDims_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @param values The scatterDimsToOperandDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllScatterDimsToOperandDims(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureScatterDimsToOperandDimsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scatterDimsToOperandDims_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 scatter_dims_to_operand_dims = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScatterDimsToOperandDims() {
        scatterDimsToOperandDims_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private long indexVectorDim_ ;
      /**
       * <code>int64 index_vector_dim = 4;</code>
       * @return The indexVectorDim.
       */
      @java.lang.Override
      public long getIndexVectorDim() {
        return indexVectorDim_;
      }
      /**
       * <code>int64 index_vector_dim = 4;</code>
       * @param value The indexVectorDim to set.
       * @return This builder for chaining.
       */
      public Builder setIndexVectorDim(long value) {
        
        indexVectorDim_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int64 index_vector_dim = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndexVectorDim() {
        bitField0_ = (bitField0_ & ~0x00000008);
        indexVectorDim_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ScatterDimensionNumbers)
    }

    // @@protoc_insertion_point(class_scope:xla.ScatterDimensionNumbers)
    private static final xla.XlaData.ScatterDimensionNumbers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ScatterDimensionNumbers();
    }

    public static xla.XlaData.ScatterDimensionNumbers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScatterDimensionNumbers>
        PARSER = new com.google.protobuf.AbstractParser<ScatterDimensionNumbers>() {
      @java.lang.Override
      public ScatterDimensionNumbers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScatterDimensionNumbers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScatterDimensionNumbers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ScatterDimensionNumbers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConvolutionDimensionNumbersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ConvolutionDimensionNumbers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The number of the dimension that represents batch in the input.
     * </pre>
     *
     * <code>int64 input_batch_dimension = 7;</code>
     * @return The inputBatchDimension.
     */
    long getInputBatchDimension();

    /**
     * <pre>
     * The number of the dimension that represents features in the input.
     * </pre>
     *
     * <code>int64 input_feature_dimension = 8;</code>
     * @return The inputFeatureDimension.
     */
    long getInputFeatureDimension();

    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the input.
     * </pre>
     *
     * <code>repeated int64 input_spatial_dimensions = 11;</code>
     * @return A list containing the inputSpatialDimensions.
     */
    java.util.List<java.lang.Long> getInputSpatialDimensionsList();
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the input.
     * </pre>
     *
     * <code>repeated int64 input_spatial_dimensions = 11;</code>
     * @return The count of inputSpatialDimensions.
     */
    int getInputSpatialDimensionsCount();
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the input.
     * </pre>
     *
     * <code>repeated int64 input_spatial_dimensions = 11;</code>
     * @param index The index of the element to return.
     * @return The inputSpatialDimensions at the given index.
     */
    long getInputSpatialDimensions(int index);

    /**
     * <pre>
     * The number of the dimension that represents input features in the
     * convolutional kernel (rhs).
     * </pre>
     *
     * <code>int64 kernel_input_feature_dimension = 3;</code>
     * @return The kernelInputFeatureDimension.
     */
    long getKernelInputFeatureDimension();

    /**
     * <pre>
     * The number of the dimension that represents output features in
     * the convolutional kernel (rhs).
     * </pre>
     *
     * <code>int64 kernel_output_feature_dimension = 4;</code>
     * @return The kernelOutputFeatureDimension.
     */
    long getKernelOutputFeatureDimension();

    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the kernel (rhs). window.strides(0) is the
     * stride in the kernel_spatial_dimensions(0) dimension.
     * </pre>
     *
     * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
     * @return A list containing the kernelSpatialDimensions.
     */
    java.util.List<java.lang.Long> getKernelSpatialDimensionsList();
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the kernel (rhs). window.strides(0) is the
     * stride in the kernel_spatial_dimensions(0) dimension.
     * </pre>
     *
     * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
     * @return The count of kernelSpatialDimensions.
     */
    int getKernelSpatialDimensionsCount();
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the kernel (rhs). window.strides(0) is the
     * stride in the kernel_spatial_dimensions(0) dimension.
     * </pre>
     *
     * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
     * @param index The index of the element to return.
     * @return The kernelSpatialDimensions at the given index.
     */
    long getKernelSpatialDimensions(int index);

    /**
     * <pre>
     * The number of the dimension that represents batch in the output.
     * </pre>
     *
     * <code>int64 output_batch_dimension = 9;</code>
     * @return The outputBatchDimension.
     */
    long getOutputBatchDimension();

    /**
     * <pre>
     * The number of the dimension that represents features in the output.
     * </pre>
     *
     * <code>int64 output_feature_dimension = 10;</code>
     * @return The outputFeatureDimension.
     */
    long getOutputFeatureDimension();

    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the output.
     * </pre>
     *
     * <code>repeated int64 output_spatial_dimensions = 12;</code>
     * @return A list containing the outputSpatialDimensions.
     */
    java.util.List<java.lang.Long> getOutputSpatialDimensionsList();
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the output.
     * </pre>
     *
     * <code>repeated int64 output_spatial_dimensions = 12;</code>
     * @return The count of outputSpatialDimensions.
     */
    int getOutputSpatialDimensionsCount();
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the output.
     * </pre>
     *
     * <code>repeated int64 output_spatial_dimensions = 12;</code>
     * @param index The index of the element to return.
     * @return The outputSpatialDimensions at the given index.
     */
    long getOutputSpatialDimensions(int index);
  }
  /**
   * Protobuf type {@code xla.ConvolutionDimensionNumbers}
   */
  public static final class ConvolutionDimensionNumbers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ConvolutionDimensionNumbers)
      ConvolutionDimensionNumbersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConvolutionDimensionNumbers.newBuilder() to construct.
    private ConvolutionDimensionNumbers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConvolutionDimensionNumbers() {
      inputSpatialDimensions_ = emptyLongList();
      kernelSpatialDimensions_ = emptyLongList();
      outputSpatialDimensions_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConvolutionDimensionNumbers();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ConvolutionDimensionNumbers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ConvolutionDimensionNumbers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ConvolutionDimensionNumbers.class, xla.XlaData.ConvolutionDimensionNumbers.Builder.class);
    }

    public static final int INPUT_BATCH_DIMENSION_FIELD_NUMBER = 7;
    private long inputBatchDimension_ = 0L;
    /**
     * <pre>
     * The number of the dimension that represents batch in the input.
     * </pre>
     *
     * <code>int64 input_batch_dimension = 7;</code>
     * @return The inputBatchDimension.
     */
    @java.lang.Override
    public long getInputBatchDimension() {
      return inputBatchDimension_;
    }

    public static final int INPUT_FEATURE_DIMENSION_FIELD_NUMBER = 8;
    private long inputFeatureDimension_ = 0L;
    /**
     * <pre>
     * The number of the dimension that represents features in the input.
     * </pre>
     *
     * <code>int64 input_feature_dimension = 8;</code>
     * @return The inputFeatureDimension.
     */
    @java.lang.Override
    public long getInputFeatureDimension() {
      return inputFeatureDimension_;
    }

    public static final int INPUT_SPATIAL_DIMENSIONS_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList inputSpatialDimensions_;
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the input.
     * </pre>
     *
     * <code>repeated int64 input_spatial_dimensions = 11;</code>
     * @return A list containing the inputSpatialDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getInputSpatialDimensionsList() {
      return inputSpatialDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the input.
     * </pre>
     *
     * <code>repeated int64 input_spatial_dimensions = 11;</code>
     * @return The count of inputSpatialDimensions.
     */
    public int getInputSpatialDimensionsCount() {
      return inputSpatialDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the input.
     * </pre>
     *
     * <code>repeated int64 input_spatial_dimensions = 11;</code>
     * @param index The index of the element to return.
     * @return The inputSpatialDimensions at the given index.
     */
    public long getInputSpatialDimensions(int index) {
      return inputSpatialDimensions_.getLong(index);
    }
    private int inputSpatialDimensionsMemoizedSerializedSize = -1;

    public static final int KERNEL_INPUT_FEATURE_DIMENSION_FIELD_NUMBER = 3;
    private long kernelInputFeatureDimension_ = 0L;
    /**
     * <pre>
     * The number of the dimension that represents input features in the
     * convolutional kernel (rhs).
     * </pre>
     *
     * <code>int64 kernel_input_feature_dimension = 3;</code>
     * @return The kernelInputFeatureDimension.
     */
    @java.lang.Override
    public long getKernelInputFeatureDimension() {
      return kernelInputFeatureDimension_;
    }

    public static final int KERNEL_OUTPUT_FEATURE_DIMENSION_FIELD_NUMBER = 4;
    private long kernelOutputFeatureDimension_ = 0L;
    /**
     * <pre>
     * The number of the dimension that represents output features in
     * the convolutional kernel (rhs).
     * </pre>
     *
     * <code>int64 kernel_output_feature_dimension = 4;</code>
     * @return The kernelOutputFeatureDimension.
     */
    @java.lang.Override
    public long getKernelOutputFeatureDimension() {
      return kernelOutputFeatureDimension_;
    }

    public static final int KERNEL_SPATIAL_DIMENSIONS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList kernelSpatialDimensions_;
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the kernel (rhs). window.strides(0) is the
     * stride in the kernel_spatial_dimensions(0) dimension.
     * </pre>
     *
     * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
     * @return A list containing the kernelSpatialDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getKernelSpatialDimensionsList() {
      return kernelSpatialDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the kernel (rhs). window.strides(0) is the
     * stride in the kernel_spatial_dimensions(0) dimension.
     * </pre>
     *
     * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
     * @return The count of kernelSpatialDimensions.
     */
    public int getKernelSpatialDimensionsCount() {
      return kernelSpatialDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the kernel (rhs). window.strides(0) is the
     * stride in the kernel_spatial_dimensions(0) dimension.
     * </pre>
     *
     * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
     * @param index The index of the element to return.
     * @return The kernelSpatialDimensions at the given index.
     */
    public long getKernelSpatialDimensions(int index) {
      return kernelSpatialDimensions_.getLong(index);
    }
    private int kernelSpatialDimensionsMemoizedSerializedSize = -1;

    public static final int OUTPUT_BATCH_DIMENSION_FIELD_NUMBER = 9;
    private long outputBatchDimension_ = 0L;
    /**
     * <pre>
     * The number of the dimension that represents batch in the output.
     * </pre>
     *
     * <code>int64 output_batch_dimension = 9;</code>
     * @return The outputBatchDimension.
     */
    @java.lang.Override
    public long getOutputBatchDimension() {
      return outputBatchDimension_;
    }

    public static final int OUTPUT_FEATURE_DIMENSION_FIELD_NUMBER = 10;
    private long outputFeatureDimension_ = 0L;
    /**
     * <pre>
     * The number of the dimension that represents features in the output.
     * </pre>
     *
     * <code>int64 output_feature_dimension = 10;</code>
     * @return The outputFeatureDimension.
     */
    @java.lang.Override
    public long getOutputFeatureDimension() {
      return outputFeatureDimension_;
    }

    public static final int OUTPUT_SPATIAL_DIMENSIONS_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList outputSpatialDimensions_;
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the output.
     * </pre>
     *
     * <code>repeated int64 output_spatial_dimensions = 12;</code>
     * @return A list containing the outputSpatialDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getOutputSpatialDimensionsList() {
      return outputSpatialDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the output.
     * </pre>
     *
     * <code>repeated int64 output_spatial_dimensions = 12;</code>
     * @return The count of outputSpatialDimensions.
     */
    public int getOutputSpatialDimensionsCount() {
      return outputSpatialDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers for the spatial dimensions that the window
     * moves through in the output.
     * </pre>
     *
     * <code>repeated int64 output_spatial_dimensions = 12;</code>
     * @param index The index of the element to return.
     * @return The outputSpatialDimensions at the given index.
     */
    public long getOutputSpatialDimensions(int index) {
      return outputSpatialDimensions_.getLong(index);
    }
    private int outputSpatialDimensionsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (kernelInputFeatureDimension_ != 0L) {
        output.writeInt64(3, kernelInputFeatureDimension_);
      }
      if (kernelOutputFeatureDimension_ != 0L) {
        output.writeInt64(4, kernelOutputFeatureDimension_);
      }
      if (getKernelSpatialDimensionsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(kernelSpatialDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < kernelSpatialDimensions_.size(); i++) {
        output.writeInt64NoTag(kernelSpatialDimensions_.getLong(i));
      }
      if (inputBatchDimension_ != 0L) {
        output.writeInt64(7, inputBatchDimension_);
      }
      if (inputFeatureDimension_ != 0L) {
        output.writeInt64(8, inputFeatureDimension_);
      }
      if (outputBatchDimension_ != 0L) {
        output.writeInt64(9, outputBatchDimension_);
      }
      if (outputFeatureDimension_ != 0L) {
        output.writeInt64(10, outputFeatureDimension_);
      }
      if (getInputSpatialDimensionsList().size() > 0) {
        output.writeUInt32NoTag(90);
        output.writeUInt32NoTag(inputSpatialDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < inputSpatialDimensions_.size(); i++) {
        output.writeInt64NoTag(inputSpatialDimensions_.getLong(i));
      }
      if (getOutputSpatialDimensionsList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(outputSpatialDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < outputSpatialDimensions_.size(); i++) {
        output.writeInt64NoTag(outputSpatialDimensions_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (kernelInputFeatureDimension_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, kernelInputFeatureDimension_);
      }
      if (kernelOutputFeatureDimension_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, kernelOutputFeatureDimension_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < kernelSpatialDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(kernelSpatialDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getKernelSpatialDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        kernelSpatialDimensionsMemoizedSerializedSize = dataSize;
      }
      if (inputBatchDimension_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, inputBatchDimension_);
      }
      if (inputFeatureDimension_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, inputFeatureDimension_);
      }
      if (outputBatchDimension_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, outputBatchDimension_);
      }
      if (outputFeatureDimension_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, outputFeatureDimension_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inputSpatialDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(inputSpatialDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getInputSpatialDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputSpatialDimensionsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outputSpatialDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(outputSpatialDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getOutputSpatialDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        outputSpatialDimensionsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ConvolutionDimensionNumbers)) {
        return super.equals(obj);
      }
      xla.XlaData.ConvolutionDimensionNumbers other = (xla.XlaData.ConvolutionDimensionNumbers) obj;

      if (getInputBatchDimension()
          != other.getInputBatchDimension()) return false;
      if (getInputFeatureDimension()
          != other.getInputFeatureDimension()) return false;
      if (!getInputSpatialDimensionsList()
          .equals(other.getInputSpatialDimensionsList())) return false;
      if (getKernelInputFeatureDimension()
          != other.getKernelInputFeatureDimension()) return false;
      if (getKernelOutputFeatureDimension()
          != other.getKernelOutputFeatureDimension()) return false;
      if (!getKernelSpatialDimensionsList()
          .equals(other.getKernelSpatialDimensionsList())) return false;
      if (getOutputBatchDimension()
          != other.getOutputBatchDimension()) return false;
      if (getOutputFeatureDimension()
          != other.getOutputFeatureDimension()) return false;
      if (!getOutputSpatialDimensionsList()
          .equals(other.getOutputSpatialDimensionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INPUT_BATCH_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInputBatchDimension());
      hash = (37 * hash) + INPUT_FEATURE_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getInputFeatureDimension());
      if (getInputSpatialDimensionsCount() > 0) {
        hash = (37 * hash) + INPUT_SPATIAL_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getInputSpatialDimensionsList().hashCode();
      }
      hash = (37 * hash) + KERNEL_INPUT_FEATURE_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKernelInputFeatureDimension());
      hash = (37 * hash) + KERNEL_OUTPUT_FEATURE_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getKernelOutputFeatureDimension());
      if (getKernelSpatialDimensionsCount() > 0) {
        hash = (37 * hash) + KERNEL_SPATIAL_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getKernelSpatialDimensionsList().hashCode();
      }
      hash = (37 * hash) + OUTPUT_BATCH_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOutputBatchDimension());
      hash = (37 * hash) + OUTPUT_FEATURE_DIMENSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOutputFeatureDimension());
      if (getOutputSpatialDimensionsCount() > 0) {
        hash = (37 * hash) + OUTPUT_SPATIAL_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputSpatialDimensionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ConvolutionDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ConvolutionDimensionNumbers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xla.ConvolutionDimensionNumbers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ConvolutionDimensionNumbers)
        xla.XlaData.ConvolutionDimensionNumbersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ConvolutionDimensionNumbers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ConvolutionDimensionNumbers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ConvolutionDimensionNumbers.class, xla.XlaData.ConvolutionDimensionNumbers.Builder.class);
      }

      // Construct using xla.XlaData.ConvolutionDimensionNumbers.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        inputBatchDimension_ = 0L;
        inputFeatureDimension_ = 0L;
        inputSpatialDimensions_ = emptyLongList();
        kernelInputFeatureDimension_ = 0L;
        kernelOutputFeatureDimension_ = 0L;
        kernelSpatialDimensions_ = emptyLongList();
        outputBatchDimension_ = 0L;
        outputFeatureDimension_ = 0L;
        outputSpatialDimensions_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ConvolutionDimensionNumbers_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ConvolutionDimensionNumbers getDefaultInstanceForType() {
        return xla.XlaData.ConvolutionDimensionNumbers.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ConvolutionDimensionNumbers build() {
        xla.XlaData.ConvolutionDimensionNumbers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ConvolutionDimensionNumbers buildPartial() {
        xla.XlaData.ConvolutionDimensionNumbers result = new xla.XlaData.ConvolutionDimensionNumbers(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.ConvolutionDimensionNumbers result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          inputSpatialDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.inputSpatialDimensions_ = inputSpatialDimensions_;
        if (((bitField0_ & 0x00000020) != 0)) {
          kernelSpatialDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.kernelSpatialDimensions_ = kernelSpatialDimensions_;
        if (((bitField0_ & 0x00000100) != 0)) {
          outputSpatialDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.outputSpatialDimensions_ = outputSpatialDimensions_;
      }

      private void buildPartial0(xla.XlaData.ConvolutionDimensionNumbers result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.inputBatchDimension_ = inputBatchDimension_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.inputFeatureDimension_ = inputFeatureDimension_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.kernelInputFeatureDimension_ = kernelInputFeatureDimension_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.kernelOutputFeatureDimension_ = kernelOutputFeatureDimension_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.outputBatchDimension_ = outputBatchDimension_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.outputFeatureDimension_ = outputFeatureDimension_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ConvolutionDimensionNumbers) {
          return mergeFrom((xla.XlaData.ConvolutionDimensionNumbers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ConvolutionDimensionNumbers other) {
        if (other == xla.XlaData.ConvolutionDimensionNumbers.getDefaultInstance()) return this;
        if (other.getInputBatchDimension() != 0L) {
          setInputBatchDimension(other.getInputBatchDimension());
        }
        if (other.getInputFeatureDimension() != 0L) {
          setInputFeatureDimension(other.getInputFeatureDimension());
        }
        if (!other.inputSpatialDimensions_.isEmpty()) {
          if (inputSpatialDimensions_.isEmpty()) {
            inputSpatialDimensions_ = other.inputSpatialDimensions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInputSpatialDimensionsIsMutable();
            inputSpatialDimensions_.addAll(other.inputSpatialDimensions_);
          }
          onChanged();
        }
        if (other.getKernelInputFeatureDimension() != 0L) {
          setKernelInputFeatureDimension(other.getKernelInputFeatureDimension());
        }
        if (other.getKernelOutputFeatureDimension() != 0L) {
          setKernelOutputFeatureDimension(other.getKernelOutputFeatureDimension());
        }
        if (!other.kernelSpatialDimensions_.isEmpty()) {
          if (kernelSpatialDimensions_.isEmpty()) {
            kernelSpatialDimensions_ = other.kernelSpatialDimensions_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureKernelSpatialDimensionsIsMutable();
            kernelSpatialDimensions_.addAll(other.kernelSpatialDimensions_);
          }
          onChanged();
        }
        if (other.getOutputBatchDimension() != 0L) {
          setOutputBatchDimension(other.getOutputBatchDimension());
        }
        if (other.getOutputFeatureDimension() != 0L) {
          setOutputFeatureDimension(other.getOutputFeatureDimension());
        }
        if (!other.outputSpatialDimensions_.isEmpty()) {
          if (outputSpatialDimensions_.isEmpty()) {
            outputSpatialDimensions_ = other.outputSpatialDimensions_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureOutputSpatialDimensionsIsMutable();
            outputSpatialDimensions_.addAll(other.outputSpatialDimensions_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 24: {
                kernelInputFeatureDimension_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 24
              case 32: {
                kernelOutputFeatureDimension_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 32
              case 48: {
                long v = input.readInt64();
                ensureKernelSpatialDimensionsIsMutable();
                kernelSpatialDimensions_.addLong(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureKernelSpatialDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  kernelSpatialDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 56: {
                inputBatchDimension_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 56
              case 64: {
                inputFeatureDimension_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 64
              case 72: {
                outputBatchDimension_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 72
              case 80: {
                outputFeatureDimension_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 80
              case 88: {
                long v = input.readInt64();
                ensureInputSpatialDimensionsIsMutable();
                inputSpatialDimensions_.addLong(v);
                break;
              } // case 88
              case 90: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureInputSpatialDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  inputSpatialDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 90
              case 96: {
                long v = input.readInt64();
                ensureOutputSpatialDimensionsIsMutable();
                outputSpatialDimensions_.addLong(v);
                break;
              } // case 96
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureOutputSpatialDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  outputSpatialDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 98
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long inputBatchDimension_ ;
      /**
       * <pre>
       * The number of the dimension that represents batch in the input.
       * </pre>
       *
       * <code>int64 input_batch_dimension = 7;</code>
       * @return The inputBatchDimension.
       */
      @java.lang.Override
      public long getInputBatchDimension() {
        return inputBatchDimension_;
      }
      /**
       * <pre>
       * The number of the dimension that represents batch in the input.
       * </pre>
       *
       * <code>int64 input_batch_dimension = 7;</code>
       * @param value The inputBatchDimension to set.
       * @return This builder for chaining.
       */
      public Builder setInputBatchDimension(long value) {
        
        inputBatchDimension_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the dimension that represents batch in the input.
       * </pre>
       *
       * <code>int64 input_batch_dimension = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputBatchDimension() {
        bitField0_ = (bitField0_ & ~0x00000001);
        inputBatchDimension_ = 0L;
        onChanged();
        return this;
      }

      private long inputFeatureDimension_ ;
      /**
       * <pre>
       * The number of the dimension that represents features in the input.
       * </pre>
       *
       * <code>int64 input_feature_dimension = 8;</code>
       * @return The inputFeatureDimension.
       */
      @java.lang.Override
      public long getInputFeatureDimension() {
        return inputFeatureDimension_;
      }
      /**
       * <pre>
       * The number of the dimension that represents features in the input.
       * </pre>
       *
       * <code>int64 input_feature_dimension = 8;</code>
       * @param value The inputFeatureDimension to set.
       * @return This builder for chaining.
       */
      public Builder setInputFeatureDimension(long value) {
        
        inputFeatureDimension_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the dimension that represents features in the input.
       * </pre>
       *
       * <code>int64 input_feature_dimension = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputFeatureDimension() {
        bitField0_ = (bitField0_ & ~0x00000002);
        inputFeatureDimension_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList inputSpatialDimensions_ = emptyLongList();
      private void ensureInputSpatialDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          inputSpatialDimensions_ = mutableCopy(inputSpatialDimensions_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @return A list containing the inputSpatialDimensions.
       */
      public java.util.List<java.lang.Long>
          getInputSpatialDimensionsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(inputSpatialDimensions_) : inputSpatialDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @return The count of inputSpatialDimensions.
       */
      public int getInputSpatialDimensionsCount() {
        return inputSpatialDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @param index The index of the element to return.
       * @return The inputSpatialDimensions at the given index.
       */
      public long getInputSpatialDimensions(int index) {
        return inputSpatialDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @param index The index to set the value at.
       * @param value The inputSpatialDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setInputSpatialDimensions(
          int index, long value) {
        
        ensureInputSpatialDimensionsIsMutable();
        inputSpatialDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @param value The inputSpatialDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addInputSpatialDimensions(long value) {
        
        ensureInputSpatialDimensionsIsMutable();
        inputSpatialDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @param values The inputSpatialDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllInputSpatialDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureInputSpatialDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputSpatialDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the input.
       * </pre>
       *
       * <code>repeated int64 input_spatial_dimensions = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputSpatialDimensions() {
        inputSpatialDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private long kernelInputFeatureDimension_ ;
      /**
       * <pre>
       * The number of the dimension that represents input features in the
       * convolutional kernel (rhs).
       * </pre>
       *
       * <code>int64 kernel_input_feature_dimension = 3;</code>
       * @return The kernelInputFeatureDimension.
       */
      @java.lang.Override
      public long getKernelInputFeatureDimension() {
        return kernelInputFeatureDimension_;
      }
      /**
       * <pre>
       * The number of the dimension that represents input features in the
       * convolutional kernel (rhs).
       * </pre>
       *
       * <code>int64 kernel_input_feature_dimension = 3;</code>
       * @param value The kernelInputFeatureDimension to set.
       * @return This builder for chaining.
       */
      public Builder setKernelInputFeatureDimension(long value) {
        
        kernelInputFeatureDimension_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the dimension that represents input features in the
       * convolutional kernel (rhs).
       * </pre>
       *
       * <code>int64 kernel_input_feature_dimension = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearKernelInputFeatureDimension() {
        bitField0_ = (bitField0_ & ~0x00000008);
        kernelInputFeatureDimension_ = 0L;
        onChanged();
        return this;
      }

      private long kernelOutputFeatureDimension_ ;
      /**
       * <pre>
       * The number of the dimension that represents output features in
       * the convolutional kernel (rhs).
       * </pre>
       *
       * <code>int64 kernel_output_feature_dimension = 4;</code>
       * @return The kernelOutputFeatureDimension.
       */
      @java.lang.Override
      public long getKernelOutputFeatureDimension() {
        return kernelOutputFeatureDimension_;
      }
      /**
       * <pre>
       * The number of the dimension that represents output features in
       * the convolutional kernel (rhs).
       * </pre>
       *
       * <code>int64 kernel_output_feature_dimension = 4;</code>
       * @param value The kernelOutputFeatureDimension to set.
       * @return This builder for chaining.
       */
      public Builder setKernelOutputFeatureDimension(long value) {
        
        kernelOutputFeatureDimension_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the dimension that represents output features in
       * the convolutional kernel (rhs).
       * </pre>
       *
       * <code>int64 kernel_output_feature_dimension = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearKernelOutputFeatureDimension() {
        bitField0_ = (bitField0_ & ~0x00000010);
        kernelOutputFeatureDimension_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList kernelSpatialDimensions_ = emptyLongList();
      private void ensureKernelSpatialDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          kernelSpatialDimensions_ = mutableCopy(kernelSpatialDimensions_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @return A list containing the kernelSpatialDimensions.
       */
      public java.util.List<java.lang.Long>
          getKernelSpatialDimensionsList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(kernelSpatialDimensions_) : kernelSpatialDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @return The count of kernelSpatialDimensions.
       */
      public int getKernelSpatialDimensionsCount() {
        return kernelSpatialDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @param index The index of the element to return.
       * @return The kernelSpatialDimensions at the given index.
       */
      public long getKernelSpatialDimensions(int index) {
        return kernelSpatialDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @param index The index to set the value at.
       * @param value The kernelSpatialDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setKernelSpatialDimensions(
          int index, long value) {
        
        ensureKernelSpatialDimensionsIsMutable();
        kernelSpatialDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @param value The kernelSpatialDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addKernelSpatialDimensions(long value) {
        
        ensureKernelSpatialDimensionsIsMutable();
        kernelSpatialDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @param values The kernelSpatialDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllKernelSpatialDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureKernelSpatialDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, kernelSpatialDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the kernel (rhs). window.strides(0) is the
       * stride in the kernel_spatial_dimensions(0) dimension.
       * </pre>
       *
       * <code>repeated int64 kernel_spatial_dimensions = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKernelSpatialDimensions() {
        kernelSpatialDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private long outputBatchDimension_ ;
      /**
       * <pre>
       * The number of the dimension that represents batch in the output.
       * </pre>
       *
       * <code>int64 output_batch_dimension = 9;</code>
       * @return The outputBatchDimension.
       */
      @java.lang.Override
      public long getOutputBatchDimension() {
        return outputBatchDimension_;
      }
      /**
       * <pre>
       * The number of the dimension that represents batch in the output.
       * </pre>
       *
       * <code>int64 output_batch_dimension = 9;</code>
       * @param value The outputBatchDimension to set.
       * @return This builder for chaining.
       */
      public Builder setOutputBatchDimension(long value) {
        
        outputBatchDimension_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the dimension that represents batch in the output.
       * </pre>
       *
       * <code>int64 output_batch_dimension = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputBatchDimension() {
        bitField0_ = (bitField0_ & ~0x00000040);
        outputBatchDimension_ = 0L;
        onChanged();
        return this;
      }

      private long outputFeatureDimension_ ;
      /**
       * <pre>
       * The number of the dimension that represents features in the output.
       * </pre>
       *
       * <code>int64 output_feature_dimension = 10;</code>
       * @return The outputFeatureDimension.
       */
      @java.lang.Override
      public long getOutputFeatureDimension() {
        return outputFeatureDimension_;
      }
      /**
       * <pre>
       * The number of the dimension that represents features in the output.
       * </pre>
       *
       * <code>int64 output_feature_dimension = 10;</code>
       * @param value The outputFeatureDimension to set.
       * @return This builder for chaining.
       */
      public Builder setOutputFeatureDimension(long value) {
        
        outputFeatureDimension_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of the dimension that represents features in the output.
       * </pre>
       *
       * <code>int64 output_feature_dimension = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputFeatureDimension() {
        bitField0_ = (bitField0_ & ~0x00000080);
        outputFeatureDimension_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList outputSpatialDimensions_ = emptyLongList();
      private void ensureOutputSpatialDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          outputSpatialDimensions_ = mutableCopy(outputSpatialDimensions_);
          bitField0_ |= 0x00000100;
        }
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @return A list containing the outputSpatialDimensions.
       */
      public java.util.List<java.lang.Long>
          getOutputSpatialDimensionsList() {
        return ((bitField0_ & 0x00000100) != 0) ?
                 java.util.Collections.unmodifiableList(outputSpatialDimensions_) : outputSpatialDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @return The count of outputSpatialDimensions.
       */
      public int getOutputSpatialDimensionsCount() {
        return outputSpatialDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @param index The index of the element to return.
       * @return The outputSpatialDimensions at the given index.
       */
      public long getOutputSpatialDimensions(int index) {
        return outputSpatialDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @param index The index to set the value at.
       * @param value The outputSpatialDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setOutputSpatialDimensions(
          int index, long value) {
        
        ensureOutputSpatialDimensionsIsMutable();
        outputSpatialDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @param value The outputSpatialDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addOutputSpatialDimensions(long value) {
        
        ensureOutputSpatialDimensionsIsMutable();
        outputSpatialDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @param values The outputSpatialDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllOutputSpatialDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureOutputSpatialDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputSpatialDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers for the spatial dimensions that the window
       * moves through in the output.
       * </pre>
       *
       * <code>repeated int64 output_spatial_dimensions = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputSpatialDimensions() {
        outputSpatialDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ConvolutionDimensionNumbers)
    }

    // @@protoc_insertion_point(class_scope:xla.ConvolutionDimensionNumbers)
    private static final xla.XlaData.ConvolutionDimensionNumbers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ConvolutionDimensionNumbers();
    }

    public static xla.XlaData.ConvolutionDimensionNumbers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConvolutionDimensionNumbers>
        PARSER = new com.google.protobuf.AbstractParser<ConvolutionDimensionNumbers>() {
      @java.lang.Override
      public ConvolutionDimensionNumbers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ConvolutionDimensionNumbers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConvolutionDimensionNumbers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ConvolutionDimensionNumbers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DotDimensionNumbersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.DotDimensionNumbers)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
     * @return A list containing the lhsContractingDimensions.
     */
    java.util.List<java.lang.Long> getLhsContractingDimensionsList();
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
     * @return The count of lhsContractingDimensions.
     */
    int getLhsContractingDimensionsCount();
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
     * @param index The index of the element to return.
     * @return The lhsContractingDimensions at the given index.
     */
    long getLhsContractingDimensions(int index);

    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
     * @return A list containing the rhsContractingDimensions.
     */
    java.util.List<java.lang.Long> getRhsContractingDimensionsList();
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
     * @return The count of rhsContractingDimensions.
     */
    int getRhsContractingDimensionsCount();
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
     * @param index The index of the element to return.
     * @return The rhsContractingDimensions at the given index.
     */
    long getRhsContractingDimensions(int index);

    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_batch_dimensions = 3;</code>
     * @return A list containing the lhsBatchDimensions.
     */
    java.util.List<java.lang.Long> getLhsBatchDimensionsList();
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_batch_dimensions = 3;</code>
     * @return The count of lhsBatchDimensions.
     */
    int getLhsBatchDimensionsCount();
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_batch_dimensions = 3;</code>
     * @param index The index of the element to return.
     * @return The lhsBatchDimensions at the given index.
     */
    long getLhsBatchDimensions(int index);

    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_batch_dimensions = 4;</code>
     * @return A list containing the rhsBatchDimensions.
     */
    java.util.List<java.lang.Long> getRhsBatchDimensionsList();
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_batch_dimensions = 4;</code>
     * @return The count of rhsBatchDimensions.
     */
    int getRhsBatchDimensionsCount();
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_batch_dimensions = 4;</code>
     * @param index The index of the element to return.
     * @return The rhsBatchDimensions at the given index.
     */
    long getRhsBatchDimensions(int index);
  }
  /**
   * Protobuf type {@code xla.DotDimensionNumbers}
   */
  public static final class DotDimensionNumbers extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.DotDimensionNumbers)
      DotDimensionNumbersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DotDimensionNumbers.newBuilder() to construct.
    private DotDimensionNumbers(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DotDimensionNumbers() {
      lhsContractingDimensions_ = emptyLongList();
      rhsContractingDimensions_ = emptyLongList();
      lhsBatchDimensions_ = emptyLongList();
      rhsBatchDimensions_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DotDimensionNumbers();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_DotDimensionNumbers_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_DotDimensionNumbers_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.DotDimensionNumbers.class, xla.XlaData.DotDimensionNumbers.Builder.class);
    }

    public static final int LHS_CONTRACTING_DIMENSIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList lhsContractingDimensions_;
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
     * @return A list containing the lhsContractingDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getLhsContractingDimensionsList() {
      return lhsContractingDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
     * @return The count of lhsContractingDimensions.
     */
    public int getLhsContractingDimensionsCount() {
      return lhsContractingDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
     * @param index The index of the element to return.
     * @return The lhsContractingDimensions at the given index.
     */
    public long getLhsContractingDimensions(int index) {
      return lhsContractingDimensions_.getLong(index);
    }
    private int lhsContractingDimensionsMemoizedSerializedSize = -1;

    public static final int RHS_CONTRACTING_DIMENSIONS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList rhsContractingDimensions_;
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
     * @return A list containing the rhsContractingDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRhsContractingDimensionsList() {
      return rhsContractingDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
     * @return The count of rhsContractingDimensions.
     */
    public int getRhsContractingDimensionsCount() {
      return rhsContractingDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' contracting dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
     * @param index The index of the element to return.
     * @return The rhsContractingDimensions at the given index.
     */
    public long getRhsContractingDimensions(int index) {
      return rhsContractingDimensions_.getLong(index);
    }
    private int rhsContractingDimensionsMemoizedSerializedSize = -1;

    public static final int LHS_BATCH_DIMENSIONS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList lhsBatchDimensions_;
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_batch_dimensions = 3;</code>
     * @return A list containing the lhsBatchDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getLhsBatchDimensionsList() {
      return lhsBatchDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_batch_dimensions = 3;</code>
     * @return The count of lhsBatchDimensions.
     */
    public int getLhsBatchDimensionsCount() {
      return lhsBatchDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'lhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 lhs_batch_dimensions = 3;</code>
     * @param index The index of the element to return.
     * @return The lhsBatchDimensions at the given index.
     */
    public long getLhsBatchDimensions(int index) {
      return lhsBatchDimensions_.getLong(index);
    }
    private int lhsBatchDimensionsMemoizedSerializedSize = -1;

    public static final int RHS_BATCH_DIMENSIONS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList rhsBatchDimensions_;
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_batch_dimensions = 4;</code>
     * @return A list containing the rhsBatchDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRhsBatchDimensionsList() {
      return rhsBatchDimensions_;
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_batch_dimensions = 4;</code>
     * @return The count of rhsBatchDimensions.
     */
    public int getRhsBatchDimensionsCount() {
      return rhsBatchDimensions_.size();
    }
    /**
     * <pre>
     * The dimension numbers that represent the 'rhs' batch dimensions.
     * </pre>
     *
     * <code>repeated int64 rhs_batch_dimensions = 4;</code>
     * @param index The index of the element to return.
     * @return The rhsBatchDimensions at the given index.
     */
    public long getRhsBatchDimensions(int index) {
      return rhsBatchDimensions_.getLong(index);
    }
    private int rhsBatchDimensionsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getLhsContractingDimensionsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(lhsContractingDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < lhsContractingDimensions_.size(); i++) {
        output.writeInt64NoTag(lhsContractingDimensions_.getLong(i));
      }
      if (getRhsContractingDimensionsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(rhsContractingDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < rhsContractingDimensions_.size(); i++) {
        output.writeInt64NoTag(rhsContractingDimensions_.getLong(i));
      }
      if (getLhsBatchDimensionsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(lhsBatchDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < lhsBatchDimensions_.size(); i++) {
        output.writeInt64NoTag(lhsBatchDimensions_.getLong(i));
      }
      if (getRhsBatchDimensionsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(rhsBatchDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < rhsBatchDimensions_.size(); i++) {
        output.writeInt64NoTag(rhsBatchDimensions_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < lhsContractingDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(lhsContractingDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getLhsContractingDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lhsContractingDimensionsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rhsContractingDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(rhsContractingDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getRhsContractingDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rhsContractingDimensionsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lhsBatchDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(lhsBatchDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getLhsBatchDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lhsBatchDimensionsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rhsBatchDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(rhsBatchDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getRhsBatchDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rhsBatchDimensionsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.DotDimensionNumbers)) {
        return super.equals(obj);
      }
      xla.XlaData.DotDimensionNumbers other = (xla.XlaData.DotDimensionNumbers) obj;

      if (!getLhsContractingDimensionsList()
          .equals(other.getLhsContractingDimensionsList())) return false;
      if (!getRhsContractingDimensionsList()
          .equals(other.getRhsContractingDimensionsList())) return false;
      if (!getLhsBatchDimensionsList()
          .equals(other.getLhsBatchDimensionsList())) return false;
      if (!getRhsBatchDimensionsList()
          .equals(other.getRhsBatchDimensionsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLhsContractingDimensionsCount() > 0) {
        hash = (37 * hash) + LHS_CONTRACTING_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getLhsContractingDimensionsList().hashCode();
      }
      if (getRhsContractingDimensionsCount() > 0) {
        hash = (37 * hash) + RHS_CONTRACTING_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRhsContractingDimensionsList().hashCode();
      }
      if (getLhsBatchDimensionsCount() > 0) {
        hash = (37 * hash) + LHS_BATCH_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getLhsBatchDimensionsList().hashCode();
      }
      if (getRhsBatchDimensionsCount() > 0) {
        hash = (37 * hash) + RHS_BATCH_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRhsBatchDimensionsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.DotDimensionNumbers parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.DotDimensionNumbers parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.DotDimensionNumbers parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.DotDimensionNumbers parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.DotDimensionNumbers prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xla.DotDimensionNumbers}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.DotDimensionNumbers)
        xla.XlaData.DotDimensionNumbersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_DotDimensionNumbers_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_DotDimensionNumbers_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.DotDimensionNumbers.class, xla.XlaData.DotDimensionNumbers.Builder.class);
      }

      // Construct using xla.XlaData.DotDimensionNumbers.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        lhsContractingDimensions_ = emptyLongList();
        rhsContractingDimensions_ = emptyLongList();
        lhsBatchDimensions_ = emptyLongList();
        rhsBatchDimensions_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_DotDimensionNumbers_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.DotDimensionNumbers getDefaultInstanceForType() {
        return xla.XlaData.DotDimensionNumbers.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.DotDimensionNumbers build() {
        xla.XlaData.DotDimensionNumbers result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.DotDimensionNumbers buildPartial() {
        xla.XlaData.DotDimensionNumbers result = new xla.XlaData.DotDimensionNumbers(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.DotDimensionNumbers result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          lhsContractingDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.lhsContractingDimensions_ = lhsContractingDimensions_;
        if (((bitField0_ & 0x00000002) != 0)) {
          rhsContractingDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rhsContractingDimensions_ = rhsContractingDimensions_;
        if (((bitField0_ & 0x00000004) != 0)) {
          lhsBatchDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.lhsBatchDimensions_ = lhsBatchDimensions_;
        if (((bitField0_ & 0x00000008) != 0)) {
          rhsBatchDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.rhsBatchDimensions_ = rhsBatchDimensions_;
      }

      private void buildPartial0(xla.XlaData.DotDimensionNumbers result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.DotDimensionNumbers) {
          return mergeFrom((xla.XlaData.DotDimensionNumbers)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.DotDimensionNumbers other) {
        if (other == xla.XlaData.DotDimensionNumbers.getDefaultInstance()) return this;
        if (!other.lhsContractingDimensions_.isEmpty()) {
          if (lhsContractingDimensions_.isEmpty()) {
            lhsContractingDimensions_ = other.lhsContractingDimensions_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLhsContractingDimensionsIsMutable();
            lhsContractingDimensions_.addAll(other.lhsContractingDimensions_);
          }
          onChanged();
        }
        if (!other.rhsContractingDimensions_.isEmpty()) {
          if (rhsContractingDimensions_.isEmpty()) {
            rhsContractingDimensions_ = other.rhsContractingDimensions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRhsContractingDimensionsIsMutable();
            rhsContractingDimensions_.addAll(other.rhsContractingDimensions_);
          }
          onChanged();
        }
        if (!other.lhsBatchDimensions_.isEmpty()) {
          if (lhsBatchDimensions_.isEmpty()) {
            lhsBatchDimensions_ = other.lhsBatchDimensions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLhsBatchDimensionsIsMutable();
            lhsBatchDimensions_.addAll(other.lhsBatchDimensions_);
          }
          onChanged();
        }
        if (!other.rhsBatchDimensions_.isEmpty()) {
          if (rhsBatchDimensions_.isEmpty()) {
            rhsBatchDimensions_ = other.rhsBatchDimensions_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRhsBatchDimensionsIsMutable();
            rhsBatchDimensions_.addAll(other.rhsBatchDimensions_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureLhsContractingDimensionsIsMutable();
                lhsContractingDimensions_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureLhsContractingDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  lhsContractingDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                long v = input.readInt64();
                ensureRhsContractingDimensionsIsMutable();
                rhsContractingDimensions_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRhsContractingDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rhsContractingDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readInt64();
                ensureLhsBatchDimensionsIsMutable();
                lhsBatchDimensions_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureLhsBatchDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  lhsBatchDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                long v = input.readInt64();
                ensureRhsBatchDimensionsIsMutable();
                rhsBatchDimensions_.addLong(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRhsBatchDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rhsBatchDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList lhsContractingDimensions_ = emptyLongList();
      private void ensureLhsContractingDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          lhsContractingDimensions_ = mutableCopy(lhsContractingDimensions_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @return A list containing the lhsContractingDimensions.
       */
      public java.util.List<java.lang.Long>
          getLhsContractingDimensionsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(lhsContractingDimensions_) : lhsContractingDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @return The count of lhsContractingDimensions.
       */
      public int getLhsContractingDimensionsCount() {
        return lhsContractingDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @param index The index of the element to return.
       * @return The lhsContractingDimensions at the given index.
       */
      public long getLhsContractingDimensions(int index) {
        return lhsContractingDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @param index The index to set the value at.
       * @param value The lhsContractingDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setLhsContractingDimensions(
          int index, long value) {
        
        ensureLhsContractingDimensionsIsMutable();
        lhsContractingDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @param value The lhsContractingDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addLhsContractingDimensions(long value) {
        
        ensureLhsContractingDimensionsIsMutable();
        lhsContractingDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @param values The lhsContractingDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllLhsContractingDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureLhsContractingDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lhsContractingDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_contracting_dimensions = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLhsContractingDimensions() {
        lhsContractingDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList rhsContractingDimensions_ = emptyLongList();
      private void ensureRhsContractingDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          rhsContractingDimensions_ = mutableCopy(rhsContractingDimensions_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @return A list containing the rhsContractingDimensions.
       */
      public java.util.List<java.lang.Long>
          getRhsContractingDimensionsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(rhsContractingDimensions_) : rhsContractingDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @return The count of rhsContractingDimensions.
       */
      public int getRhsContractingDimensionsCount() {
        return rhsContractingDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @param index The index of the element to return.
       * @return The rhsContractingDimensions at the given index.
       */
      public long getRhsContractingDimensions(int index) {
        return rhsContractingDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @param index The index to set the value at.
       * @param value The rhsContractingDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setRhsContractingDimensions(
          int index, long value) {
        
        ensureRhsContractingDimensionsIsMutable();
        rhsContractingDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @param value The rhsContractingDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addRhsContractingDimensions(long value) {
        
        ensureRhsContractingDimensionsIsMutable();
        rhsContractingDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @param values The rhsContractingDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllRhsContractingDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRhsContractingDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rhsContractingDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' contracting dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_contracting_dimensions = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRhsContractingDimensions() {
        rhsContractingDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList lhsBatchDimensions_ = emptyLongList();
      private void ensureLhsBatchDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          lhsBatchDimensions_ = mutableCopy(lhsBatchDimensions_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @return A list containing the lhsBatchDimensions.
       */
      public java.util.List<java.lang.Long>
          getLhsBatchDimensionsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(lhsBatchDimensions_) : lhsBatchDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @return The count of lhsBatchDimensions.
       */
      public int getLhsBatchDimensionsCount() {
        return lhsBatchDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @param index The index of the element to return.
       * @return The lhsBatchDimensions at the given index.
       */
      public long getLhsBatchDimensions(int index) {
        return lhsBatchDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @param index The index to set the value at.
       * @param value The lhsBatchDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setLhsBatchDimensions(
          int index, long value) {
        
        ensureLhsBatchDimensionsIsMutable();
        lhsBatchDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @param value The lhsBatchDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addLhsBatchDimensions(long value) {
        
        ensureLhsBatchDimensionsIsMutable();
        lhsBatchDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @param values The lhsBatchDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllLhsBatchDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureLhsBatchDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lhsBatchDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'lhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 lhs_batch_dimensions = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLhsBatchDimensions() {
        lhsBatchDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList rhsBatchDimensions_ = emptyLongList();
      private void ensureRhsBatchDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          rhsBatchDimensions_ = mutableCopy(rhsBatchDimensions_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @return A list containing the rhsBatchDimensions.
       */
      public java.util.List<java.lang.Long>
          getRhsBatchDimensionsList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(rhsBatchDimensions_) : rhsBatchDimensions_;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @return The count of rhsBatchDimensions.
       */
      public int getRhsBatchDimensionsCount() {
        return rhsBatchDimensions_.size();
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @param index The index of the element to return.
       * @return The rhsBatchDimensions at the given index.
       */
      public long getRhsBatchDimensions(int index) {
        return rhsBatchDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @param index The index to set the value at.
       * @param value The rhsBatchDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setRhsBatchDimensions(
          int index, long value) {
        
        ensureRhsBatchDimensionsIsMutable();
        rhsBatchDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @param value The rhsBatchDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addRhsBatchDimensions(long value) {
        
        ensureRhsBatchDimensionsIsMutable();
        rhsBatchDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @param values The rhsBatchDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllRhsBatchDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureRhsBatchDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rhsBatchDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The dimension numbers that represent the 'rhs' batch dimensions.
       * </pre>
       *
       * <code>repeated int64 rhs_batch_dimensions = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRhsBatchDimensions() {
        rhsBatchDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.DotDimensionNumbers)
    }

    // @@protoc_insertion_point(class_scope:xla.DotDimensionNumbers)
    private static final xla.XlaData.DotDimensionNumbers DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.DotDimensionNumbers();
    }

    public static xla.XlaData.DotDimensionNumbers getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DotDimensionNumbers>
        PARSER = new com.google.protobuf.AbstractParser<DotDimensionNumbers>() {
      @java.lang.Override
      public DotDimensionNumbers parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DotDimensionNumbers> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DotDimensionNumbers> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.DotDimensionNumbers getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TriangularSolveOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.TriangularSolveOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If true, solves ax = b. If false, solves xa = b.
     * </pre>
     *
     * <code>bool left_side = 1;</code>
     * @return The leftSide.
     */
    boolean getLeftSide();

    /**
     * <pre>
     * If true, 'a' is lower triangular. If false, 'a' is upper triangular.
     * </pre>
     *
     * <code>bool lower = 2;</code>
     * @return The lower.
     */
    boolean getLower();

    /**
     * <pre>
     * If true, the diagonal elements of 'a' are assumed to be 1 and not accessed.
     * </pre>
     *
     * <code>bool unit_diagonal = 3;</code>
     * @return The unitDiagonal.
     */
    boolean getUnitDiagonal();

    /**
     * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
     * @return The enum numeric value on the wire for transposeA.
     */
    int getTransposeAValue();
    /**
     * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
     * @return The transposeA.
     */
    xla.XlaData.TriangularSolveOptions.Transpose getTransposeA();
  }
  /**
   * Protobuf type {@code xla.TriangularSolveOptions}
   */
  public static final class TriangularSolveOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.TriangularSolveOptions)
      TriangularSolveOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TriangularSolveOptions.newBuilder() to construct.
    private TriangularSolveOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TriangularSolveOptions() {
      transposeA_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TriangularSolveOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_TriangularSolveOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_TriangularSolveOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.TriangularSolveOptions.class, xla.XlaData.TriangularSolveOptions.Builder.class);
    }

    /**
     * <pre>
     * Should we transpose or use the adjoint of 'a'?
     * </pre>
     *
     * Protobuf enum {@code xla.TriangularSolveOptions.Transpose}
     */
    public enum Transpose
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TRANSPOSE_INVALID = 0;</code>
       */
      TRANSPOSE_INVALID(0),
      /**
       * <pre>
       * Don't transpose 'a'.
       * </pre>
       *
       * <code>NO_TRANSPOSE = 1;</code>
       */
      NO_TRANSPOSE(1),
      /**
       * <pre>
       * Transpose 'a'.
       * </pre>
       *
       * <code>TRANSPOSE = 2;</code>
       */
      TRANSPOSE(2),
      /**
       * <pre>
       * Complex conjugate and transpose 'a'.
       * </pre>
       *
       * <code>ADJOINT = 3;</code>
       */
      ADJOINT(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TRANSPOSE_INVALID = 0;</code>
       */
      public static final int TRANSPOSE_INVALID_VALUE = 0;
      /**
       * <pre>
       * Don't transpose 'a'.
       * </pre>
       *
       * <code>NO_TRANSPOSE = 1;</code>
       */
      public static final int NO_TRANSPOSE_VALUE = 1;
      /**
       * <pre>
       * Transpose 'a'.
       * </pre>
       *
       * <code>TRANSPOSE = 2;</code>
       */
      public static final int TRANSPOSE_VALUE = 2;
      /**
       * <pre>
       * Complex conjugate and transpose 'a'.
       * </pre>
       *
       * <code>ADJOINT = 3;</code>
       */
      public static final int ADJOINT_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Transpose valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Transpose forNumber(int value) {
        switch (value) {
          case 0: return TRANSPOSE_INVALID;
          case 1: return NO_TRANSPOSE;
          case 2: return TRANSPOSE;
          case 3: return ADJOINT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Transpose>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Transpose> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Transpose>() {
              public Transpose findValueByNumber(int number) {
                return Transpose.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return xla.XlaData.TriangularSolveOptions.getDescriptor().getEnumTypes().get(0);
      }

      private static final Transpose[] VALUES = values();

      public static Transpose valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Transpose(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:xla.TriangularSolveOptions.Transpose)
    }

    public static final int LEFT_SIDE_FIELD_NUMBER = 1;
    private boolean leftSide_ = false;
    /**
     * <pre>
     * If true, solves ax = b. If false, solves xa = b.
     * </pre>
     *
     * <code>bool left_side = 1;</code>
     * @return The leftSide.
     */
    @java.lang.Override
    public boolean getLeftSide() {
      return leftSide_;
    }

    public static final int LOWER_FIELD_NUMBER = 2;
    private boolean lower_ = false;
    /**
     * <pre>
     * If true, 'a' is lower triangular. If false, 'a' is upper triangular.
     * </pre>
     *
     * <code>bool lower = 2;</code>
     * @return The lower.
     */
    @java.lang.Override
    public boolean getLower() {
      return lower_;
    }

    public static final int UNIT_DIAGONAL_FIELD_NUMBER = 3;
    private boolean unitDiagonal_ = false;
    /**
     * <pre>
     * If true, the diagonal elements of 'a' are assumed to be 1 and not accessed.
     * </pre>
     *
     * <code>bool unit_diagonal = 3;</code>
     * @return The unitDiagonal.
     */
    @java.lang.Override
    public boolean getUnitDiagonal() {
      return unitDiagonal_;
    }

    public static final int TRANSPOSE_A_FIELD_NUMBER = 4;
    private int transposeA_ = 0;
    /**
     * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
     * @return The enum numeric value on the wire for transposeA.
     */
    @java.lang.Override public int getTransposeAValue() {
      return transposeA_;
    }
    /**
     * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
     * @return The transposeA.
     */
    @java.lang.Override public xla.XlaData.TriangularSolveOptions.Transpose getTransposeA() {
      xla.XlaData.TriangularSolveOptions.Transpose result = xla.XlaData.TriangularSolveOptions.Transpose.forNumber(transposeA_);
      return result == null ? xla.XlaData.TriangularSolveOptions.Transpose.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (leftSide_ != false) {
        output.writeBool(1, leftSide_);
      }
      if (lower_ != false) {
        output.writeBool(2, lower_);
      }
      if (unitDiagonal_ != false) {
        output.writeBool(3, unitDiagonal_);
      }
      if (transposeA_ != xla.XlaData.TriangularSolveOptions.Transpose.TRANSPOSE_INVALID.getNumber()) {
        output.writeEnum(4, transposeA_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (leftSide_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, leftSide_);
      }
      if (lower_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, lower_);
      }
      if (unitDiagonal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, unitDiagonal_);
      }
      if (transposeA_ != xla.XlaData.TriangularSolveOptions.Transpose.TRANSPOSE_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, transposeA_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.TriangularSolveOptions)) {
        return super.equals(obj);
      }
      xla.XlaData.TriangularSolveOptions other = (xla.XlaData.TriangularSolveOptions) obj;

      if (getLeftSide()
          != other.getLeftSide()) return false;
      if (getLower()
          != other.getLower()) return false;
      if (getUnitDiagonal()
          != other.getUnitDiagonal()) return false;
      if (transposeA_ != other.transposeA_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEFT_SIDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLeftSide());
      hash = (37 * hash) + LOWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLower());
      hash = (37 * hash) + UNIT_DIAGONAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUnitDiagonal());
      hash = (37 * hash) + TRANSPOSE_A_FIELD_NUMBER;
      hash = (53 * hash) + transposeA_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.TriangularSolveOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.TriangularSolveOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.TriangularSolveOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.TriangularSolveOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.TriangularSolveOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xla.TriangularSolveOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.TriangularSolveOptions)
        xla.XlaData.TriangularSolveOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_TriangularSolveOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_TriangularSolveOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.TriangularSolveOptions.class, xla.XlaData.TriangularSolveOptions.Builder.class);
      }

      // Construct using xla.XlaData.TriangularSolveOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        leftSide_ = false;
        lower_ = false;
        unitDiagonal_ = false;
        transposeA_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_TriangularSolveOptions_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.TriangularSolveOptions getDefaultInstanceForType() {
        return xla.XlaData.TriangularSolveOptions.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.TriangularSolveOptions build() {
        xla.XlaData.TriangularSolveOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.TriangularSolveOptions buildPartial() {
        xla.XlaData.TriangularSolveOptions result = new xla.XlaData.TriangularSolveOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.TriangularSolveOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.leftSide_ = leftSide_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.lower_ = lower_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.unitDiagonal_ = unitDiagonal_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.transposeA_ = transposeA_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.TriangularSolveOptions) {
          return mergeFrom((xla.XlaData.TriangularSolveOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.TriangularSolveOptions other) {
        if (other == xla.XlaData.TriangularSolveOptions.getDefaultInstance()) return this;
        if (other.getLeftSide() != false) {
          setLeftSide(other.getLeftSide());
        }
        if (other.getLower() != false) {
          setLower(other.getLower());
        }
        if (other.getUnitDiagonal() != false) {
          setUnitDiagonal(other.getUnitDiagonal());
        }
        if (other.transposeA_ != 0) {
          setTransposeAValue(other.getTransposeAValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                leftSide_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                lower_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                unitDiagonal_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                transposeA_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean leftSide_ ;
      /**
       * <pre>
       * If true, solves ax = b. If false, solves xa = b.
       * </pre>
       *
       * <code>bool left_side = 1;</code>
       * @return The leftSide.
       */
      @java.lang.Override
      public boolean getLeftSide() {
        return leftSide_;
      }
      /**
       * <pre>
       * If true, solves ax = b. If false, solves xa = b.
       * </pre>
       *
       * <code>bool left_side = 1;</code>
       * @param value The leftSide to set.
       * @return This builder for chaining.
       */
      public Builder setLeftSide(boolean value) {
        
        leftSide_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, solves ax = b. If false, solves xa = b.
       * </pre>
       *
       * <code>bool left_side = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftSide() {
        bitField0_ = (bitField0_ & ~0x00000001);
        leftSide_ = false;
        onChanged();
        return this;
      }

      private boolean lower_ ;
      /**
       * <pre>
       * If true, 'a' is lower triangular. If false, 'a' is upper triangular.
       * </pre>
       *
       * <code>bool lower = 2;</code>
       * @return The lower.
       */
      @java.lang.Override
      public boolean getLower() {
        return lower_;
      }
      /**
       * <pre>
       * If true, 'a' is lower triangular. If false, 'a' is upper triangular.
       * </pre>
       *
       * <code>bool lower = 2;</code>
       * @param value The lower to set.
       * @return This builder for chaining.
       */
      public Builder setLower(boolean value) {
        
        lower_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, 'a' is lower triangular. If false, 'a' is upper triangular.
       * </pre>
       *
       * <code>bool lower = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLower() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lower_ = false;
        onChanged();
        return this;
      }

      private boolean unitDiagonal_ ;
      /**
       * <pre>
       * If true, the diagonal elements of 'a' are assumed to be 1 and not accessed.
       * </pre>
       *
       * <code>bool unit_diagonal = 3;</code>
       * @return The unitDiagonal.
       */
      @java.lang.Override
      public boolean getUnitDiagonal() {
        return unitDiagonal_;
      }
      /**
       * <pre>
       * If true, the diagonal elements of 'a' are assumed to be 1 and not accessed.
       * </pre>
       *
       * <code>bool unit_diagonal = 3;</code>
       * @param value The unitDiagonal to set.
       * @return This builder for chaining.
       */
      public Builder setUnitDiagonal(boolean value) {
        
        unitDiagonal_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, the diagonal elements of 'a' are assumed to be 1 and not accessed.
       * </pre>
       *
       * <code>bool unit_diagonal = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnitDiagonal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        unitDiagonal_ = false;
        onChanged();
        return this;
      }

      private int transposeA_ = 0;
      /**
       * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
       * @return The enum numeric value on the wire for transposeA.
       */
      @java.lang.Override public int getTransposeAValue() {
        return transposeA_;
      }
      /**
       * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
       * @param value The enum numeric value on the wire for transposeA to set.
       * @return This builder for chaining.
       */
      public Builder setTransposeAValue(int value) {
        transposeA_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
       * @return The transposeA.
       */
      @java.lang.Override
      public xla.XlaData.TriangularSolveOptions.Transpose getTransposeA() {
        xla.XlaData.TriangularSolveOptions.Transpose result = xla.XlaData.TriangularSolveOptions.Transpose.forNumber(transposeA_);
        return result == null ? xla.XlaData.TriangularSolveOptions.Transpose.UNRECOGNIZED : result;
      }
      /**
       * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
       * @param value The transposeA to set.
       * @return This builder for chaining.
       */
      public Builder setTransposeA(xla.XlaData.TriangularSolveOptions.Transpose value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        transposeA_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.xla.TriangularSolveOptions.Transpose transpose_a = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransposeA() {
        bitField0_ = (bitField0_ & ~0x00000008);
        transposeA_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.TriangularSolveOptions)
    }

    // @@protoc_insertion_point(class_scope:xla.TriangularSolveOptions)
    private static final xla.XlaData.TriangularSolveOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.TriangularSolveOptions();
    }

    public static xla.XlaData.TriangularSolveOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TriangularSolveOptions>
        PARSER = new com.google.protobuf.AbstractParser<TriangularSolveOptions>() {
      @java.lang.Override
      public TriangularSolveOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TriangularSolveOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TriangularSolveOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.TriangularSolveOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CholeskyOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.CholeskyOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * If true, uses the lower triangle of `a`. If false, uses the upper triangle
     * of `a`.
     * </pre>
     *
     * <code>bool lower = 1;</code>
     * @return The lower.
     */
    boolean getLower();
  }
  /**
   * Protobuf type {@code xla.CholeskyOptions}
   */
  public static final class CholeskyOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.CholeskyOptions)
      CholeskyOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CholeskyOptions.newBuilder() to construct.
    private CholeskyOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CholeskyOptions() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CholeskyOptions();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_CholeskyOptions_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_CholeskyOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.CholeskyOptions.class, xla.XlaData.CholeskyOptions.Builder.class);
    }

    public static final int LOWER_FIELD_NUMBER = 1;
    private boolean lower_ = false;
    /**
     * <pre>
     * If true, uses the lower triangle of `a`. If false, uses the upper triangle
     * of `a`.
     * </pre>
     *
     * <code>bool lower = 1;</code>
     * @return The lower.
     */
    @java.lang.Override
    public boolean getLower() {
      return lower_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (lower_ != false) {
        output.writeBool(1, lower_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (lower_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, lower_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.CholeskyOptions)) {
        return super.equals(obj);
      }
      xla.XlaData.CholeskyOptions other = (xla.XlaData.CholeskyOptions) obj;

      if (getLower()
          != other.getLower()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LOWER_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getLower());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.CholeskyOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.CholeskyOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.CholeskyOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.CholeskyOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.CholeskyOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xla.CholeskyOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.CholeskyOptions)
        xla.XlaData.CholeskyOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_CholeskyOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_CholeskyOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.CholeskyOptions.class, xla.XlaData.CholeskyOptions.Builder.class);
      }

      // Construct using xla.XlaData.CholeskyOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        lower_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_CholeskyOptions_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.CholeskyOptions getDefaultInstanceForType() {
        return xla.XlaData.CholeskyOptions.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.CholeskyOptions build() {
        xla.XlaData.CholeskyOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.CholeskyOptions buildPartial() {
        xla.XlaData.CholeskyOptions result = new xla.XlaData.CholeskyOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.CholeskyOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.lower_ = lower_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.CholeskyOptions) {
          return mergeFrom((xla.XlaData.CholeskyOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.CholeskyOptions other) {
        if (other == xla.XlaData.CholeskyOptions.getDefaultInstance()) return this;
        if (other.getLower() != false) {
          setLower(other.getLower());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                lower_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean lower_ ;
      /**
       * <pre>
       * If true, uses the lower triangle of `a`. If false, uses the upper triangle
       * of `a`.
       * </pre>
       *
       * <code>bool lower = 1;</code>
       * @return The lower.
       */
      @java.lang.Override
      public boolean getLower() {
        return lower_;
      }
      /**
       * <pre>
       * If true, uses the lower triangle of `a`. If false, uses the upper triangle
       * of `a`.
       * </pre>
       *
       * <code>bool lower = 1;</code>
       * @param value The lower to set.
       * @return This builder for chaining.
       */
      public Builder setLower(boolean value) {
        
        lower_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, uses the lower triangle of `a`. If false, uses the upper triangle
       * of `a`.
       * </pre>
       *
       * <code>bool lower = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLower() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lower_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.CholeskyOptions)
    }

    // @@protoc_insertion_point(class_scope:xla.CholeskyOptions)
    private static final xla.XlaData.CholeskyOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.CholeskyOptions();
    }

    public static xla.XlaData.CholeskyOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CholeskyOptions>
        PARSER = new com.google.protobuf.AbstractParser<CholeskyOptions>() {
      @java.lang.Override
      public CholeskyOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CholeskyOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CholeskyOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.CholeskyOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FrontendAttributesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.FrontendAttributes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    int getMapCount();
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    boolean containsMap(
        java.lang.String key);
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMap();
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMapMap();
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    java.lang.String getMapOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Generic map of attributes used to pass hints / configuration options from
   * the Python frontend to the XLA backend.
   * </pre>
   *
   * Protobuf type {@code xla.FrontendAttributes}
   */
  public static final class FrontendAttributes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.FrontendAttributes)
      FrontendAttributesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrontendAttributes.newBuilder() to construct.
    private FrontendAttributes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrontendAttributes() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FrontendAttributes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_FrontendAttributes_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_FrontendAttributes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.FrontendAttributes.class, xla.XlaData.FrontendAttributes.Builder.class);
    }

    public static final int MAP_FIELD_NUMBER = 1;
    private static final class MapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  xla.XlaData.internal_static_xla_FrontendAttributes_MapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> map_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMap() {
      if (map_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MapDefaultEntryHolder.defaultEntry);
      }
      return map_;
    }
    public int getMapCount() {
      return internalGetMap().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    @java.lang.Override
    public boolean containsMap(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMap() {
      return getMapMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
      return internalGetMap().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
java.lang.String getMapOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; map = 1;</code>
     */
    @java.lang.Override
    public java.lang.String getMapOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMap(),
          MapDefaultEntryHolder.defaultEntry,
          1);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        map__ = MapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, map__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.FrontendAttributes)) {
        return super.equals(obj);
      }
      xla.XlaData.FrontendAttributes other = (xla.XlaData.FrontendAttributes) obj;

      if (!internalGetMap().equals(
          other.internalGetMap())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetMap().getMap().isEmpty()) {
        hash = (37 * hash) + MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMap().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.FrontendAttributes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.FrontendAttributes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.FrontendAttributes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.FrontendAttributes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.FrontendAttributes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Generic map of attributes used to pass hints / configuration options from
     * the Python frontend to the XLA backend.
     * </pre>
     *
     * Protobuf type {@code xla.FrontendAttributes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.FrontendAttributes)
        xla.XlaData.FrontendAttributesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_FrontendAttributes_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_FrontendAttributes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.FrontendAttributes.class, xla.XlaData.FrontendAttributes.Builder.class);
      }

      // Construct using xla.XlaData.FrontendAttributes.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        internalGetMutableMap().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_FrontendAttributes_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.FrontendAttributes getDefaultInstanceForType() {
        return xla.XlaData.FrontendAttributes.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.FrontendAttributes build() {
        xla.XlaData.FrontendAttributes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.FrontendAttributes buildPartial() {
        xla.XlaData.FrontendAttributes result = new xla.XlaData.FrontendAttributes(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.FrontendAttributes result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.map_ = internalGetMap();
          result.map_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.FrontendAttributes) {
          return mergeFrom((xla.XlaData.FrontendAttributes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.FrontendAttributes other) {
        if (other == xla.XlaData.FrontendAttributes.getDefaultInstance()) return this;
        internalGetMutableMap().mergeFrom(
            other.internalGetMap());
        bitField0_ |= 0x00000001;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
                map__ = input.readMessage(
                    MapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableMap().getMutableMap().put(
                    map__.getKey(), map__.getValue());
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> map_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMap() {
        if (map_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        return map_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
          internalGetMutableMap() {
        if (map_ == null) {
          map_ = com.google.protobuf.MapField.newMapField(
              MapDefaultEntryHolder.defaultEntry);
        }
        if (!map_.isMutable()) {
          map_ = map_.copy();
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return map_;
      }
      public int getMapCount() {
        return internalGetMap().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      @java.lang.Override
      public boolean containsMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMap() {
        return getMapMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.String> getMapMap() {
        return internalGetMap().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
java.lang.String getMapOrDefault(
          java.lang.String key,
          /* nullable */
java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      @java.lang.Override
      public java.lang.String getMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearMap() {
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      public Builder removeMap(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
          getMutableMap() {
        bitField0_ |= 0x00000001;
        return internalGetMutableMap().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      public Builder putMap(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; map = 1;</code>
       */
      public Builder putAllMap(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000001;
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.FrontendAttributes)
    }

    // @@protoc_insertion_point(class_scope:xla.FrontendAttributes)
    private static final xla.XlaData.FrontendAttributes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.FrontendAttributes();
    }

    public static xla.XlaData.FrontendAttributes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FrontendAttributes>
        PARSER = new com.google.protobuf.AbstractParser<FrontendAttributes>() {
      @java.lang.Override
      public FrontendAttributes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FrontendAttributes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FrontendAttributes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.FrontendAttributes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OpShardingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.OpSharding)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xla.OpSharding.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.xla.OpSharding.Type type = 1;</code>
     * @return The type.
     */
    xla.XlaData.OpSharding.Type getType();

    /**
     * <pre>
     * The shape of the sharded tile.
     * </pre>
     *
     * <code>.xla.ShapeProto tile_shape = 2;</code>
     * @return Whether the tileShape field is set.
     */
    boolean hasTileShape();
    /**
     * <pre>
     * The shape of the sharded tile.
     * </pre>
     *
     * <code>.xla.ShapeProto tile_shape = 2;</code>
     * @return The tileShape.
     */
    xla.XlaData.ShapeProto getTileShape();
    /**
     * <pre>
     * The shape of the sharded tile.
     * </pre>
     *
     * <code>.xla.ShapeProto tile_shape = 2;</code>
     */
    xla.XlaData.ShapeProtoOrBuilder getTileShapeOrBuilder();

    /**
     * <pre>
     * The shape of the tile assignment tensor - this must be the same rank as
     * tile_shape and the product of its dimensions must equal
     * tile_assignment_devices.size().
     * </pre>
     *
     * <code>repeated int64 tile_assignment_dimensions = 3;</code>
     * @return A list containing the tileAssignmentDimensions.
     */
    java.util.List<java.lang.Long> getTileAssignmentDimensionsList();
    /**
     * <pre>
     * The shape of the tile assignment tensor - this must be the same rank as
     * tile_shape and the product of its dimensions must equal
     * tile_assignment_devices.size().
     * </pre>
     *
     * <code>repeated int64 tile_assignment_dimensions = 3;</code>
     * @return The count of tileAssignmentDimensions.
     */
    int getTileAssignmentDimensionsCount();
    /**
     * <pre>
     * The shape of the tile assignment tensor - this must be the same rank as
     * tile_shape and the product of its dimensions must equal
     * tile_assignment_devices.size().
     * </pre>
     *
     * <code>repeated int64 tile_assignment_dimensions = 3;</code>
     * @param index The index of the element to return.
     * @return The tileAssignmentDimensions at the given index.
     */
    long getTileAssignmentDimensions(int index);

    /**
     * <pre>
     * Flattened list of device IDs. The order of flattening is the same as used
     * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
     * </pre>
     *
     * <code>repeated int64 tile_assignment_devices = 4;</code>
     * @return A list containing the tileAssignmentDevices.
     */
    java.util.List<java.lang.Long> getTileAssignmentDevicesList();
    /**
     * <pre>
     * Flattened list of device IDs. The order of flattening is the same as used
     * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
     * </pre>
     *
     * <code>repeated int64 tile_assignment_devices = 4;</code>
     * @return The count of tileAssignmentDevices.
     */
    int getTileAssignmentDevicesCount();
    /**
     * <pre>
     * Flattened list of device IDs. The order of flattening is the same as used
     * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
     * </pre>
     *
     * <code>repeated int64 tile_assignment_devices = 4;</code>
     * @param index The index of the element to return.
     * @return The tileAssignmentDevices at the given index.
     */
    long getTileAssignmentDevices(int index);

    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    java.util.List<xla.XlaData.OpSharding> 
        getTupleShardingsList();
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    xla.XlaData.OpSharding getTupleShardings(int index);
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    int getTupleShardingsCount();
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    java.util.List<? extends xla.XlaData.OpShardingOrBuilder> 
        getTupleShardingsOrBuilderList();
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    xla.XlaData.OpShardingOrBuilder getTupleShardingsOrBuilder(
        int index);

    /**
     * <pre>
     * Only used for OTHER type. If true, data is sharded according to other
     * dimensions of tile_assignment(), but replicated across devices along the
     * last dimension. (Experimental)
     * </pre>
     *
     * <code>bool replicate_on_last_tile_dim = 6;</code>
     * @return The replicateOnLastTileDim.
     */
    boolean getReplicateOnLastTileDim();

    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    java.util.List<xla.XlaData.OpMetadata> 
        getMetadataList();
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    xla.XlaData.OpMetadata getMetadata(int index);
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    int getMetadataCount();
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    java.util.List<? extends xla.XlaData.OpMetadataOrBuilder> 
        getMetadataOrBuilderList();
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    xla.XlaData.OpMetadataOrBuilder getMetadataOrBuilder(
        int index);

    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @return A list containing the lastTileDims.
     */
    java.util.List<xla.XlaData.OpSharding.Type> getLastTileDimsList();
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @return The count of lastTileDims.
     */
    int getLastTileDimsCount();
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @param index The index of the element to return.
     * @return The lastTileDims at the given index.
     */
    xla.XlaData.OpSharding.Type getLastTileDims(int index);
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @return A list containing the enum numeric values on the wire for lastTileDims.
     */
    java.util.List<java.lang.Integer>
    getLastTileDimsValueList();
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of lastTileDims at the given index.
     */
    int getLastTileDimsValue(int index);
  }
  /**
   * Protobuf type {@code xla.OpSharding}
   */
  public static final class OpSharding extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.OpSharding)
      OpShardingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OpSharding.newBuilder() to construct.
    private OpSharding(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpSharding() {
      type_ = 0;
      tileAssignmentDimensions_ = emptyLongList();
      tileAssignmentDevices_ = emptyLongList();
      tupleShardings_ = java.util.Collections.emptyList();
      metadata_ = java.util.Collections.emptyList();
      lastTileDims_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OpSharding();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_OpSharding_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_OpSharding_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.OpSharding.class, xla.XlaData.OpSharding.Builder.class);
    }

    /**
     * Protobuf enum {@code xla.OpSharding.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * This sharding is replicated across all devices (implies maximal,
       * all other fields are unused).
       * </pre>
       *
       * <code>REPLICATED = 0;</code>
       */
      REPLICATED(0),
      /**
       * <pre>
       * This sharding is maximal - one device runs the entire operation.
       * </pre>
       *
       * <code>MAXIMAL = 1;</code>
       */
      MAXIMAL(1),
      /**
       * <pre>
       * This sharding is a tuple - only the tuple_shardings field is valid.
       * </pre>
       *
       * <code>TUPLE = 2;</code>
       */
      TUPLE(2),
      /**
       * <pre>
       * None of the above; tile_shape and tile_assignment are both used.
       * </pre>
       *
       * <code>OTHER = 3;</code>
       */
      OTHER(3),
      /**
       * <pre>
       * This op is manually sharded: the shapes are already partitioned and the
       * partitioner should not change this op.
       * </pre>
       *
       * <code>MANUAL = 4;</code>
       */
      MANUAL(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * This sharding is replicated across all devices (implies maximal,
       * all other fields are unused).
       * </pre>
       *
       * <code>REPLICATED = 0;</code>
       */
      public static final int REPLICATED_VALUE = 0;
      /**
       * <pre>
       * This sharding is maximal - one device runs the entire operation.
       * </pre>
       *
       * <code>MAXIMAL = 1;</code>
       */
      public static final int MAXIMAL_VALUE = 1;
      /**
       * <pre>
       * This sharding is a tuple - only the tuple_shardings field is valid.
       * </pre>
       *
       * <code>TUPLE = 2;</code>
       */
      public static final int TUPLE_VALUE = 2;
      /**
       * <pre>
       * None of the above; tile_shape and tile_assignment are both used.
       * </pre>
       *
       * <code>OTHER = 3;</code>
       */
      public static final int OTHER_VALUE = 3;
      /**
       * <pre>
       * This op is manually sharded: the shapes are already partitioned and the
       * partitioner should not change this op.
       * </pre>
       *
       * <code>MANUAL = 4;</code>
       */
      public static final int MANUAL_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return REPLICATED;
          case 1: return MAXIMAL;
          case 2: return TUPLE;
          case 3: return OTHER;
          case 4: return MANUAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return xla.XlaData.OpSharding.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:xla.OpSharding.Type)
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>.xla.OpSharding.Type type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.xla.OpSharding.Type type = 1;</code>
     * @return The type.
     */
    @java.lang.Override public xla.XlaData.OpSharding.Type getType() {
      xla.XlaData.OpSharding.Type result = xla.XlaData.OpSharding.Type.forNumber(type_);
      return result == null ? xla.XlaData.OpSharding.Type.UNRECOGNIZED : result;
    }

    public static final int TILE_SHAPE_FIELD_NUMBER = 2;
    private xla.XlaData.ShapeProto tileShape_;
    /**
     * <pre>
     * The shape of the sharded tile.
     * </pre>
     *
     * <code>.xla.ShapeProto tile_shape = 2;</code>
     * @return Whether the tileShape field is set.
     */
    @java.lang.Override
    public boolean hasTileShape() {
      return tileShape_ != null;
    }
    /**
     * <pre>
     * The shape of the sharded tile.
     * </pre>
     *
     * <code>.xla.ShapeProto tile_shape = 2;</code>
     * @return The tileShape.
     */
    @java.lang.Override
    public xla.XlaData.ShapeProto getTileShape() {
      return tileShape_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : tileShape_;
    }
    /**
     * <pre>
     * The shape of the sharded tile.
     * </pre>
     *
     * <code>.xla.ShapeProto tile_shape = 2;</code>
     */
    @java.lang.Override
    public xla.XlaData.ShapeProtoOrBuilder getTileShapeOrBuilder() {
      return tileShape_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : tileShape_;
    }

    public static final int TILE_ASSIGNMENT_DIMENSIONS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList tileAssignmentDimensions_;
    /**
     * <pre>
     * The shape of the tile assignment tensor - this must be the same rank as
     * tile_shape and the product of its dimensions must equal
     * tile_assignment_devices.size().
     * </pre>
     *
     * <code>repeated int64 tile_assignment_dimensions = 3;</code>
     * @return A list containing the tileAssignmentDimensions.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getTileAssignmentDimensionsList() {
      return tileAssignmentDimensions_;
    }
    /**
     * <pre>
     * The shape of the tile assignment tensor - this must be the same rank as
     * tile_shape and the product of its dimensions must equal
     * tile_assignment_devices.size().
     * </pre>
     *
     * <code>repeated int64 tile_assignment_dimensions = 3;</code>
     * @return The count of tileAssignmentDimensions.
     */
    public int getTileAssignmentDimensionsCount() {
      return tileAssignmentDimensions_.size();
    }
    /**
     * <pre>
     * The shape of the tile assignment tensor - this must be the same rank as
     * tile_shape and the product of its dimensions must equal
     * tile_assignment_devices.size().
     * </pre>
     *
     * <code>repeated int64 tile_assignment_dimensions = 3;</code>
     * @param index The index of the element to return.
     * @return The tileAssignmentDimensions at the given index.
     */
    public long getTileAssignmentDimensions(int index) {
      return tileAssignmentDimensions_.getLong(index);
    }
    private int tileAssignmentDimensionsMemoizedSerializedSize = -1;

    public static final int TILE_ASSIGNMENT_DEVICES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList tileAssignmentDevices_;
    /**
     * <pre>
     * Flattened list of device IDs. The order of flattening is the same as used
     * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
     * </pre>
     *
     * <code>repeated int64 tile_assignment_devices = 4;</code>
     * @return A list containing the tileAssignmentDevices.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getTileAssignmentDevicesList() {
      return tileAssignmentDevices_;
    }
    /**
     * <pre>
     * Flattened list of device IDs. The order of flattening is the same as used
     * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
     * </pre>
     *
     * <code>repeated int64 tile_assignment_devices = 4;</code>
     * @return The count of tileAssignmentDevices.
     */
    public int getTileAssignmentDevicesCount() {
      return tileAssignmentDevices_.size();
    }
    /**
     * <pre>
     * Flattened list of device IDs. The order of flattening is the same as used
     * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
     * </pre>
     *
     * <code>repeated int64 tile_assignment_devices = 4;</code>
     * @param index The index of the element to return.
     * @return The tileAssignmentDevices at the given index.
     */
    public long getTileAssignmentDevices(int index) {
      return tileAssignmentDevices_.getLong(index);
    }
    private int tileAssignmentDevicesMemoizedSerializedSize = -1;

    public static final int TUPLE_SHARDINGS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.OpSharding> tupleShardings_;
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.OpSharding> getTupleShardingsList() {
      return tupleShardings_;
    }
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.OpShardingOrBuilder> 
        getTupleShardingsOrBuilderList() {
      return tupleShardings_;
    }
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    @java.lang.Override
    public int getTupleShardingsCount() {
      return tupleShardings_.size();
    }
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    @java.lang.Override
    public xla.XlaData.OpSharding getTupleShardings(int index) {
      return tupleShardings_.get(index);
    }
    /**
     * <pre>
     * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
     * in pre-order. The tuple shape could be nested; here we store just a
     * flattened list of all leaves in the tuple shape. Note that the tuple shape
     * is not stored here; shardings do not store the shapes to which they are
     * applied, this is inferred from the instruction this sharding gets attached
     * to.
     * </pre>
     *
     * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
     */
    @java.lang.Override
    public xla.XlaData.OpShardingOrBuilder getTupleShardingsOrBuilder(
        int index) {
      return tupleShardings_.get(index);
    }

    public static final int REPLICATE_ON_LAST_TILE_DIM_FIELD_NUMBER = 6;
    private boolean replicateOnLastTileDim_ = false;
    /**
     * <pre>
     * Only used for OTHER type. If true, data is sharded according to other
     * dimensions of tile_assignment(), but replicated across devices along the
     * last dimension. (Experimental)
     * </pre>
     *
     * <code>bool replicate_on_last_tile_dim = 6;</code>
     * @return The replicateOnLastTileDim.
     */
    @java.lang.Override
    public boolean getReplicateOnLastTileDim() {
      return replicateOnLastTileDim_;
    }

    public static final int METADATA_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private java.util.List<xla.XlaData.OpMetadata> metadata_;
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.OpMetadata> getMetadataList() {
      return metadata_;
    }
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends xla.XlaData.OpMetadataOrBuilder> 
        getMetadataOrBuilderList() {
      return metadata_;
    }
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    @java.lang.Override
    public int getMetadataCount() {
      return metadata_.size();
    }
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    @java.lang.Override
    public xla.XlaData.OpMetadata getMetadata(int index) {
      return metadata_.get(index);
    }
    /**
     * <pre>
     * This field is used to track the source of this sharding, usually derived
     * from instructions. Multple metadata may be populated if sharding is
     * combined with other shardings.  Metadata are to not be populated when
     * type == TUPLE and instead metadata should be set on individual tuple
     * elements.
     * </pre>
     *
     * <code>repeated .xla.OpMetadata metadata = 7;</code>
     */
    @java.lang.Override
    public xla.XlaData.OpMetadataOrBuilder getMetadataOrBuilder(
        int index) {
      return metadata_.get(index);
    }

    public static final int LAST_TILE_DIMS_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> lastTileDims_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, xla.XlaData.OpSharding.Type> lastTileDims_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, xla.XlaData.OpSharding.Type>() {
              public xla.XlaData.OpSharding.Type convert(java.lang.Integer from) {
                xla.XlaData.OpSharding.Type result = xla.XlaData.OpSharding.Type.forNumber(from);
                return result == null ? xla.XlaData.OpSharding.Type.UNRECOGNIZED : result;
              }
            };
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @return A list containing the lastTileDims.
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.OpSharding.Type> getLastTileDimsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, xla.XlaData.OpSharding.Type>(lastTileDims_, lastTileDims_converter_);
    }
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @return The count of lastTileDims.
     */
    @java.lang.Override
    public int getLastTileDimsCount() {
      return lastTileDims_.size();
    }
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @param index The index of the element to return.
     * @return The lastTileDims at the given index.
     */
    @java.lang.Override
    public xla.XlaData.OpSharding.Type getLastTileDims(int index) {
      return lastTileDims_converter_.convert(lastTileDims_.get(index));
    }
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @return A list containing the enum numeric values on the wire for lastTileDims.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getLastTileDimsValueList() {
      return lastTileDims_;
    }
    /**
     * <pre>
     * This field is used to represented the sharding type of each subgroup.
     * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
     * replicate, manual, unreduced}} means that each of the last 3 dimensions
     * in [2,2,2,2] represents a subgrouping in replicate, manual,
     * unreduced sharding type respectively.
     * </pre>
     *
     * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of lastTileDims at the given index.
     */
    @java.lang.Override
    public int getLastTileDimsValue(int index) {
      return lastTileDims_.get(index);
    }
    private int lastTileDimsMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (type_ != xla.XlaData.OpSharding.Type.REPLICATED.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (tileShape_ != null) {
        output.writeMessage(2, getTileShape());
      }
      if (getTileAssignmentDimensionsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(tileAssignmentDimensionsMemoizedSerializedSize);
      }
      for (int i = 0; i < tileAssignmentDimensions_.size(); i++) {
        output.writeInt64NoTag(tileAssignmentDimensions_.getLong(i));
      }
      if (getTileAssignmentDevicesList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(tileAssignmentDevicesMemoizedSerializedSize);
      }
      for (int i = 0; i < tileAssignmentDevices_.size(); i++) {
        output.writeInt64NoTag(tileAssignmentDevices_.getLong(i));
      }
      for (int i = 0; i < tupleShardings_.size(); i++) {
        output.writeMessage(5, tupleShardings_.get(i));
      }
      if (replicateOnLastTileDim_ != false) {
        output.writeBool(6, replicateOnLastTileDim_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        output.writeMessage(7, metadata_.get(i));
      }
      if (getLastTileDimsList().size() > 0) {
        output.writeUInt32NoTag(66);
        output.writeUInt32NoTag(lastTileDimsMemoizedSerializedSize);
      }
      for (int i = 0; i < lastTileDims_.size(); i++) {
        output.writeEnumNoTag(lastTileDims_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != xla.XlaData.OpSharding.Type.REPLICATED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (tileShape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTileShape());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tileAssignmentDimensions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(tileAssignmentDimensions_.getLong(i));
        }
        size += dataSize;
        if (!getTileAssignmentDimensionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        tileAssignmentDimensionsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tileAssignmentDevices_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(tileAssignmentDevices_.getLong(i));
        }
        size += dataSize;
        if (!getTileAssignmentDevicesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        tileAssignmentDevicesMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < tupleShardings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tupleShardings_.get(i));
      }
      if (replicateOnLastTileDim_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, replicateOnLastTileDim_);
      }
      for (int i = 0; i < metadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, metadata_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lastTileDims_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(lastTileDims_.get(i));
        }
        size += dataSize;
        if (!getLastTileDimsList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }lastTileDimsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.OpSharding)) {
        return super.equals(obj);
      }
      xla.XlaData.OpSharding other = (xla.XlaData.OpSharding) obj;

      if (type_ != other.type_) return false;
      if (hasTileShape() != other.hasTileShape()) return false;
      if (hasTileShape()) {
        if (!getTileShape()
            .equals(other.getTileShape())) return false;
      }
      if (!getTileAssignmentDimensionsList()
          .equals(other.getTileAssignmentDimensionsList())) return false;
      if (!getTileAssignmentDevicesList()
          .equals(other.getTileAssignmentDevicesList())) return false;
      if (!getTupleShardingsList()
          .equals(other.getTupleShardingsList())) return false;
      if (getReplicateOnLastTileDim()
          != other.getReplicateOnLastTileDim()) return false;
      if (!getMetadataList()
          .equals(other.getMetadataList())) return false;
      if (!lastTileDims_.equals(other.lastTileDims_)) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      if (hasTileShape()) {
        hash = (37 * hash) + TILE_SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getTileShape().hashCode();
      }
      if (getTileAssignmentDimensionsCount() > 0) {
        hash = (37 * hash) + TILE_ASSIGNMENT_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getTileAssignmentDimensionsList().hashCode();
      }
      if (getTileAssignmentDevicesCount() > 0) {
        hash = (37 * hash) + TILE_ASSIGNMENT_DEVICES_FIELD_NUMBER;
        hash = (53 * hash) + getTileAssignmentDevicesList().hashCode();
      }
      if (getTupleShardingsCount() > 0) {
        hash = (37 * hash) + TUPLE_SHARDINGS_FIELD_NUMBER;
        hash = (53 * hash) + getTupleShardingsList().hashCode();
      }
      hash = (37 * hash) + REPLICATE_ON_LAST_TILE_DIM_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getReplicateOnLastTileDim());
      if (getMetadataCount() > 0) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadataList().hashCode();
      }
      if (getLastTileDimsCount() > 0) {
        hash = (37 * hash) + LAST_TILE_DIMS_FIELD_NUMBER;
        hash = (53 * hash) + lastTileDims_.hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.OpSharding parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.OpSharding parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.OpSharding parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.OpSharding parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.OpSharding parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.OpSharding parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.OpSharding parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.OpSharding parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.OpSharding parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.OpSharding parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.OpSharding parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.OpSharding parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.OpSharding prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code xla.OpSharding}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.OpSharding)
        xla.XlaData.OpShardingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_OpSharding_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_OpSharding_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.OpSharding.class, xla.XlaData.OpSharding.Builder.class);
      }

      // Construct using xla.XlaData.OpSharding.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        tileShape_ = null;
        if (tileShapeBuilder_ != null) {
          tileShapeBuilder_.dispose();
          tileShapeBuilder_ = null;
        }
        tileAssignmentDimensions_ = emptyLongList();
        tileAssignmentDevices_ = emptyLongList();
        if (tupleShardingsBuilder_ == null) {
          tupleShardings_ = java.util.Collections.emptyList();
        } else {
          tupleShardings_ = null;
          tupleShardingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        replicateOnLastTileDim_ = false;
        if (metadataBuilder_ == null) {
          metadata_ = java.util.Collections.emptyList();
        } else {
          metadata_ = null;
          metadataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        lastTileDims_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_OpSharding_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.OpSharding getDefaultInstanceForType() {
        return xla.XlaData.OpSharding.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.OpSharding build() {
        xla.XlaData.OpSharding result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.OpSharding buildPartial() {
        xla.XlaData.OpSharding result = new xla.XlaData.OpSharding(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.OpSharding result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          tileAssignmentDimensions_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.tileAssignmentDimensions_ = tileAssignmentDimensions_;
        if (((bitField0_ & 0x00000008) != 0)) {
          tileAssignmentDevices_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tileAssignmentDevices_ = tileAssignmentDevices_;
        if (tupleShardingsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            tupleShardings_ = java.util.Collections.unmodifiableList(tupleShardings_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tupleShardings_ = tupleShardings_;
        } else {
          result.tupleShardings_ = tupleShardingsBuilder_.build();
        }
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            metadata_ = java.util.Collections.unmodifiableList(metadata_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          lastTileDims_ = java.util.Collections.unmodifiableList(lastTileDims_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.lastTileDims_ = lastTileDims_;
      }

      private void buildPartial0(xla.XlaData.OpSharding result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tileShape_ = tileShapeBuilder_ == null
              ? tileShape_
              : tileShapeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.replicateOnLastTileDim_ = replicateOnLastTileDim_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.OpSharding) {
          return mergeFrom((xla.XlaData.OpSharding)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.OpSharding other) {
        if (other == xla.XlaData.OpSharding.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.hasTileShape()) {
          mergeTileShape(other.getTileShape());
        }
        if (!other.tileAssignmentDimensions_.isEmpty()) {
          if (tileAssignmentDimensions_.isEmpty()) {
            tileAssignmentDimensions_ = other.tileAssignmentDimensions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTileAssignmentDimensionsIsMutable();
            tileAssignmentDimensions_.addAll(other.tileAssignmentDimensions_);
          }
          onChanged();
        }
        if (!other.tileAssignmentDevices_.isEmpty()) {
          if (tileAssignmentDevices_.isEmpty()) {
            tileAssignmentDevices_ = other.tileAssignmentDevices_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTileAssignmentDevicesIsMutable();
            tileAssignmentDevices_.addAll(other.tileAssignmentDevices_);
          }
          onChanged();
        }
        if (tupleShardingsBuilder_ == null) {
          if (!other.tupleShardings_.isEmpty()) {
            if (tupleShardings_.isEmpty()) {
              tupleShardings_ = other.tupleShardings_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTupleShardingsIsMutable();
              tupleShardings_.addAll(other.tupleShardings_);
            }
            onChanged();
          }
        } else {
          if (!other.tupleShardings_.isEmpty()) {
            if (tupleShardingsBuilder_.isEmpty()) {
              tupleShardingsBuilder_.dispose();
              tupleShardingsBuilder_ = null;
              tupleShardings_ = other.tupleShardings_;
              bitField0_ = (bitField0_ & ~0x00000010);
              tupleShardingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTupleShardingsFieldBuilder() : null;
            } else {
              tupleShardingsBuilder_.addAllMessages(other.tupleShardings_);
            }
          }
        }
        if (other.getReplicateOnLastTileDim() != false) {
          setReplicateOnLastTileDim(other.getReplicateOnLastTileDim());
        }
        if (metadataBuilder_ == null) {
          if (!other.metadata_.isEmpty()) {
            if (metadata_.isEmpty()) {
              metadata_ = other.metadata_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureMetadataIsMutable();
              metadata_.addAll(other.metadata_);
            }
            onChanged();
          }
        } else {
          if (!other.metadata_.isEmpty()) {
            if (metadataBuilder_.isEmpty()) {
              metadataBuilder_.dispose();
              metadataBuilder_ = null;
              metadata_ = other.metadata_;
              bitField0_ = (bitField0_ & ~0x00000040);
              metadataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMetadataFieldBuilder() : null;
            } else {
              metadataBuilder_.addAllMessages(other.metadata_);
            }
          }
        }
        if (!other.lastTileDims_.isEmpty()) {
          if (lastTileDims_.isEmpty()) {
            lastTileDims_ = other.lastTileDims_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureLastTileDimsIsMutable();
            lastTileDims_.addAll(other.lastTileDims_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getTileShapeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                long v = input.readInt64();
                ensureTileAssignmentDimensionsIsMutable();
                tileAssignmentDimensions_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTileAssignmentDimensionsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  tileAssignmentDimensions_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                long v = input.readInt64();
                ensureTileAssignmentDevicesIsMutable();
                tileAssignmentDevices_.addLong(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTileAssignmentDevicesIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  tileAssignmentDevices_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 42: {
                xla.XlaData.OpSharding m =
                    input.readMessage(
                        xla.XlaData.OpSharding.parser(),
                        extensionRegistry);
                if (tupleShardingsBuilder_ == null) {
                  ensureTupleShardingsIsMutable();
                  tupleShardings_.add(m);
                } else {
                  tupleShardingsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 48: {
                replicateOnLastTileDim_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 58: {
                xla.XlaData.OpMetadata m =
                    input.readMessage(
                        xla.XlaData.OpMetadata.parser(),
                        extensionRegistry);
                if (metadataBuilder_ == null) {
                  ensureMetadataIsMutable();
                  metadata_.add(m);
                } else {
                  metadataBuilder_.addMessage(m);
                }
                break;
              } // case 58
              case 64: {
                int tmpRaw = input.readEnum();
                ensureLastTileDimsIsMutable();
                lastTileDims_.add(tmpRaw);
                break;
              } // case 64
              case 66: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureLastTileDimsIsMutable();
                  lastTileDims_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <code>.xla.OpSharding.Type type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.xla.OpSharding.Type type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.xla.OpSharding.Type type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public xla.XlaData.OpSharding.Type getType() {
        xla.XlaData.OpSharding.Type result = xla.XlaData.OpSharding.Type.forNumber(type_);
        return result == null ? xla.XlaData.OpSharding.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.xla.OpSharding.Type type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(xla.XlaData.OpSharding.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.xla.OpSharding.Type type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private xla.XlaData.ShapeProto tileShape_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> tileShapeBuilder_;
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       * @return Whether the tileShape field is set.
       */
      public boolean hasTileShape() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       * @return The tileShape.
       */
      public xla.XlaData.ShapeProto getTileShape() {
        if (tileShapeBuilder_ == null) {
          return tileShape_ == null ? xla.XlaData.ShapeProto.getDefaultInstance() : tileShape_;
        } else {
          return tileShapeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      public Builder setTileShape(xla.XlaData.ShapeProto value) {
        if (tileShapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tileShape_ = value;
        } else {
          tileShapeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      public Builder setTileShape(
          xla.XlaData.ShapeProto.Builder builderForValue) {
        if (tileShapeBuilder_ == null) {
          tileShape_ = builderForValue.build();
        } else {
          tileShapeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      public Builder mergeTileShape(xla.XlaData.ShapeProto value) {
        if (tileShapeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            tileShape_ != null &&
            tileShape_ != xla.XlaData.ShapeProto.getDefaultInstance()) {
            getTileShapeBuilder().mergeFrom(value);
          } else {
            tileShape_ = value;
          }
        } else {
          tileShapeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      public Builder clearTileShape() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tileShape_ = null;
        if (tileShapeBuilder_ != null) {
          tileShapeBuilder_.dispose();
          tileShapeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      public xla.XlaData.ShapeProto.Builder getTileShapeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTileShapeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      public xla.XlaData.ShapeProtoOrBuilder getTileShapeOrBuilder() {
        if (tileShapeBuilder_ != null) {
          return tileShapeBuilder_.getMessageOrBuilder();
        } else {
          return tileShape_ == null ?
              xla.XlaData.ShapeProto.getDefaultInstance() : tileShape_;
        }
      }
      /**
       * <pre>
       * The shape of the sharded tile.
       * </pre>
       *
       * <code>.xla.ShapeProto tile_shape = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder> 
          getTileShapeFieldBuilder() {
        if (tileShapeBuilder_ == null) {
          tileShapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.ShapeProto, xla.XlaData.ShapeProto.Builder, xla.XlaData.ShapeProtoOrBuilder>(
                  getTileShape(),
                  getParentForChildren(),
                  isClean());
          tileShape_ = null;
        }
        return tileShapeBuilder_;
      }

      private com.google.protobuf.Internal.LongList tileAssignmentDimensions_ = emptyLongList();
      private void ensureTileAssignmentDimensionsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tileAssignmentDimensions_ = mutableCopy(tileAssignmentDimensions_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @return A list containing the tileAssignmentDimensions.
       */
      public java.util.List<java.lang.Long>
          getTileAssignmentDimensionsList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(tileAssignmentDimensions_) : tileAssignmentDimensions_;
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @return The count of tileAssignmentDimensions.
       */
      public int getTileAssignmentDimensionsCount() {
        return tileAssignmentDimensions_.size();
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @param index The index of the element to return.
       * @return The tileAssignmentDimensions at the given index.
       */
      public long getTileAssignmentDimensions(int index) {
        return tileAssignmentDimensions_.getLong(index);
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @param index The index to set the value at.
       * @param value The tileAssignmentDimensions to set.
       * @return This builder for chaining.
       */
      public Builder setTileAssignmentDimensions(
          int index, long value) {
        
        ensureTileAssignmentDimensionsIsMutable();
        tileAssignmentDimensions_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @param value The tileAssignmentDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addTileAssignmentDimensions(long value) {
        
        ensureTileAssignmentDimensionsIsMutable();
        tileAssignmentDimensions_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @param values The tileAssignmentDimensions to add.
       * @return This builder for chaining.
       */
      public Builder addAllTileAssignmentDimensions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTileAssignmentDimensionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tileAssignmentDimensions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The shape of the tile assignment tensor - this must be the same rank as
       * tile_shape and the product of its dimensions must equal
       * tile_assignment_devices.size().
       * </pre>
       *
       * <code>repeated int64 tile_assignment_dimensions = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTileAssignmentDimensions() {
        tileAssignmentDimensions_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList tileAssignmentDevices_ = emptyLongList();
      private void ensureTileAssignmentDevicesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          tileAssignmentDevices_ = mutableCopy(tileAssignmentDevices_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @return A list containing the tileAssignmentDevices.
       */
      public java.util.List<java.lang.Long>
          getTileAssignmentDevicesList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(tileAssignmentDevices_) : tileAssignmentDevices_;
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @return The count of tileAssignmentDevices.
       */
      public int getTileAssignmentDevicesCount() {
        return tileAssignmentDevices_.size();
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @param index The index of the element to return.
       * @return The tileAssignmentDevices at the given index.
       */
      public long getTileAssignmentDevices(int index) {
        return tileAssignmentDevices_.getLong(index);
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @param index The index to set the value at.
       * @param value The tileAssignmentDevices to set.
       * @return This builder for chaining.
       */
      public Builder setTileAssignmentDevices(
          int index, long value) {
        
        ensureTileAssignmentDevicesIsMutable();
        tileAssignmentDevices_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @param value The tileAssignmentDevices to add.
       * @return This builder for chaining.
       */
      public Builder addTileAssignmentDevices(long value) {
        
        ensureTileAssignmentDevicesIsMutable();
        tileAssignmentDevices_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @param values The tileAssignmentDevices to add.
       * @return This builder for chaining.
       */
      public Builder addAllTileAssignmentDevices(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTileAssignmentDevicesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tileAssignmentDevices_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Flattened list of device IDs. The order of flattening is the same as used
       * by IndexUtil::MultiToLinearIndex(tile_assignment_shape).
       * </pre>
       *
       * <code>repeated int64 tile_assignment_devices = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTileAssignmentDevices() {
        tileAssignmentDevices_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<xla.XlaData.OpSharding> tupleShardings_ =
        java.util.Collections.emptyList();
      private void ensureTupleShardingsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          tupleShardings_ = new java.util.ArrayList<xla.XlaData.OpSharding>(tupleShardings_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder> tupleShardingsBuilder_;

      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public java.util.List<xla.XlaData.OpSharding> getTupleShardingsList() {
        if (tupleShardingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tupleShardings_);
        } else {
          return tupleShardingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public int getTupleShardingsCount() {
        if (tupleShardingsBuilder_ == null) {
          return tupleShardings_.size();
        } else {
          return tupleShardingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public xla.XlaData.OpSharding getTupleShardings(int index) {
        if (tupleShardingsBuilder_ == null) {
          return tupleShardings_.get(index);
        } else {
          return tupleShardingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder setTupleShardings(
          int index, xla.XlaData.OpSharding value) {
        if (tupleShardingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleShardingsIsMutable();
          tupleShardings_.set(index, value);
          onChanged();
        } else {
          tupleShardingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder setTupleShardings(
          int index, xla.XlaData.OpSharding.Builder builderForValue) {
        if (tupleShardingsBuilder_ == null) {
          ensureTupleShardingsIsMutable();
          tupleShardings_.set(index, builderForValue.build());
          onChanged();
        } else {
          tupleShardingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder addTupleShardings(xla.XlaData.OpSharding value) {
        if (tupleShardingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleShardingsIsMutable();
          tupleShardings_.add(value);
          onChanged();
        } else {
          tupleShardingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder addTupleShardings(
          int index, xla.XlaData.OpSharding value) {
        if (tupleShardingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTupleShardingsIsMutable();
          tupleShardings_.add(index, value);
          onChanged();
        } else {
          tupleShardingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder addTupleShardings(
          xla.XlaData.OpSharding.Builder builderForValue) {
        if (tupleShardingsBuilder_ == null) {
          ensureTupleShardingsIsMutable();
          tupleShardings_.add(builderForValue.build());
          onChanged();
        } else {
          tupleShardingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder addTupleShardings(
          int index, xla.XlaData.OpSharding.Builder builderForValue) {
        if (tupleShardingsBuilder_ == null) {
          ensureTupleShardingsIsMutable();
          tupleShardings_.add(index, builderForValue.build());
          onChanged();
        } else {
          tupleShardingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder addAllTupleShardings(
          java.lang.Iterable<? extends xla.XlaData.OpSharding> values) {
        if (tupleShardingsBuilder_ == null) {
          ensureTupleShardingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tupleShardings_);
          onChanged();
        } else {
          tupleShardingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder clearTupleShardings() {
        if (tupleShardingsBuilder_ == null) {
          tupleShardings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          tupleShardingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public Builder removeTupleShardings(int index) {
        if (tupleShardingsBuilder_ == null) {
          ensureTupleShardingsIsMutable();
          tupleShardings_.remove(index);
          onChanged();
        } else {
          tupleShardingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public xla.XlaData.OpSharding.Builder getTupleShardingsBuilder(
          int index) {
        return getTupleShardingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public xla.XlaData.OpShardingOrBuilder getTupleShardingsOrBuilder(
          int index) {
        if (tupleShardingsBuilder_ == null) {
          return tupleShardings_.get(index);  } else {
          return tupleShardingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public java.util.List<? extends xla.XlaData.OpShardingOrBuilder> 
           getTupleShardingsOrBuilderList() {
        if (tupleShardingsBuilder_ != null) {
          return tupleShardingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tupleShardings_);
        }
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public xla.XlaData.OpSharding.Builder addTupleShardingsBuilder() {
        return getTupleShardingsFieldBuilder().addBuilder(
            xla.XlaData.OpSharding.getDefaultInstance());
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public xla.XlaData.OpSharding.Builder addTupleShardingsBuilder(
          int index) {
        return getTupleShardingsFieldBuilder().addBuilder(
            index, xla.XlaData.OpSharding.getDefaultInstance());
      }
      /**
       * <pre>
       * If type == TUPLE, the sub-shardings, one per leaf node in the tuple shape,
       * in pre-order. The tuple shape could be nested; here we store just a
       * flattened list of all leaves in the tuple shape. Note that the tuple shape
       * is not stored here; shardings do not store the shapes to which they are
       * applied, this is inferred from the instruction this sharding gets attached
       * to.
       * </pre>
       *
       * <code>repeated .xla.OpSharding tuple_shardings = 5;</code>
       */
      public java.util.List<xla.XlaData.OpSharding.Builder> 
           getTupleShardingsBuilderList() {
        return getTupleShardingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder> 
          getTupleShardingsFieldBuilder() {
        if (tupleShardingsBuilder_ == null) {
          tupleShardingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.OpSharding, xla.XlaData.OpSharding.Builder, xla.XlaData.OpShardingOrBuilder>(
                  tupleShardings_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          tupleShardings_ = null;
        }
        return tupleShardingsBuilder_;
      }

      private boolean replicateOnLastTileDim_ ;
      /**
       * <pre>
       * Only used for OTHER type. If true, data is sharded according to other
       * dimensions of tile_assignment(), but replicated across devices along the
       * last dimension. (Experimental)
       * </pre>
       *
       * <code>bool replicate_on_last_tile_dim = 6;</code>
       * @return The replicateOnLastTileDim.
       */
      @java.lang.Override
      public boolean getReplicateOnLastTileDim() {
        return replicateOnLastTileDim_;
      }
      /**
       * <pre>
       * Only used for OTHER type. If true, data is sharded according to other
       * dimensions of tile_assignment(), but replicated across devices along the
       * last dimension. (Experimental)
       * </pre>
       *
       * <code>bool replicate_on_last_tile_dim = 6;</code>
       * @param value The replicateOnLastTileDim to set.
       * @return This builder for chaining.
       */
      public Builder setReplicateOnLastTileDim(boolean value) {
        
        replicateOnLastTileDim_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Only used for OTHER type. If true, data is sharded according to other
       * dimensions of tile_assignment(), but replicated across devices along the
       * last dimension. (Experimental)
       * </pre>
       *
       * <code>bool replicate_on_last_tile_dim = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplicateOnLastTileDim() {
        bitField0_ = (bitField0_ & ~0x00000020);
        replicateOnLastTileDim_ = false;
        onChanged();
        return this;
      }

      private java.util.List<xla.XlaData.OpMetadata> metadata_ =
        java.util.Collections.emptyList();
      private void ensureMetadataIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          metadata_ = new java.util.ArrayList<xla.XlaData.OpMetadata>(metadata_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.OpMetadata, xla.XlaData.OpMetadata.Builder, xla.XlaData.OpMetadataOrBuilder> metadataBuilder_;

      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public java.util.List<xla.XlaData.OpMetadata> getMetadataList() {
        if (metadataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metadata_);
        } else {
          return metadataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public int getMetadataCount() {
        if (metadataBuilder_ == null) {
          return metadata_.size();
        } else {
          return metadataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public xla.XlaData.OpMetadata getMetadata(int index) {
        if (metadataBuilder_ == null) {
          return metadata_.get(index);
        } else {
          return metadataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder setMetadata(
          int index, xla.XlaData.OpMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.set(index, value);
          onChanged();
        } else {
          metadataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder setMetadata(
          int index, xla.XlaData.OpMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.set(index, builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder addMetadata(xla.XlaData.OpMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.add(value);
          onChanged();
        } else {
          metadataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder addMetadata(
          int index, xla.XlaData.OpMetadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetadataIsMutable();
          metadata_.add(index, value);
          onChanged();
        } else {
          metadataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder addMetadata(
          xla.XlaData.OpMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.add(builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder addMetadata(
          int index, xla.XlaData.OpMetadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.add(index, builderForValue.build());
          onChanged();
        } else {
          metadataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder addAllMetadata(
          java.lang.Iterable<? extends xla.XlaData.OpMetadata> values) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, metadata_);
          onChanged();
        } else {
          metadataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          metadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public Builder removeMetadata(int index) {
        if (metadataBuilder_ == null) {
          ensureMetadataIsMutable();
          metadata_.remove(index);
          onChanged();
        } else {
          metadataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public xla.XlaData.OpMetadata.Builder getMetadataBuilder(
          int index) {
        return getMetadataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public xla.XlaData.OpMetadataOrBuilder getMetadataOrBuilder(
          int index) {
        if (metadataBuilder_ == null) {
          return metadata_.get(index);  } else {
          return metadataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public java.util.List<? extends xla.XlaData.OpMetadataOrBuilder> 
           getMetadataOrBuilderList() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metadata_);
        }
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public xla.XlaData.OpMetadata.Builder addMetadataBuilder() {
        return getMetadataFieldBuilder().addBuilder(
            xla.XlaData.OpMetadata.getDefaultInstance());
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public xla.XlaData.OpMetadata.Builder addMetadataBuilder(
          int index) {
        return getMetadataFieldBuilder().addBuilder(
            index, xla.XlaData.OpMetadata.getDefaultInstance());
      }
      /**
       * <pre>
       * This field is used to track the source of this sharding, usually derived
       * from instructions. Multple metadata may be populated if sharding is
       * combined with other shardings.  Metadata are to not be populated when
       * type == TUPLE and instead metadata should be set on individual tuple
       * elements.
       * </pre>
       *
       * <code>repeated .xla.OpMetadata metadata = 7;</code>
       */
      public java.util.List<xla.XlaData.OpMetadata.Builder> 
           getMetadataBuilderList() {
        return getMetadataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.OpMetadata, xla.XlaData.OpMetadata.Builder, xla.XlaData.OpMetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.OpMetadata, xla.XlaData.OpMetadata.Builder, xla.XlaData.OpMetadataOrBuilder>(
                  metadata_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<java.lang.Integer> lastTileDims_ =
        java.util.Collections.emptyList();
      private void ensureLastTileDimsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          lastTileDims_ = new java.util.ArrayList<java.lang.Integer>(lastTileDims_);
          bitField0_ |= 0x00000080;
        }
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @return A list containing the lastTileDims.
       */
      public java.util.List<xla.XlaData.OpSharding.Type> getLastTileDimsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, xla.XlaData.OpSharding.Type>(lastTileDims_, lastTileDims_converter_);
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @return The count of lastTileDims.
       */
      public int getLastTileDimsCount() {
        return lastTileDims_.size();
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param index The index of the element to return.
       * @return The lastTileDims at the given index.
       */
      public xla.XlaData.OpSharding.Type getLastTileDims(int index) {
        return lastTileDims_converter_.convert(lastTileDims_.get(index));
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param index The index to set the value at.
       * @param value The lastTileDims to set.
       * @return This builder for chaining.
       */
      public Builder setLastTileDims(
          int index, xla.XlaData.OpSharding.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLastTileDimsIsMutable();
        lastTileDims_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param value The lastTileDims to add.
       * @return This builder for chaining.
       */
      public Builder addLastTileDims(xla.XlaData.OpSharding.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLastTileDimsIsMutable();
        lastTileDims_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param values The lastTileDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllLastTileDims(
          java.lang.Iterable<? extends xla.XlaData.OpSharding.Type> values) {
        ensureLastTileDimsIsMutable();
        for (xla.XlaData.OpSharding.Type value : values) {
          lastTileDims_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastTileDims() {
        lastTileDims_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @return A list containing the enum numeric values on the wire for lastTileDims.
       */
      public java.util.List<java.lang.Integer>
      getLastTileDimsValueList() {
        return java.util.Collections.unmodifiableList(lastTileDims_);
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of lastTileDims at the given index.
       */
      public int getLastTileDimsValue(int index) {
        return lastTileDims_.get(index);
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for lastTileDims to set.
       * @return This builder for chaining.
       */
      public Builder setLastTileDimsValue(
          int index, int value) {
        ensureLastTileDimsIsMutable();
        lastTileDims_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param value The enum numeric value on the wire for lastTileDims to add.
       * @return This builder for chaining.
       */
      public Builder addLastTileDimsValue(int value) {
        ensureLastTileDimsIsMutable();
        lastTileDims_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This field is used to represented the sharding type of each subgroup.
       * For example, sharding={devices=[2,2,2,2]0,1,2,...,15 last_tile_dims={
       * replicate, manual, unreduced}} means that each of the last 3 dimensions
       * in [2,2,2,2] represents a subgrouping in replicate, manual,
       * unreduced sharding type respectively.
       * </pre>
       *
       * <code>repeated .xla.OpSharding.Type last_tile_dims = 8;</code>
       * @param values The enum numeric values on the wire for lastTileDims to add.
       * @return This builder for chaining.
       */
      public Builder addAllLastTileDimsValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureLastTileDimsIsMutable();
        for (int value : values) {
          lastTileDims_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.OpSharding)
    }

    // @@protoc_insertion_point(class_scope:xla.OpSharding)
    private static final xla.XlaData.OpSharding DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.OpSharding();
    }

    public static xla.XlaData.OpSharding getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OpSharding>
        PARSER = new com.google.protobuf.AbstractParser<OpSharding>() {
      @java.lang.Override
      public OpSharding parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<OpSharding> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OpSharding> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.OpSharding getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReplicaGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ReplicaGroup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ids of the replicas that belongs to the same group. The ordering of the
     * ids matters in some ops (e.g., all-to-all).
     * </pre>
     *
     * <code>repeated int64 replica_ids = 1;</code>
     * @return A list containing the replicaIds.
     */
    java.util.List<java.lang.Long> getReplicaIdsList();
    /**
     * <pre>
     * The ids of the replicas that belongs to the same group. The ordering of the
     * ids matters in some ops (e.g., all-to-all).
     * </pre>
     *
     * <code>repeated int64 replica_ids = 1;</code>
     * @return The count of replicaIds.
     */
    int getReplicaIdsCount();
    /**
     * <pre>
     * The ids of the replicas that belongs to the same group. The ordering of the
     * ids matters in some ops (e.g., all-to-all).
     * </pre>
     *
     * <code>repeated int64 replica_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The replicaIds at the given index.
     */
    long getReplicaIds(int index);
  }
  /**
   * <pre>
   * Describes the replica groups in a cross replica op (e.g., all-reduce and
   * all-to-all).
   * </pre>
   *
   * Protobuf type {@code xla.ReplicaGroup}
   */
  public static final class ReplicaGroup extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ReplicaGroup)
      ReplicaGroupOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReplicaGroup.newBuilder() to construct.
    private ReplicaGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReplicaGroup() {
      replicaIds_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReplicaGroup();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ReplicaGroup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ReplicaGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ReplicaGroup.class, xla.XlaData.ReplicaGroup.Builder.class);
    }

    public static final int REPLICA_IDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList replicaIds_;
    /**
     * <pre>
     * The ids of the replicas that belongs to the same group. The ordering of the
     * ids matters in some ops (e.g., all-to-all).
     * </pre>
     *
     * <code>repeated int64 replica_ids = 1;</code>
     * @return A list containing the replicaIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getReplicaIdsList() {
      return replicaIds_;
    }
    /**
     * <pre>
     * The ids of the replicas that belongs to the same group. The ordering of the
     * ids matters in some ops (e.g., all-to-all).
     * </pre>
     *
     * <code>repeated int64 replica_ids = 1;</code>
     * @return The count of replicaIds.
     */
    public int getReplicaIdsCount() {
      return replicaIds_.size();
    }
    /**
     * <pre>
     * The ids of the replicas that belongs to the same group. The ordering of the
     * ids matters in some ops (e.g., all-to-all).
     * </pre>
     *
     * <code>repeated int64 replica_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The replicaIds at the given index.
     */
    public long getReplicaIds(int index) {
      return replicaIds_.getLong(index);
    }
    private int replicaIdsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getReplicaIdsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(replicaIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < replicaIds_.size(); i++) {
        output.writeInt64NoTag(replicaIds_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < replicaIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(replicaIds_.getLong(i));
        }
        size += dataSize;
        if (!getReplicaIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        replicaIdsMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ReplicaGroup)) {
        return super.equals(obj);
      }
      xla.XlaData.ReplicaGroup other = (xla.XlaData.ReplicaGroup) obj;

      if (!getReplicaIdsList()
          .equals(other.getReplicaIdsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getReplicaIdsCount() > 0) {
        hash = (37 * hash) + REPLICA_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getReplicaIdsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ReplicaGroup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ReplicaGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ReplicaGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ReplicaGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ReplicaGroup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the replica groups in a cross replica op (e.g., all-reduce and
     * all-to-all).
     * </pre>
     *
     * Protobuf type {@code xla.ReplicaGroup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ReplicaGroup)
        xla.XlaData.ReplicaGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ReplicaGroup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ReplicaGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ReplicaGroup.class, xla.XlaData.ReplicaGroup.Builder.class);
      }

      // Construct using xla.XlaData.ReplicaGroup.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        replicaIds_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ReplicaGroup_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ReplicaGroup getDefaultInstanceForType() {
        return xla.XlaData.ReplicaGroup.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ReplicaGroup build() {
        xla.XlaData.ReplicaGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ReplicaGroup buildPartial() {
        xla.XlaData.ReplicaGroup result = new xla.XlaData.ReplicaGroup(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.ReplicaGroup result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          replicaIds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.replicaIds_ = replicaIds_;
      }

      private void buildPartial0(xla.XlaData.ReplicaGroup result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ReplicaGroup) {
          return mergeFrom((xla.XlaData.ReplicaGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ReplicaGroup other) {
        if (other == xla.XlaData.ReplicaGroup.getDefaultInstance()) return this;
        if (!other.replicaIds_.isEmpty()) {
          if (replicaIds_.isEmpty()) {
            replicaIds_ = other.replicaIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReplicaIdsIsMutable();
            replicaIds_.addAll(other.replicaIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureReplicaIdsIsMutable();
                replicaIds_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureReplicaIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  replicaIds_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList replicaIds_ = emptyLongList();
      private void ensureReplicaIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          replicaIds_ = mutableCopy(replicaIds_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @return A list containing the replicaIds.
       */
      public java.util.List<java.lang.Long>
          getReplicaIdsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(replicaIds_) : replicaIds_;
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @return The count of replicaIds.
       */
      public int getReplicaIdsCount() {
        return replicaIds_.size();
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The replicaIds at the given index.
       */
      public long getReplicaIds(int index) {
        return replicaIds_.getLong(index);
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @param index The index to set the value at.
       * @param value The replicaIds to set.
       * @return This builder for chaining.
       */
      public Builder setReplicaIds(
          int index, long value) {
        
        ensureReplicaIdsIsMutable();
        replicaIds_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @param value The replicaIds to add.
       * @return This builder for chaining.
       */
      public Builder addReplicaIds(long value) {
        
        ensureReplicaIdsIsMutable();
        replicaIds_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @param values The replicaIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllReplicaIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReplicaIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, replicaIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ids of the replicas that belongs to the same group. The ordering of the
       * ids matters in some ops (e.g., all-to-all).
       * </pre>
       *
       * <code>repeated int64 replica_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplicaIds() {
        replicaIds_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ReplicaGroup)
    }

    // @@protoc_insertion_point(class_scope:xla.ReplicaGroup)
    private static final xla.XlaData.ReplicaGroup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ReplicaGroup();
    }

    public static xla.XlaData.ReplicaGroup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReplicaGroup>
        PARSER = new com.google.protobuf.AbstractParser<ReplicaGroup>() {
      @java.lang.Override
      public ReplicaGroup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReplicaGroup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReplicaGroup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ReplicaGroup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SourceTargetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.SourceTarget)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 source = 1;</code>
     * @return The source.
     */
    long getSource();

    /**
     * <code>int64 target = 2;</code>
     * @return The target.
     */
    long getTarget();
  }
  /**
   * <pre>
   * Describes the source target pair in the collective permute op.
   * </pre>
   *
   * Protobuf type {@code xla.SourceTarget}
   */
  public static final class SourceTarget extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.SourceTarget)
      SourceTargetOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SourceTarget.newBuilder() to construct.
    private SourceTarget(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SourceTarget() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SourceTarget();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_SourceTarget_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_SourceTarget_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.SourceTarget.class, xla.XlaData.SourceTarget.Builder.class);
    }

    public static final int SOURCE_FIELD_NUMBER = 1;
    private long source_ = 0L;
    /**
     * <code>int64 source = 1;</code>
     * @return The source.
     */
    @java.lang.Override
    public long getSource() {
      return source_;
    }

    public static final int TARGET_FIELD_NUMBER = 2;
    private long target_ = 0L;
    /**
     * <code>int64 target = 2;</code>
     * @return The target.
     */
    @java.lang.Override
    public long getTarget() {
      return target_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (source_ != 0L) {
        output.writeInt64(1, source_);
      }
      if (target_ != 0L) {
        output.writeInt64(2, target_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (source_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, source_);
      }
      if (target_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, target_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.SourceTarget)) {
        return super.equals(obj);
      }
      xla.XlaData.SourceTarget other = (xla.XlaData.SourceTarget) obj;

      if (getSource()
          != other.getSource()) return false;
      if (getTarget()
          != other.getTarget()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSource());
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTarget());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.SourceTarget parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.SourceTarget parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.SourceTarget parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.SourceTarget parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.SourceTarget parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.SourceTarget parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.SourceTarget prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes the source target pair in the collective permute op.
     * </pre>
     *
     * Protobuf type {@code xla.SourceTarget}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.SourceTarget)
        xla.XlaData.SourceTargetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_SourceTarget_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_SourceTarget_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.SourceTarget.class, xla.XlaData.SourceTarget.Builder.class);
      }

      // Construct using xla.XlaData.SourceTarget.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        source_ = 0L;
        target_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_SourceTarget_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.SourceTarget getDefaultInstanceForType() {
        return xla.XlaData.SourceTarget.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.SourceTarget build() {
        xla.XlaData.SourceTarget result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.SourceTarget buildPartial() {
        xla.XlaData.SourceTarget result = new xla.XlaData.SourceTarget(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.SourceTarget result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.source_ = source_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.target_ = target_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.SourceTarget) {
          return mergeFrom((xla.XlaData.SourceTarget)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.SourceTarget other) {
        if (other == xla.XlaData.SourceTarget.getDefaultInstance()) return this;
        if (other.getSource() != 0L) {
          setSource(other.getSource());
        }
        if (other.getTarget() != 0L) {
          setTarget(other.getTarget());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                source_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                target_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long source_ ;
      /**
       * <code>int64 source = 1;</code>
       * @return The source.
       */
      @java.lang.Override
      public long getSource() {
        return source_;
      }
      /**
       * <code>int64 source = 1;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(long value) {
        
        source_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 source = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000001);
        source_ = 0L;
        onChanged();
        return this;
      }

      private long target_ ;
      /**
       * <code>int64 target = 2;</code>
       * @return The target.
       */
      @java.lang.Override
      public long getTarget() {
        return target_;
      }
      /**
       * <code>int64 target = 2;</code>
       * @param value The target to set.
       * @return This builder for chaining.
       */
      public Builder setTarget(long value) {
        
        target_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int64 target = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTarget() {
        bitField0_ = (bitField0_ & ~0x00000002);
        target_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.SourceTarget)
    }

    // @@protoc_insertion_point(class_scope:xla.SourceTarget)
    private static final xla.XlaData.SourceTarget DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.SourceTarget();
    }

    public static xla.XlaData.SourceTarget getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SourceTarget>
        PARSER = new com.google.protobuf.AbstractParser<SourceTarget>() {
      @java.lang.Override
      public SourceTarget parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SourceTarget> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SourceTarget> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.SourceTarget getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PrecisionConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.PrecisionConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @return A list containing the operandPrecision.
     */
    java.util.List<xla.XlaData.PrecisionConfig.Precision> getOperandPrecisionList();
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @return The count of operandPrecision.
     */
    int getOperandPrecisionCount();
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @param index The index of the element to return.
     * @return The operandPrecision at the given index.
     */
    xla.XlaData.PrecisionConfig.Precision getOperandPrecision(int index);
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @return A list containing the enum numeric values on the wire for operandPrecision.
     */
    java.util.List<java.lang.Integer>
    getOperandPrecisionValueList();
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of operandPrecision at the given index.
     */
    int getOperandPrecisionValue(int index);
  }
  /**
   * <pre>
   * Used to indicate the precision configuration. It has backend specific
   * meaning.
   * </pre>
   *
   * Protobuf type {@code xla.PrecisionConfig}
   */
  public static final class PrecisionConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.PrecisionConfig)
      PrecisionConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PrecisionConfig.newBuilder() to construct.
    private PrecisionConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PrecisionConfig() {
      operandPrecision_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PrecisionConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_PrecisionConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_PrecisionConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.PrecisionConfig.class, xla.XlaData.PrecisionConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code xla.PrecisionConfig.Precision}
     */
    public enum Precision
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>DEFAULT = 0;</code>
       */
      DEFAULT(0),
      /**
       * <code>HIGH = 1;</code>
       */
      HIGH(1),
      /**
       * <code>HIGHEST = 2;</code>
       */
      HIGHEST(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>DEFAULT = 0;</code>
       */
      public static final int DEFAULT_VALUE = 0;
      /**
       * <code>HIGH = 1;</code>
       */
      public static final int HIGH_VALUE = 1;
      /**
       * <code>HIGHEST = 2;</code>
       */
      public static final int HIGHEST_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Precision valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Precision forNumber(int value) {
        switch (value) {
          case 0: return DEFAULT;
          case 1: return HIGH;
          case 2: return HIGHEST;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Precision>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Precision> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Precision>() {
              public Precision findValueByNumber(int number) {
                return Precision.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return xla.XlaData.PrecisionConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final Precision[] VALUES = values();

      public static Precision valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Precision(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:xla.PrecisionConfig.Precision)
    }

    public static final int OPERAND_PRECISION_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> operandPrecision_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, xla.XlaData.PrecisionConfig.Precision> operandPrecision_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, xla.XlaData.PrecisionConfig.Precision>() {
              public xla.XlaData.PrecisionConfig.Precision convert(java.lang.Integer from) {
                xla.XlaData.PrecisionConfig.Precision result = xla.XlaData.PrecisionConfig.Precision.forNumber(from);
                return result == null ? xla.XlaData.PrecisionConfig.Precision.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @return A list containing the operandPrecision.
     */
    @java.lang.Override
    public java.util.List<xla.XlaData.PrecisionConfig.Precision> getOperandPrecisionList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, xla.XlaData.PrecisionConfig.Precision>(operandPrecision_, operandPrecision_converter_);
    }
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @return The count of operandPrecision.
     */
    @java.lang.Override
    public int getOperandPrecisionCount() {
      return operandPrecision_.size();
    }
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @param index The index of the element to return.
     * @return The operandPrecision at the given index.
     */
    @java.lang.Override
    public xla.XlaData.PrecisionConfig.Precision getOperandPrecision(int index) {
      return operandPrecision_converter_.convert(operandPrecision_.get(index));
    }
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @return A list containing the enum numeric values on the wire for operandPrecision.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getOperandPrecisionValueList() {
      return operandPrecision_;
    }
    /**
     * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of operandPrecision at the given index.
     */
    @java.lang.Override
    public int getOperandPrecisionValue(int index) {
      return operandPrecision_.get(index);
    }
    private int operandPrecisionMemoizedSerializedSize;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getOperandPrecisionList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(operandPrecisionMemoizedSerializedSize);
      }
      for (int i = 0; i < operandPrecision_.size(); i++) {
        output.writeEnumNoTag(operandPrecision_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < operandPrecision_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(operandPrecision_.get(i));
        }
        size += dataSize;
        if (!getOperandPrecisionList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }operandPrecisionMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.PrecisionConfig)) {
        return super.equals(obj);
      }
      xla.XlaData.PrecisionConfig other = (xla.XlaData.PrecisionConfig) obj;

      if (!operandPrecision_.equals(other.operandPrecision_)) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOperandPrecisionCount() > 0) {
        hash = (37 * hash) + OPERAND_PRECISION_FIELD_NUMBER;
        hash = (53 * hash) + operandPrecision_.hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.PrecisionConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.PrecisionConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.PrecisionConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.PrecisionConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.PrecisionConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used to indicate the precision configuration. It has backend specific
     * meaning.
     * </pre>
     *
     * Protobuf type {@code xla.PrecisionConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.PrecisionConfig)
        xla.XlaData.PrecisionConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_PrecisionConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_PrecisionConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.PrecisionConfig.class, xla.XlaData.PrecisionConfig.Builder.class);
      }

      // Construct using xla.XlaData.PrecisionConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        operandPrecision_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_PrecisionConfig_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.PrecisionConfig getDefaultInstanceForType() {
        return xla.XlaData.PrecisionConfig.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.PrecisionConfig build() {
        xla.XlaData.PrecisionConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.PrecisionConfig buildPartial() {
        xla.XlaData.PrecisionConfig result = new xla.XlaData.PrecisionConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.PrecisionConfig result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          operandPrecision_ = java.util.Collections.unmodifiableList(operandPrecision_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.operandPrecision_ = operandPrecision_;
      }

      private void buildPartial0(xla.XlaData.PrecisionConfig result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.PrecisionConfig) {
          return mergeFrom((xla.XlaData.PrecisionConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.PrecisionConfig other) {
        if (other == xla.XlaData.PrecisionConfig.getDefaultInstance()) return this;
        if (!other.operandPrecision_.isEmpty()) {
          if (operandPrecision_.isEmpty()) {
            operandPrecision_ = other.operandPrecision_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOperandPrecisionIsMutable();
            operandPrecision_.addAll(other.operandPrecision_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                ensureOperandPrecisionIsMutable();
                operandPrecision_.add(tmpRaw);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureOperandPrecisionIsMutable();
                  operandPrecision_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> operandPrecision_ =
        java.util.Collections.emptyList();
      private void ensureOperandPrecisionIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          operandPrecision_ = new java.util.ArrayList<java.lang.Integer>(operandPrecision_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @return A list containing the operandPrecision.
       */
      public java.util.List<xla.XlaData.PrecisionConfig.Precision> getOperandPrecisionList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, xla.XlaData.PrecisionConfig.Precision>(operandPrecision_, operandPrecision_converter_);
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @return The count of operandPrecision.
       */
      public int getOperandPrecisionCount() {
        return operandPrecision_.size();
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param index The index of the element to return.
       * @return The operandPrecision at the given index.
       */
      public xla.XlaData.PrecisionConfig.Precision getOperandPrecision(int index) {
        return operandPrecision_converter_.convert(operandPrecision_.get(index));
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param index The index to set the value at.
       * @param value The operandPrecision to set.
       * @return This builder for chaining.
       */
      public Builder setOperandPrecision(
          int index, xla.XlaData.PrecisionConfig.Precision value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperandPrecisionIsMutable();
        operandPrecision_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param value The operandPrecision to add.
       * @return This builder for chaining.
       */
      public Builder addOperandPrecision(xla.XlaData.PrecisionConfig.Precision value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOperandPrecisionIsMutable();
        operandPrecision_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param values The operandPrecision to add.
       * @return This builder for chaining.
       */
      public Builder addAllOperandPrecision(
          java.lang.Iterable<? extends xla.XlaData.PrecisionConfig.Precision> values) {
        ensureOperandPrecisionIsMutable();
        for (xla.XlaData.PrecisionConfig.Precision value : values) {
          operandPrecision_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperandPrecision() {
        operandPrecision_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @return A list containing the enum numeric values on the wire for operandPrecision.
       */
      public java.util.List<java.lang.Integer>
      getOperandPrecisionValueList() {
        return java.util.Collections.unmodifiableList(operandPrecision_);
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of operandPrecision at the given index.
       */
      public int getOperandPrecisionValue(int index) {
        return operandPrecision_.get(index);
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for operandPrecision to set.
       * @return This builder for chaining.
       */
      public Builder setOperandPrecisionValue(
          int index, int value) {
        ensureOperandPrecisionIsMutable();
        operandPrecision_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param value The enum numeric value on the wire for operandPrecision to add.
       * @return This builder for chaining.
       */
      public Builder addOperandPrecisionValue(int value) {
        ensureOperandPrecisionIsMutable();
        operandPrecision_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .xla.PrecisionConfig.Precision operand_precision = 1;</code>
       * @param values The enum numeric values on the wire for operandPrecision to add.
       * @return This builder for chaining.
       */
      public Builder addAllOperandPrecisionValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureOperandPrecisionIsMutable();
        for (int value : values) {
          operandPrecision_.add(value);
        }
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.PrecisionConfig)
    }

    // @@protoc_insertion_point(class_scope:xla.PrecisionConfig)
    private static final xla.XlaData.PrecisionConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.PrecisionConfig();
    }

    public static xla.XlaData.PrecisionConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PrecisionConfig>
        PARSER = new com.google.protobuf.AbstractParser<PrecisionConfig>() {
      @java.lang.Override
      public PrecisionConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PrecisionConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PrecisionConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.PrecisionConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParameterReplicationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.ParameterReplication)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A list of boolean values for the flattened leaf buffers. Each value
     * indicates whether the corresponding leaf buffer is replicated.
     * If this field is empty, it means no buffer is replicated. Otherwise, the
     * number of elements in this field must match the number of leaf buffers in
     * the HLO instruction's shape.
     * </pre>
     *
     * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
     * @return A list containing the replicatedAtLeafBuffers.
     */
    java.util.List<java.lang.Boolean> getReplicatedAtLeafBuffersList();
    /**
     * <pre>
     * A list of boolean values for the flattened leaf buffers. Each value
     * indicates whether the corresponding leaf buffer is replicated.
     * If this field is empty, it means no buffer is replicated. Otherwise, the
     * number of elements in this field must match the number of leaf buffers in
     * the HLO instruction's shape.
     * </pre>
     *
     * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
     * @return The count of replicatedAtLeafBuffers.
     */
    int getReplicatedAtLeafBuffersCount();
    /**
     * <pre>
     * A list of boolean values for the flattened leaf buffers. Each value
     * indicates whether the corresponding leaf buffer is replicated.
     * If this field is empty, it means no buffer is replicated. Otherwise, the
     * number of elements in this field must match the number of leaf buffers in
     * the HLO instruction's shape.
     * </pre>
     *
     * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
     * @param index The index of the element to return.
     * @return The replicatedAtLeafBuffers at the given index.
     */
    boolean getReplicatedAtLeafBuffers(int index);
  }
  /**
   * <pre>
   * Describes whether all data-parallelism replicas will receive the same
   * parameter data at each buffer.
   * </pre>
   *
   * Protobuf type {@code xla.ParameterReplication}
   */
  public static final class ParameterReplication extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.ParameterReplication)
      ParameterReplicationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParameterReplication.newBuilder() to construct.
    private ParameterReplication(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParameterReplication() {
      replicatedAtLeafBuffers_ = emptyBooleanList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParameterReplication();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_ParameterReplication_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_ParameterReplication_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.ParameterReplication.class, xla.XlaData.ParameterReplication.Builder.class);
    }

    public static final int REPLICATED_AT_LEAF_BUFFERS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.BooleanList replicatedAtLeafBuffers_;
    /**
     * <pre>
     * A list of boolean values for the flattened leaf buffers. Each value
     * indicates whether the corresponding leaf buffer is replicated.
     * If this field is empty, it means no buffer is replicated. Otherwise, the
     * number of elements in this field must match the number of leaf buffers in
     * the HLO instruction's shape.
     * </pre>
     *
     * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
     * @return A list containing the replicatedAtLeafBuffers.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getReplicatedAtLeafBuffersList() {
      return replicatedAtLeafBuffers_;
    }
    /**
     * <pre>
     * A list of boolean values for the flattened leaf buffers. Each value
     * indicates whether the corresponding leaf buffer is replicated.
     * If this field is empty, it means no buffer is replicated. Otherwise, the
     * number of elements in this field must match the number of leaf buffers in
     * the HLO instruction's shape.
     * </pre>
     *
     * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
     * @return The count of replicatedAtLeafBuffers.
     */
    public int getReplicatedAtLeafBuffersCount() {
      return replicatedAtLeafBuffers_.size();
    }
    /**
     * <pre>
     * A list of boolean values for the flattened leaf buffers. Each value
     * indicates whether the corresponding leaf buffer is replicated.
     * If this field is empty, it means no buffer is replicated. Otherwise, the
     * number of elements in this field must match the number of leaf buffers in
     * the HLO instruction's shape.
     * </pre>
     *
     * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
     * @param index The index of the element to return.
     * @return The replicatedAtLeafBuffers at the given index.
     */
    public boolean getReplicatedAtLeafBuffers(int index) {
      return replicatedAtLeafBuffers_.getBoolean(index);
    }
    private int replicatedAtLeafBuffersMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getReplicatedAtLeafBuffersList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(replicatedAtLeafBuffersMemoizedSerializedSize);
      }
      for (int i = 0; i < replicatedAtLeafBuffers_.size(); i++) {
        output.writeBoolNoTag(replicatedAtLeafBuffers_.getBoolean(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 1 * getReplicatedAtLeafBuffersList().size();
        size += dataSize;
        if (!getReplicatedAtLeafBuffersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        replicatedAtLeafBuffersMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.ParameterReplication)) {
        return super.equals(obj);
      }
      xla.XlaData.ParameterReplication other = (xla.XlaData.ParameterReplication) obj;

      if (!getReplicatedAtLeafBuffersList()
          .equals(other.getReplicatedAtLeafBuffersList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getReplicatedAtLeafBuffersCount() > 0) {
        hash = (37 * hash) + REPLICATED_AT_LEAF_BUFFERS_FIELD_NUMBER;
        hash = (53 * hash) + getReplicatedAtLeafBuffersList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.ParameterReplication parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ParameterReplication parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.ParameterReplication parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ParameterReplication parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.ParameterReplication parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.ParameterReplication parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.ParameterReplication prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes whether all data-parallelism replicas will receive the same
     * parameter data at each buffer.
     * </pre>
     *
     * Protobuf type {@code xla.ParameterReplication}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.ParameterReplication)
        xla.XlaData.ParameterReplicationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_ParameterReplication_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_ParameterReplication_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.ParameterReplication.class, xla.XlaData.ParameterReplication.Builder.class);
      }

      // Construct using xla.XlaData.ParameterReplication.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        replicatedAtLeafBuffers_ = emptyBooleanList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_ParameterReplication_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.ParameterReplication getDefaultInstanceForType() {
        return xla.XlaData.ParameterReplication.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.ParameterReplication build() {
        xla.XlaData.ParameterReplication result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.ParameterReplication buildPartial() {
        xla.XlaData.ParameterReplication result = new xla.XlaData.ParameterReplication(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.ParameterReplication result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          replicatedAtLeafBuffers_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.replicatedAtLeafBuffers_ = replicatedAtLeafBuffers_;
      }

      private void buildPartial0(xla.XlaData.ParameterReplication result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.ParameterReplication) {
          return mergeFrom((xla.XlaData.ParameterReplication)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.ParameterReplication other) {
        if (other == xla.XlaData.ParameterReplication.getDefaultInstance()) return this;
        if (!other.replicatedAtLeafBuffers_.isEmpty()) {
          if (replicatedAtLeafBuffers_.isEmpty()) {
            replicatedAtLeafBuffers_ = other.replicatedAtLeafBuffers_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReplicatedAtLeafBuffersIsMutable();
            replicatedAtLeafBuffers_.addAll(other.replicatedAtLeafBuffers_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                boolean v = input.readBool();
                ensureReplicatedAtLeafBuffersIsMutable();
                replicatedAtLeafBuffers_.addBoolean(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureReplicatedAtLeafBuffersIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  replicatedAtLeafBuffers_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.BooleanList replicatedAtLeafBuffers_ = emptyBooleanList();
      private void ensureReplicatedAtLeafBuffersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          replicatedAtLeafBuffers_ = mutableCopy(replicatedAtLeafBuffers_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @return A list containing the replicatedAtLeafBuffers.
       */
      public java.util.List<java.lang.Boolean>
          getReplicatedAtLeafBuffersList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(replicatedAtLeafBuffers_) : replicatedAtLeafBuffers_;
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @return The count of replicatedAtLeafBuffers.
       */
      public int getReplicatedAtLeafBuffersCount() {
        return replicatedAtLeafBuffers_.size();
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @param index The index of the element to return.
       * @return The replicatedAtLeafBuffers at the given index.
       */
      public boolean getReplicatedAtLeafBuffers(int index) {
        return replicatedAtLeafBuffers_.getBoolean(index);
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @param index The index to set the value at.
       * @param value The replicatedAtLeafBuffers to set.
       * @return This builder for chaining.
       */
      public Builder setReplicatedAtLeafBuffers(
          int index, boolean value) {
        
        ensureReplicatedAtLeafBuffersIsMutable();
        replicatedAtLeafBuffers_.setBoolean(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @param value The replicatedAtLeafBuffers to add.
       * @return This builder for chaining.
       */
      public Builder addReplicatedAtLeafBuffers(boolean value) {
        
        ensureReplicatedAtLeafBuffersIsMutable();
        replicatedAtLeafBuffers_.addBoolean(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @param values The replicatedAtLeafBuffers to add.
       * @return This builder for chaining.
       */
      public Builder addAllReplicatedAtLeafBuffers(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        ensureReplicatedAtLeafBuffersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, replicatedAtLeafBuffers_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A list of boolean values for the flattened leaf buffers. Each value
       * indicates whether the corresponding leaf buffer is replicated.
       * If this field is empty, it means no buffer is replicated. Otherwise, the
       * number of elements in this field must match the number of leaf buffers in
       * the HLO instruction's shape.
       * </pre>
       *
       * <code>repeated bool replicated_at_leaf_buffers = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearReplicatedAtLeafBuffers() {
        replicatedAtLeafBuffers_ = emptyBooleanList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.ParameterReplication)
    }

    // @@protoc_insertion_point(class_scope:xla.ParameterReplication)
    private static final xla.XlaData.ParameterReplication DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.ParameterReplication();
    }

    public static xla.XlaData.ParameterReplication getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ParameterReplication>
        PARSER = new com.google.protobuf.AbstractParser<ParameterReplication>() {
      @java.lang.Override
      public ParameterReplication parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ParameterReplication> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParameterReplication> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.ParameterReplication getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WhileLoopBackendConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.WhileLoopBackendConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This indirection lets us distinguish between known-trip-count == 0 and
     * unknown-trip-count.
     * </pre>
     *
     * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
     * @return Whether the knownTripCount field is set.
     */
    boolean hasKnownTripCount();
    /**
     * <pre>
     * This indirection lets us distinguish between known-trip-count == 0 and
     * unknown-trip-count.
     * </pre>
     *
     * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
     * @return The knownTripCount.
     */
    xla.XlaData.WhileLoopBackendConfig.KnownTripCount getKnownTripCount();
    /**
     * <pre>
     * This indirection lets us distinguish between known-trip-count == 0 and
     * unknown-trip-count.
     * </pre>
     *
     * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
     */
    xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder getKnownTripCountOrBuilder();
  }
  /**
   * <pre>
   * A backend-config for kWhile loops that stores the loop's trip count, if it is
   * known.
   * This is useful for backends that can implement a `for i in 0..N` loop more
   * efficiently than a `while` loop.  For example, on GPUs, we can implement a
   * `for i in 0..N` loop by enqueueing the kernels for the loop body N times,
   * whereas implementing a `while` loop requires a host-device sync on each
   * iteration.
   * </pre>
   *
   * Protobuf type {@code xla.WhileLoopBackendConfig}
   */
  public static final class WhileLoopBackendConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.WhileLoopBackendConfig)
      WhileLoopBackendConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WhileLoopBackendConfig.newBuilder() to construct.
    private WhileLoopBackendConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WhileLoopBackendConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WhileLoopBackendConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.WhileLoopBackendConfig.class, xla.XlaData.WhileLoopBackendConfig.Builder.class);
    }

    public interface KnownTripCountOrBuilder extends
        // @@protoc_insertion_point(interface_extends:xla.WhileLoopBackendConfig.KnownTripCount)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int64 n = 1;</code>
       * @return The n.
       */
      long getN();
    }
    /**
     * Protobuf type {@code xla.WhileLoopBackendConfig.KnownTripCount}
     */
    public static final class KnownTripCount extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:xla.WhileLoopBackendConfig.KnownTripCount)
        KnownTripCountOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use KnownTripCount.newBuilder() to construct.
      private KnownTripCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private KnownTripCount() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new KnownTripCount();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_KnownTripCount_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_KnownTripCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.WhileLoopBackendConfig.KnownTripCount.class, xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder.class);
      }

      public static final int N_FIELD_NUMBER = 1;
      private long n_ = 0L;
      /**
       * <code>int64 n = 1;</code>
       * @return The n.
       */
      @java.lang.Override
      public long getN() {
        return n_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (n_ != 0L) {
          output.writeInt64(1, n_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (n_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, n_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof xla.XlaData.WhileLoopBackendConfig.KnownTripCount)) {
          return super.equals(obj);
        }
        xla.XlaData.WhileLoopBackendConfig.KnownTripCount other = (xla.XlaData.WhileLoopBackendConfig.KnownTripCount) obj;

        if (getN()
            != other.getN()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + N_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getN());
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(xla.XlaData.WhileLoopBackendConfig.KnownTripCount prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code xla.WhileLoopBackendConfig.KnownTripCount}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:xla.WhileLoopBackendConfig.KnownTripCount)
          xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_KnownTripCount_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_KnownTripCount_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  xla.XlaData.WhileLoopBackendConfig.KnownTripCount.class, xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder.class);
        }

        // Construct using xla.XlaData.WhileLoopBackendConfig.KnownTripCount.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          n_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_KnownTripCount_descriptor;
        }

        @java.lang.Override
        public xla.XlaData.WhileLoopBackendConfig.KnownTripCount getDefaultInstanceForType() {
          return xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance();
        }

        @java.lang.Override
        public xla.XlaData.WhileLoopBackendConfig.KnownTripCount build() {
          xla.XlaData.WhileLoopBackendConfig.KnownTripCount result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public xla.XlaData.WhileLoopBackendConfig.KnownTripCount buildPartial() {
          xla.XlaData.WhileLoopBackendConfig.KnownTripCount result = new xla.XlaData.WhileLoopBackendConfig.KnownTripCount(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(xla.XlaData.WhileLoopBackendConfig.KnownTripCount result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.n_ = n_;
          }
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof xla.XlaData.WhileLoopBackendConfig.KnownTripCount) {
            return mergeFrom((xla.XlaData.WhileLoopBackendConfig.KnownTripCount)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(xla.XlaData.WhileLoopBackendConfig.KnownTripCount other) {
          if (other == xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance()) return this;
          if (other.getN() != 0L) {
            setN(other.getN());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  n_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long n_ ;
        /**
         * <code>int64 n = 1;</code>
         * @return The n.
         */
        @java.lang.Override
        public long getN() {
          return n_;
        }
        /**
         * <code>int64 n = 1;</code>
         * @param value The n to set.
         * @return This builder for chaining.
         */
        public Builder setN(long value) {
          
          n_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>int64 n = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearN() {
          bitField0_ = (bitField0_ & ~0x00000001);
          n_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:xla.WhileLoopBackendConfig.KnownTripCount)
      }

      // @@protoc_insertion_point(class_scope:xla.WhileLoopBackendConfig.KnownTripCount)
      private static final xla.XlaData.WhileLoopBackendConfig.KnownTripCount DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new xla.XlaData.WhileLoopBackendConfig.KnownTripCount();
      }

      public static xla.XlaData.WhileLoopBackendConfig.KnownTripCount getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<KnownTripCount>
          PARSER = new com.google.protobuf.AbstractParser<KnownTripCount>() {
        @java.lang.Override
        public KnownTripCount parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<KnownTripCount> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<KnownTripCount> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public xla.XlaData.WhileLoopBackendConfig.KnownTripCount getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int KNOWN_TRIP_COUNT_FIELD_NUMBER = 1;
    private xla.XlaData.WhileLoopBackendConfig.KnownTripCount knownTripCount_;
    /**
     * <pre>
     * This indirection lets us distinguish between known-trip-count == 0 and
     * unknown-trip-count.
     * </pre>
     *
     * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
     * @return Whether the knownTripCount field is set.
     */
    @java.lang.Override
    public boolean hasKnownTripCount() {
      return knownTripCount_ != null;
    }
    /**
     * <pre>
     * This indirection lets us distinguish between known-trip-count == 0 and
     * unknown-trip-count.
     * </pre>
     *
     * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
     * @return The knownTripCount.
     */
    @java.lang.Override
    public xla.XlaData.WhileLoopBackendConfig.KnownTripCount getKnownTripCount() {
      return knownTripCount_ == null ? xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance() : knownTripCount_;
    }
    /**
     * <pre>
     * This indirection lets us distinguish between known-trip-count == 0 and
     * unknown-trip-count.
     * </pre>
     *
     * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
     */
    @java.lang.Override
    public xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder getKnownTripCountOrBuilder() {
      return knownTripCount_ == null ? xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance() : knownTripCount_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (knownTripCount_ != null) {
        output.writeMessage(1, getKnownTripCount());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (knownTripCount_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKnownTripCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.WhileLoopBackendConfig)) {
        return super.equals(obj);
      }
      xla.XlaData.WhileLoopBackendConfig other = (xla.XlaData.WhileLoopBackendConfig) obj;

      if (hasKnownTripCount() != other.hasKnownTripCount()) return false;
      if (hasKnownTripCount()) {
        if (!getKnownTripCount()
            .equals(other.getKnownTripCount())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKnownTripCount()) {
        hash = (37 * hash) + KNOWN_TRIP_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getKnownTripCount().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.WhileLoopBackendConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.WhileLoopBackendConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A backend-config for kWhile loops that stores the loop's trip count, if it is
     * known.
     * This is useful for backends that can implement a `for i in 0..N` loop more
     * efficiently than a `while` loop.  For example, on GPUs, we can implement a
     * `for i in 0..N` loop by enqueueing the kernels for the loop body N times,
     * whereas implementing a `while` loop requires a host-device sync on each
     * iteration.
     * </pre>
     *
     * Protobuf type {@code xla.WhileLoopBackendConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.WhileLoopBackendConfig)
        xla.XlaData.WhileLoopBackendConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.WhileLoopBackendConfig.class, xla.XlaData.WhileLoopBackendConfig.Builder.class);
      }

      // Construct using xla.XlaData.WhileLoopBackendConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        knownTripCount_ = null;
        if (knownTripCountBuilder_ != null) {
          knownTripCountBuilder_.dispose();
          knownTripCountBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_WhileLoopBackendConfig_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.WhileLoopBackendConfig getDefaultInstanceForType() {
        return xla.XlaData.WhileLoopBackendConfig.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.WhileLoopBackendConfig build() {
        xla.XlaData.WhileLoopBackendConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.WhileLoopBackendConfig buildPartial() {
        xla.XlaData.WhileLoopBackendConfig result = new xla.XlaData.WhileLoopBackendConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(xla.XlaData.WhileLoopBackendConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.knownTripCount_ = knownTripCountBuilder_ == null
              ? knownTripCount_
              : knownTripCountBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.WhileLoopBackendConfig) {
          return mergeFrom((xla.XlaData.WhileLoopBackendConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.WhileLoopBackendConfig other) {
        if (other == xla.XlaData.WhileLoopBackendConfig.getDefaultInstance()) return this;
        if (other.hasKnownTripCount()) {
          mergeKnownTripCount(other.getKnownTripCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getKnownTripCountFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private xla.XlaData.WhileLoopBackendConfig.KnownTripCount knownTripCount_;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.WhileLoopBackendConfig.KnownTripCount, xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder, xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder> knownTripCountBuilder_;
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       * @return Whether the knownTripCount field is set.
       */
      public boolean hasKnownTripCount() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       * @return The knownTripCount.
       */
      public xla.XlaData.WhileLoopBackendConfig.KnownTripCount getKnownTripCount() {
        if (knownTripCountBuilder_ == null) {
          return knownTripCount_ == null ? xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance() : knownTripCount_;
        } else {
          return knownTripCountBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      public Builder setKnownTripCount(xla.XlaData.WhileLoopBackendConfig.KnownTripCount value) {
        if (knownTripCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          knownTripCount_ = value;
        } else {
          knownTripCountBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      public Builder setKnownTripCount(
          xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder builderForValue) {
        if (knownTripCountBuilder_ == null) {
          knownTripCount_ = builderForValue.build();
        } else {
          knownTripCountBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      public Builder mergeKnownTripCount(xla.XlaData.WhileLoopBackendConfig.KnownTripCount value) {
        if (knownTripCountBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            knownTripCount_ != null &&
            knownTripCount_ != xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance()) {
            getKnownTripCountBuilder().mergeFrom(value);
          } else {
            knownTripCount_ = value;
          }
        } else {
          knownTripCountBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      public Builder clearKnownTripCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        knownTripCount_ = null;
        if (knownTripCountBuilder_ != null) {
          knownTripCountBuilder_.dispose();
          knownTripCountBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      public xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder getKnownTripCountBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getKnownTripCountFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      public xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder getKnownTripCountOrBuilder() {
        if (knownTripCountBuilder_ != null) {
          return knownTripCountBuilder_.getMessageOrBuilder();
        } else {
          return knownTripCount_ == null ?
              xla.XlaData.WhileLoopBackendConfig.KnownTripCount.getDefaultInstance() : knownTripCount_;
        }
      }
      /**
       * <pre>
       * This indirection lets us distinguish between known-trip-count == 0 and
       * unknown-trip-count.
       * </pre>
       *
       * <code>.xla.WhileLoopBackendConfig.KnownTripCount known_trip_count = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.WhileLoopBackendConfig.KnownTripCount, xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder, xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder> 
          getKnownTripCountFieldBuilder() {
        if (knownTripCountBuilder_ == null) {
          knownTripCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.WhileLoopBackendConfig.KnownTripCount, xla.XlaData.WhileLoopBackendConfig.KnownTripCount.Builder, xla.XlaData.WhileLoopBackendConfig.KnownTripCountOrBuilder>(
                  getKnownTripCount(),
                  getParentForChildren(),
                  isClean());
          knownTripCount_ = null;
        }
        return knownTripCountBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.WhileLoopBackendConfig)
    }

    // @@protoc_insertion_point(class_scope:xla.WhileLoopBackendConfig)
    private static final xla.XlaData.WhileLoopBackendConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.WhileLoopBackendConfig();
    }

    public static xla.XlaData.WhileLoopBackendConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WhileLoopBackendConfig>
        PARSER = new com.google.protobuf.AbstractParser<WhileLoopBackendConfig>() {
      @java.lang.Override
      public WhileLoopBackendConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WhileLoopBackendConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WhileLoopBackendConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.WhileLoopBackendConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CustomCallOutputOperandAliasingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.CustomCallOutputOperandAliasing)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 output_shape_index = 1;</code>
     * @return A list containing the outputShapeIndex.
     */
    java.util.List<java.lang.Long> getOutputShapeIndexList();
    /**
     * <code>repeated int64 output_shape_index = 1;</code>
     * @return The count of outputShapeIndex.
     */
    int getOutputShapeIndexCount();
    /**
     * <code>repeated int64 output_shape_index = 1;</code>
     * @param index The index of the element to return.
     * @return The outputShapeIndex at the given index.
     */
    long getOutputShapeIndex(int index);

    /**
     * <code>int64 operand_index = 2;</code>
     * @return The operandIndex.
     */
    long getOperandIndex();

    /**
     * <code>repeated int64 operand_shape_index = 3;</code>
     * @return A list containing the operandShapeIndex.
     */
    java.util.List<java.lang.Long> getOperandShapeIndexList();
    /**
     * <code>repeated int64 operand_shape_index = 3;</code>
     * @return The count of operandShapeIndex.
     */
    int getOperandShapeIndexCount();
    /**
     * <code>repeated int64 operand_shape_index = 3;</code>
     * @param index The index of the element to return.
     * @return The operandShapeIndex at the given index.
     */
    long getOperandShapeIndex(int index);
  }
  /**
   * <pre>
   * Specifies a pair of output/operand buffers for kCustomCall that alias each
   * other.
   * </pre>
   *
   * Protobuf type {@code xla.CustomCallOutputOperandAliasing}
   */
  public static final class CustomCallOutputOperandAliasing extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.CustomCallOutputOperandAliasing)
      CustomCallOutputOperandAliasingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CustomCallOutputOperandAliasing.newBuilder() to construct.
    private CustomCallOutputOperandAliasing(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CustomCallOutputOperandAliasing() {
      outputShapeIndex_ = emptyLongList();
      operandShapeIndex_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CustomCallOutputOperandAliasing();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.XlaData.internal_static_xla_CustomCallOutputOperandAliasing_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.XlaData.internal_static_xla_CustomCallOutputOperandAliasing_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.XlaData.CustomCallOutputOperandAliasing.class, xla.XlaData.CustomCallOutputOperandAliasing.Builder.class);
    }

    public static final int OUTPUT_SHAPE_INDEX_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList outputShapeIndex_;
    /**
     * <code>repeated int64 output_shape_index = 1;</code>
     * @return A list containing the outputShapeIndex.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getOutputShapeIndexList() {
      return outputShapeIndex_;
    }
    /**
     * <code>repeated int64 output_shape_index = 1;</code>
     * @return The count of outputShapeIndex.
     */
    public int getOutputShapeIndexCount() {
      return outputShapeIndex_.size();
    }
    /**
     * <code>repeated int64 output_shape_index = 1;</code>
     * @param index The index of the element to return.
     * @return The outputShapeIndex at the given index.
     */
    public long getOutputShapeIndex(int index) {
      return outputShapeIndex_.getLong(index);
    }
    private int outputShapeIndexMemoizedSerializedSize = -1;

    public static final int OPERAND_INDEX_FIELD_NUMBER = 2;
    private long operandIndex_ = 0L;
    /**
     * <code>int64 operand_index = 2;</code>
     * @return The operandIndex.
     */
    @java.lang.Override
    public long getOperandIndex() {
      return operandIndex_;
    }

    public static final int OPERAND_SHAPE_INDEX_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList operandShapeIndex_;
    /**
     * <code>repeated int64 operand_shape_index = 3;</code>
     * @return A list containing the operandShapeIndex.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getOperandShapeIndexList() {
      return operandShapeIndex_;
    }
    /**
     * <code>repeated int64 operand_shape_index = 3;</code>
     * @return The count of operandShapeIndex.
     */
    public int getOperandShapeIndexCount() {
      return operandShapeIndex_.size();
    }
    /**
     * <code>repeated int64 operand_shape_index = 3;</code>
     * @param index The index of the element to return.
     * @return The operandShapeIndex at the given index.
     */
    public long getOperandShapeIndex(int index) {
      return operandShapeIndex_.getLong(index);
    }
    private int operandShapeIndexMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getOutputShapeIndexList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(outputShapeIndexMemoizedSerializedSize);
      }
      for (int i = 0; i < outputShapeIndex_.size(); i++) {
        output.writeInt64NoTag(outputShapeIndex_.getLong(i));
      }
      if (operandIndex_ != 0L) {
        output.writeInt64(2, operandIndex_);
      }
      if (getOperandShapeIndexList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(operandShapeIndexMemoizedSerializedSize);
      }
      for (int i = 0; i < operandShapeIndex_.size(); i++) {
        output.writeInt64NoTag(operandShapeIndex_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < outputShapeIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(outputShapeIndex_.getLong(i));
        }
        size += dataSize;
        if (!getOutputShapeIndexList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        outputShapeIndexMemoizedSerializedSize = dataSize;
      }
      if (operandIndex_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, operandIndex_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < operandShapeIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(operandShapeIndex_.getLong(i));
        }
        size += dataSize;
        if (!getOperandShapeIndexList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        operandShapeIndexMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.XlaData.CustomCallOutputOperandAliasing)) {
        return super.equals(obj);
      }
      xla.XlaData.CustomCallOutputOperandAliasing other = (xla.XlaData.CustomCallOutputOperandAliasing) obj;

      if (!getOutputShapeIndexList()
          .equals(other.getOutputShapeIndexList())) return false;
      if (getOperandIndex()
          != other.getOperandIndex()) return false;
      if (!getOperandShapeIndexList()
          .equals(other.getOperandShapeIndexList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOutputShapeIndexCount() > 0) {
        hash = (37 * hash) + OUTPUT_SHAPE_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getOutputShapeIndexList().hashCode();
      }
      hash = (37 * hash) + OPERAND_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOperandIndex());
      if (getOperandShapeIndexCount() > 0) {
        hash = (37 * hash) + OPERAND_SHAPE_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getOperandShapeIndexList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.XlaData.CustomCallOutputOperandAliasing parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.XlaData.CustomCallOutputOperandAliasing prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Specifies a pair of output/operand buffers for kCustomCall that alias each
     * other.
     * </pre>
     *
     * Protobuf type {@code xla.CustomCallOutputOperandAliasing}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.CustomCallOutputOperandAliasing)
        xla.XlaData.CustomCallOutputOperandAliasingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.XlaData.internal_static_xla_CustomCallOutputOperandAliasing_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.XlaData.internal_static_xla_CustomCallOutputOperandAliasing_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.XlaData.CustomCallOutputOperandAliasing.class, xla.XlaData.CustomCallOutputOperandAliasing.Builder.class);
      }

      // Construct using xla.XlaData.CustomCallOutputOperandAliasing.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        outputShapeIndex_ = emptyLongList();
        operandIndex_ = 0L;
        operandShapeIndex_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.XlaData.internal_static_xla_CustomCallOutputOperandAliasing_descriptor;
      }

      @java.lang.Override
      public xla.XlaData.CustomCallOutputOperandAliasing getDefaultInstanceForType() {
        return xla.XlaData.CustomCallOutputOperandAliasing.getDefaultInstance();
      }

      @java.lang.Override
      public xla.XlaData.CustomCallOutputOperandAliasing build() {
        xla.XlaData.CustomCallOutputOperandAliasing result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public xla.XlaData.CustomCallOutputOperandAliasing buildPartial() {
        xla.XlaData.CustomCallOutputOperandAliasing result = new xla.XlaData.CustomCallOutputOperandAliasing(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(xla.XlaData.CustomCallOutputOperandAliasing result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          outputShapeIndex_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.outputShapeIndex_ = outputShapeIndex_;
        if (((bitField0_ & 0x00000004) != 0)) {
          operandShapeIndex_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.operandShapeIndex_ = operandShapeIndex_;
      }

      private void buildPartial0(xla.XlaData.CustomCallOutputOperandAliasing result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.operandIndex_ = operandIndex_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.XlaData.CustomCallOutputOperandAliasing) {
          return mergeFrom((xla.XlaData.CustomCallOutputOperandAliasing)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.XlaData.CustomCallOutputOperandAliasing other) {
        if (other == xla.XlaData.CustomCallOutputOperandAliasing.getDefaultInstance()) return this;
        if (!other.outputShapeIndex_.isEmpty()) {
          if (outputShapeIndex_.isEmpty()) {
            outputShapeIndex_ = other.outputShapeIndex_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOutputShapeIndexIsMutable();
            outputShapeIndex_.addAll(other.outputShapeIndex_);
          }
          onChanged();
        }
        if (other.getOperandIndex() != 0L) {
          setOperandIndex(other.getOperandIndex());
        }
        if (!other.operandShapeIndex_.isEmpty()) {
          if (operandShapeIndex_.isEmpty()) {
            operandShapeIndex_ = other.operandShapeIndex_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOperandShapeIndexIsMutable();
            operandShapeIndex_.addAll(other.operandShapeIndex_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readInt64();
                ensureOutputShapeIndexIsMutable();
                outputShapeIndex_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureOutputShapeIndexIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  outputShapeIndex_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                operandIndex_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                long v = input.readInt64();
                ensureOperandShapeIndexIsMutable();
                operandShapeIndex_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureOperandShapeIndexIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  operandShapeIndex_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList outputShapeIndex_ = emptyLongList();
      private void ensureOutputShapeIndexIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          outputShapeIndex_ = mutableCopy(outputShapeIndex_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @return A list containing the outputShapeIndex.
       */
      public java.util.List<java.lang.Long>
          getOutputShapeIndexList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(outputShapeIndex_) : outputShapeIndex_;
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @return The count of outputShapeIndex.
       */
      public int getOutputShapeIndexCount() {
        return outputShapeIndex_.size();
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @param index The index of the element to return.
       * @return The outputShapeIndex at the given index.
       */
      public long getOutputShapeIndex(int index) {
        return outputShapeIndex_.getLong(index);
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @param index The index to set the value at.
       * @param value The outputShapeIndex to set.
       * @return This builder for chaining.
       */
      public Builder setOutputShapeIndex(
          int index, long value) {
        
        ensureOutputShapeIndexIsMutable();
        outputShapeIndex_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @param value The outputShapeIndex to add.
       * @return This builder for chaining.
       */
      public Builder addOutputShapeIndex(long value) {
        
        ensureOutputShapeIndexIsMutable();
        outputShapeIndex_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @param values The outputShapeIndex to add.
       * @return This builder for chaining.
       */
      public Builder addAllOutputShapeIndex(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureOutputShapeIndexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputShapeIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 output_shape_index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputShapeIndex() {
        outputShapeIndex_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private long operandIndex_ ;
      /**
       * <code>int64 operand_index = 2;</code>
       * @return The operandIndex.
       */
      @java.lang.Override
      public long getOperandIndex() {
        return operandIndex_;
      }
      /**
       * <code>int64 operand_index = 2;</code>
       * @param value The operandIndex to set.
       * @return This builder for chaining.
       */
      public Builder setOperandIndex(long value) {
        
        operandIndex_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>int64 operand_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperandIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operandIndex_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList operandShapeIndex_ = emptyLongList();
      private void ensureOperandShapeIndexIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          operandShapeIndex_ = mutableCopy(operandShapeIndex_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @return A list containing the operandShapeIndex.
       */
      public java.util.List<java.lang.Long>
          getOperandShapeIndexList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(operandShapeIndex_) : operandShapeIndex_;
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @return The count of operandShapeIndex.
       */
      public int getOperandShapeIndexCount() {
        return operandShapeIndex_.size();
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @param index The index of the element to return.
       * @return The operandShapeIndex at the given index.
       */
      public long getOperandShapeIndex(int index) {
        return operandShapeIndex_.getLong(index);
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @param index The index to set the value at.
       * @param value The operandShapeIndex to set.
       * @return This builder for chaining.
       */
      public Builder setOperandShapeIndex(
          int index, long value) {
        
        ensureOperandShapeIndexIsMutable();
        operandShapeIndex_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @param value The operandShapeIndex to add.
       * @return This builder for chaining.
       */
      public Builder addOperandShapeIndex(long value) {
        
        ensureOperandShapeIndexIsMutable();
        operandShapeIndex_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @param values The operandShapeIndex to add.
       * @return This builder for chaining.
       */
      public Builder addAllOperandShapeIndex(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureOperandShapeIndexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, operandShapeIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 operand_shape_index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperandShapeIndex() {
        operandShapeIndex_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:xla.CustomCallOutputOperandAliasing)
    }

    // @@protoc_insertion_point(class_scope:xla.CustomCallOutputOperandAliasing)
    private static final xla.XlaData.CustomCallOutputOperandAliasing DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.XlaData.CustomCallOutputOperandAliasing();
    }

    public static xla.XlaData.CustomCallOutputOperandAliasing getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CustomCallOutputOperandAliasing>
        PARSER = new com.google.protobuf.AbstractParser<CustomCallOutputOperandAliasing>() {
      @java.lang.Override
      public CustomCallOutputOperandAliasing parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CustomCallOutputOperandAliasing> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CustomCallOutputOperandAliasing> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public xla.XlaData.CustomCallOutputOperandAliasing getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_PaddingConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_PaddingConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_PaddingConfig_PaddingConfigDimension_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_PaddingConfig_PaddingConfigDimension_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_TileProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_TileProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_LayoutProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_LayoutProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ShapeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ShapeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ProgramShapeProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ProgramShapeProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ComputationStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ComputationStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_OpMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_OpMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ExecutionProfile_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ExecutionProfile_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ExecutionHandle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ExecutionHandle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_GlobalDataHandle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_GlobalDataHandle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_DeviceHandle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_DeviceHandle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ChannelHandle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ChannelHandle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_DeviceAssignmentProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_DeviceAssignmentProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_DeviceAssignmentProto_ComputationDevice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_DeviceAssignmentProto_ComputationDevice_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_LiteralProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_LiteralProto_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_WindowDimension_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_WindowDimension_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_Window_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_Window_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_GatherDimensionNumbers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_GatherDimensionNumbers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ScatterDimensionNumbers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ScatterDimensionNumbers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ConvolutionDimensionNumbers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ConvolutionDimensionNumbers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_DotDimensionNumbers_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_DotDimensionNumbers_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_TriangularSolveOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_TriangularSolveOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_CholeskyOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_CholeskyOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_FrontendAttributes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_FrontendAttributes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_FrontendAttributes_MapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_FrontendAttributes_MapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_OpSharding_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_OpSharding_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ReplicaGroup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ReplicaGroup_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_SourceTarget_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_SourceTarget_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_PrecisionConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_PrecisionConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_ParameterReplication_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_ParameterReplication_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_WhileLoopBackendConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_WhileLoopBackendConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_WhileLoopBackendConfig_KnownTripCount_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_WhileLoopBackendConfig_KnownTripCount_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_CustomCallOutputOperandAliasing_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_CustomCallOutputOperandAliasing_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&tensorflow/compiler/xla/xla_data.proto" +
      "\022\003xla\"\267\001\n\rPaddingConfig\022=\n\ndimensions\030\001 " +
      "\003(\0132).xla.PaddingConfig.PaddingConfigDim" +
      "ension\032g\n\026PaddingConfigDimension\022\030\n\020edge" +
      "_padding_low\030\001 \001(\003\022\031\n\021edge_padding_high\030" +
      "\002 \001(\003\022\030\n\020interior_padding\030\003 \001(\003\"\037\n\tTileP" +
      "roto\022\022\n\ndimensions\030\001 \003(\003\"\336\001\n\013LayoutProto" +
      "\022\033\n\006format\030\004 \001(\0162\013.xla.Format\022\026\n\016minor_t" +
      "o_major\030\001 \003(\003\022\035\n\005tiles\030\006 \003(\0132\016.xla.TileP" +
      "roto\022\034\n\024element_size_in_bits\030\007 \001(\003\022\024\n\014me" +
      "mory_space\030\010 \001(\003J\004\010\002\020\003J\004\010\003\020\004J\004\010\005\020\006R\021padd" +
      "ed_dimensionsR\rpadding_valueR\023max_sparse" +
      "_elements\"\275\001\n\nShapeProto\022(\n\014element_type" +
      "\030\002 \001(\0162\022.xla.PrimitiveType\022\022\n\ndimensions" +
      "\030\003 \003(\003\022%\n\014tuple_shapes\030\004 \003(\0132\017.xla.Shape" +
      "Proto\022 \n\006layout\030\005 \001(\0132\020.xla.LayoutProto\022" +
      "\034\n\024is_dynamic_dimension\030\006 \003(\010J\004\010\001\020\002R\004ran" +
      "k\"r\n\021ProgramShapeProto\022#\n\nparameters\030\001 \003" +
      "(\0132\017.xla.ShapeProto\022\037\n\006result\030\002 \001(\0132\017.xl" +
      "a.ShapeProto\022\027\n\017parameter_names\030\003 \003(\t\"D\n" +
      "\020ComputationStats\022\022\n\nflop_count\030\001 \001(\001\022\034\n" +
      "\024transcendental_count\030\002 \001(\001\"\222\002\n\nOpMetada" +
      "ta\022\017\n\007op_type\030\001 \001(\t\022\017\n\007op_name\030\002 \001(\t\022\023\n\013" +
      "source_file\030\003 \001(\t\022\023\n\013source_line\030\004 \001(\005\022&" +
      "\n\014profile_type\030\005 \003(\0162\020.xla.ProfileType\022\030" +
      "\n\020creation_pass_id\030\006 \001(\003\022 \n\030logical_crea" +
      "tion_pass_id\030\007 \001(\003\022\'\n\037size_of_generated_" +
      "code_in_bytes\030\010 \001(\003\022+\n#size_of_memory_wo" +
      "rking_set_in_bytes\030\t \001(\003\"\343\001\n\020ExecutionPr" +
      "ofile\022\035\n\025compilation_cache_hit\030\001 \001(\010\022\027\n\017" +
      "compile_time_ms\030\002 \001(\003\022\033\n\023compute_cycle_c" +
      "ount\030\003 \001(\003\022\027\n\017compute_time_ns\030\004 \001(\003\022$\n\034c" +
      "ompute_and_transfer_time_ns\030\005 \001(\003\022 \n\030exe" +
      "cutable_size_in_bytes\030\006 \001(\003\022\031\n\021profile_c" +
      "ache_hit\030\007 \001(\010\"!\n\017ExecutionHandle\022\016\n\006han" +
      "dle\030\001 \001(\003\"\"\n\020GlobalDataHandle\022\016\n\006handle\030" +
      "\001 \001(\003\"4\n\014DeviceHandle\022\016\n\006handle\030\001 \001(\003\022\024\n" +
      "\014device_count\030\002 \001(\003\"\264\001\n\rChannelHandle\022\016\n" +
      "\006handle\030\001 \001(\003\022,\n\004type\030\002 \001(\0162\036.xla.Channe" +
      "lHandle.ChannelType\"e\n\013ChannelType\022\030\n\024CH" +
      "ANNEL_TYPE_INVALID\020\000\022\024\n\020DEVICE_TO_DEVICE" +
      "\020\001\022\022\n\016DEVICE_TO_HOST\020\002\022\022\n\016HOST_TO_DEVICE" +
      "\020\003\"\305\001\n\025DeviceAssignmentProto\022\025\n\rreplica_" +
      "count\030\001 \001(\005\022\031\n\021computation_count\030\002 \001(\005\022I" +
      "\n\023computation_devices\030\003 \003(\0132,.xla.Device" +
      "AssignmentProto.ComputationDevice\032/\n\021Com" +
      "putationDevice\022\032\n\022replica_device_ids\030\001 \003" +
      "(\005\"\304\002\n\014LiteralProto\022\036\n\005shape\030\001 \001(\0132\017.xla" +
      ".ShapeProto\022\r\n\005preds\030\002 \003(\010\022\013\n\003s8s\030\017 \001(\014\022" +
      "\013\n\003u8s\030\003 \001(\014\022\014\n\004s32s\030\004 \003(\005\022\014\n\004s64s\030\005 \003(\003" +
      "\022\014\n\004u32s\030\006 \003(\r\022\014\n\004u64s\030\007 \003(\004\022\014\n\004f32s\030\010 \003" +
      "(\002\022\014\n\004f64s\030\t \003(\001\022\014\n\004c64s\030\014 \003(\002\022\r\n\005c128s\030" +
      "\022 \003(\001\022)\n\016tuple_literals\030\n \003(\0132\021.xla.Lite" +
      "ralProto\022\014\n\004f16s\030\013 \001(\014\022\r\n\005bf16s\030\r \001(\014\022\014\n" +
      "\004u16s\030\020 \001(\014\022\014\n\004s16s\030\021 \001(\014\022\026\n\016sparse_indi" +
      "ces\030\016 \003(\003\"\243\001\n\017WindowDimension\022\014\n\004size\030\001 " +
      "\001(\003\022\016\n\006stride\030\002 \001(\003\022\023\n\013padding_low\030\003 \001(\003" +
      "\022\024\n\014padding_high\030\004 \001(\003\022\027\n\017window_dilatio" +
      "n\030\005 \001(\003\022\025\n\rbase_dilation\030\006 \001(\003\022\027\n\017window" +
      "_reversal\030\007 \001(\010\"2\n\006Window\022(\n\ndimensions\030" +
      "\001 \003(\0132\024.xla.WindowDimension\"~\n\026GatherDim" +
      "ensionNumbers\022\023\n\013offset_dims\030\001 \003(\003\022\034\n\024co" +
      "llapsed_slice_dims\030\002 \003(\003\022\027\n\017start_index_" +
      "map\030\003 \003(\003\022\030\n\020index_vector_dim\030\004 \001(\003\"\223\001\n\027" +
      "ScatterDimensionNumbers\022\032\n\022update_window" +
      "_dims\030\001 \003(\003\022\034\n\024inserted_window_dims\030\002 \003(" +
      "\003\022$\n\034scatter_dims_to_operand_dims\030\003 \003(\003\022" +
      "\030\n\020index_vector_dim\030\004 \001(\003\"\330\002\n\033Convolutio" +
      "nDimensionNumbers\022\035\n\025input_batch_dimensi" +
      "on\030\007 \001(\003\022\037\n\027input_feature_dimension\030\010 \001(" +
      "\003\022 \n\030input_spatial_dimensions\030\013 \003(\003\022&\n\036k" +
      "ernel_input_feature_dimension\030\003 \001(\003\022\'\n\037k" +
      "ernel_output_feature_dimension\030\004 \001(\003\022!\n\031" +
      "kernel_spatial_dimensions\030\006 \003(\003\022\036\n\026outpu" +
      "t_batch_dimension\030\t \001(\003\022 \n\030output_featur" +
      "e_dimension\030\n \001(\003\022!\n\031output_spatial_dime" +
      "nsions\030\014 \003(\003\"\231\001\n\023DotDimensionNumbers\022\"\n\032" +
      "lhs_contracting_dimensions\030\001 \003(\003\022\"\n\032rhs_" +
      "contracting_dimensions\030\002 \003(\003\022\034\n\024lhs_batc" +
      "h_dimensions\030\003 \003(\003\022\034\n\024rhs_batch_dimensio" +
      "ns\030\004 \003(\003\"\337\001\n\026TriangularSolveOptions\022\021\n\tl" +
      "eft_side\030\001 \001(\010\022\r\n\005lower\030\002 \001(\010\022\025\n\runit_di" +
      "agonal\030\003 \001(\010\022:\n\013transpose_a\030\004 \001(\0162%.xla." +
      "TriangularSolveOptions.Transpose\"P\n\tTran" +
      "spose\022\025\n\021TRANSPOSE_INVALID\020\000\022\020\n\014NO_TRANS" +
      "POSE\020\001\022\r\n\tTRANSPOSE\020\002\022\013\n\007ADJOINT\020\003\" \n\017Ch" +
      "oleskyOptions\022\r\n\005lower\030\001 \001(\010\"o\n\022Frontend" +
      "Attributes\022-\n\003map\030\001 \003(\0132 .xla.FrontendAt" +
      "tributes.MapEntry\032*\n\010MapEntry\022\013\n\003key\030\001 \001" +
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\200\003\n\nOpSharding\022\"\n\004" +
      "type\030\001 \001(\0162\024.xla.OpSharding.Type\022#\n\ntile" +
      "_shape\030\002 \001(\0132\017.xla.ShapeProto\022\"\n\032tile_as" +
      "signment_dimensions\030\003 \003(\003\022\037\n\027tile_assign" +
      "ment_devices\030\004 \003(\003\022(\n\017tuple_shardings\030\005 " +
      "\003(\0132\017.xla.OpSharding\022\"\n\032replicate_on_las" +
      "t_tile_dim\030\006 \001(\010\022!\n\010metadata\030\007 \003(\0132\017.xla" +
      ".OpMetadata\022,\n\016last_tile_dims\030\010 \003(\0162\024.xl" +
      "a.OpSharding.Type\"E\n\004Type\022\016\n\nREPLICATED\020" +
      "\000\022\013\n\007MAXIMAL\020\001\022\t\n\005TUPLE\020\002\022\t\n\005OTHER\020\003\022\n\n\006" +
      "MANUAL\020\004\"#\n\014ReplicaGroup\022\023\n\013replica_ids\030" +
      "\001 \003(\003\".\n\014SourceTarget\022\016\n\006source\030\001 \001(\003\022\016\n" +
      "\006target\030\002 \001(\003\"}\n\017PrecisionConfig\0229\n\021oper" +
      "and_precision\030\001 \003(\0162\036.xla.PrecisionConfi" +
      "g.Precision\"/\n\tPrecision\022\013\n\007DEFAULT\020\000\022\010\n" +
      "\004HIGH\020\001\022\013\n\007HIGHEST\020\002\":\n\024ParameterReplica" +
      "tion\022\"\n\032replicated_at_leaf_buffers\030\001 \003(\010" +
      "\"{\n\026WhileLoopBackendConfig\022D\n\020known_trip" +
      "_count\030\001 \001(\0132*.xla.WhileLoopBackendConfi" +
      "g.KnownTripCount\032\033\n\016KnownTripCount\022\t\n\001n\030" +
      "\001 \001(\003\"q\n\037CustomCallOutputOperandAliasing" +
      "\022\032\n\022output_shape_index\030\001 \003(\003\022\025\n\roperand_" +
      "index\030\002 \001(\003\022\033\n\023operand_shape_index\030\003 \003(\003" +
      "*\332\001\n\rPrimitiveType\022\032\n\026PRIMITIVE_TYPE_INV" +
      "ALID\020\000\022\010\n\004PRED\020\001\022\006\n\002S8\020\002\022\007\n\003S16\020\003\022\007\n\003S32" +
      "\020\004\022\007\n\003S64\020\005\022\006\n\002U8\020\006\022\007\n\003U16\020\007\022\007\n\003U32\020\010\022\007\n" +
      "\003U64\020\t\022\007\n\003F16\020\n\022\007\n\003F32\020\013\022\010\n\004BF16\020\020\022\007\n\003F6" +
      "4\020\014\022\007\n\003C64\020\017\022\010\n\004C128\020\022\022\t\n\005TUPLE\020\r\022\017\n\013OPA" +
      "QUE_TYPE\020\016\022\t\n\005TOKEN\020\021*5\n\006Format\022\022\n\016INVAL" +
      "ID_FORMAT\020\000\022\t\n\005DENSE\020\001\"\004\010\002\020\002*\006SPARSE*=\n\013" +
      "ProfileType\022\013\n\007INVALID\020\000\022\n\n\006WINDOW\020\001\022\010\n\004" +
      "FLAG\020\002\022\013\n\007INTEGER\020\003*G\n\013PaddingType\022\023\n\017PA" +
      "DDING_INVALID\020\000\022\021\n\rPADDING_VALID\020\001\022\020\n\014PA" +
      "DDING_SAME\020\002*1\n\007FftType\022\007\n\003FFT\020\000\022\010\n\004IFFT" +
      "\020\001\022\010\n\004RFFT\020\002\022\t\n\005IRFFT\020\003*F\n\022RandomDistrib" +
      "ution\022\017\n\013RNG_INVALID\020\000\022\017\n\013RNG_UNIFORM\020\001\022" +
      "\016\n\nRNG_NORMAL\020\002*E\n\017RandomAlgorithm\022\017\n\013RN" +
      "G_DEFAULT\020\000\022\021\n\rRNG_THREE_FRY\020\001\022\016\n\nRNG_PH" +
      "ILOX\020\002B\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_xla_PaddingConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xla_PaddingConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_PaddingConfig_descriptor,
        new java.lang.String[] { "Dimensions", });
    internal_static_xla_PaddingConfig_PaddingConfigDimension_descriptor =
      internal_static_xla_PaddingConfig_descriptor.getNestedTypes().get(0);
    internal_static_xla_PaddingConfig_PaddingConfigDimension_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_PaddingConfig_PaddingConfigDimension_descriptor,
        new java.lang.String[] { "EdgePaddingLow", "EdgePaddingHigh", "InteriorPadding", });
    internal_static_xla_TileProto_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_xla_TileProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_TileProto_descriptor,
        new java.lang.String[] { "Dimensions", });
    internal_static_xla_LayoutProto_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_xla_LayoutProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_LayoutProto_descriptor,
        new java.lang.String[] { "Format", "MinorToMajor", "Tiles", "ElementSizeInBits", "MemorySpace", });
    internal_static_xla_ShapeProto_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_xla_ShapeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ShapeProto_descriptor,
        new java.lang.String[] { "ElementType", "Dimensions", "TupleShapes", "Layout", "IsDynamicDimension", });
    internal_static_xla_ProgramShapeProto_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_xla_ProgramShapeProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ProgramShapeProto_descriptor,
        new java.lang.String[] { "Parameters", "Result", "ParameterNames", });
    internal_static_xla_ComputationStats_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_xla_ComputationStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ComputationStats_descriptor,
        new java.lang.String[] { "FlopCount", "TranscendentalCount", });
    internal_static_xla_OpMetadata_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_xla_OpMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_OpMetadata_descriptor,
        new java.lang.String[] { "OpType", "OpName", "SourceFile", "SourceLine", "ProfileType", "CreationPassId", "LogicalCreationPassId", "SizeOfGeneratedCodeInBytes", "SizeOfMemoryWorkingSetInBytes", });
    internal_static_xla_ExecutionProfile_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_xla_ExecutionProfile_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ExecutionProfile_descriptor,
        new java.lang.String[] { "CompilationCacheHit", "CompileTimeMs", "ComputeCycleCount", "ComputeTimeNs", "ComputeAndTransferTimeNs", "ExecutableSizeInBytes", "ProfileCacheHit", });
    internal_static_xla_ExecutionHandle_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_xla_ExecutionHandle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ExecutionHandle_descriptor,
        new java.lang.String[] { "Handle", });
    internal_static_xla_GlobalDataHandle_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_xla_GlobalDataHandle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_GlobalDataHandle_descriptor,
        new java.lang.String[] { "Handle", });
    internal_static_xla_DeviceHandle_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_xla_DeviceHandle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_DeviceHandle_descriptor,
        new java.lang.String[] { "Handle", "DeviceCount", });
    internal_static_xla_ChannelHandle_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_xla_ChannelHandle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ChannelHandle_descriptor,
        new java.lang.String[] { "Handle", "Type", });
    internal_static_xla_DeviceAssignmentProto_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_xla_DeviceAssignmentProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_DeviceAssignmentProto_descriptor,
        new java.lang.String[] { "ReplicaCount", "ComputationCount", "ComputationDevices", });
    internal_static_xla_DeviceAssignmentProto_ComputationDevice_descriptor =
      internal_static_xla_DeviceAssignmentProto_descriptor.getNestedTypes().get(0);
    internal_static_xla_DeviceAssignmentProto_ComputationDevice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_DeviceAssignmentProto_ComputationDevice_descriptor,
        new java.lang.String[] { "ReplicaDeviceIds", });
    internal_static_xla_LiteralProto_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_xla_LiteralProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_LiteralProto_descriptor,
        new java.lang.String[] { "Shape", "Preds", "S8S", "U8S", "S32S", "S64S", "U32S", "U64S", "F32S", "F64S", "C64S", "C128S", "TupleLiterals", "F16S", "Bf16S", "U16S", "S16S", "SparseIndices", });
    internal_static_xla_WindowDimension_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_xla_WindowDimension_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_WindowDimension_descriptor,
        new java.lang.String[] { "Size", "Stride", "PaddingLow", "PaddingHigh", "WindowDilation", "BaseDilation", "WindowReversal", });
    internal_static_xla_Window_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_xla_Window_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_Window_descriptor,
        new java.lang.String[] { "Dimensions", });
    internal_static_xla_GatherDimensionNumbers_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_xla_GatherDimensionNumbers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_GatherDimensionNumbers_descriptor,
        new java.lang.String[] { "OffsetDims", "CollapsedSliceDims", "StartIndexMap", "IndexVectorDim", });
    internal_static_xla_ScatterDimensionNumbers_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_xla_ScatterDimensionNumbers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ScatterDimensionNumbers_descriptor,
        new java.lang.String[] { "UpdateWindowDims", "InsertedWindowDims", "ScatterDimsToOperandDims", "IndexVectorDim", });
    internal_static_xla_ConvolutionDimensionNumbers_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_xla_ConvolutionDimensionNumbers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ConvolutionDimensionNumbers_descriptor,
        new java.lang.String[] { "InputBatchDimension", "InputFeatureDimension", "InputSpatialDimensions", "KernelInputFeatureDimension", "KernelOutputFeatureDimension", "KernelSpatialDimensions", "OutputBatchDimension", "OutputFeatureDimension", "OutputSpatialDimensions", });
    internal_static_xla_DotDimensionNumbers_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_xla_DotDimensionNumbers_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_DotDimensionNumbers_descriptor,
        new java.lang.String[] { "LhsContractingDimensions", "RhsContractingDimensions", "LhsBatchDimensions", "RhsBatchDimensions", });
    internal_static_xla_TriangularSolveOptions_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_xla_TriangularSolveOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_TriangularSolveOptions_descriptor,
        new java.lang.String[] { "LeftSide", "Lower", "UnitDiagonal", "TransposeA", });
    internal_static_xla_CholeskyOptions_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_xla_CholeskyOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_CholeskyOptions_descriptor,
        new java.lang.String[] { "Lower", });
    internal_static_xla_FrontendAttributes_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_xla_FrontendAttributes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_FrontendAttributes_descriptor,
        new java.lang.String[] { "Map", });
    internal_static_xla_FrontendAttributes_MapEntry_descriptor =
      internal_static_xla_FrontendAttributes_descriptor.getNestedTypes().get(0);
    internal_static_xla_FrontendAttributes_MapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_FrontendAttributes_MapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_xla_OpSharding_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_xla_OpSharding_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_OpSharding_descriptor,
        new java.lang.String[] { "Type", "TileShape", "TileAssignmentDimensions", "TileAssignmentDevices", "TupleShardings", "ReplicateOnLastTileDim", "Metadata", "LastTileDims", });
    internal_static_xla_ReplicaGroup_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_xla_ReplicaGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ReplicaGroup_descriptor,
        new java.lang.String[] { "ReplicaIds", });
    internal_static_xla_SourceTarget_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_xla_SourceTarget_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_SourceTarget_descriptor,
        new java.lang.String[] { "Source", "Target", });
    internal_static_xla_PrecisionConfig_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_xla_PrecisionConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_PrecisionConfig_descriptor,
        new java.lang.String[] { "OperandPrecision", });
    internal_static_xla_ParameterReplication_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_xla_ParameterReplication_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_ParameterReplication_descriptor,
        new java.lang.String[] { "ReplicatedAtLeafBuffers", });
    internal_static_xla_WhileLoopBackendConfig_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_xla_WhileLoopBackendConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_WhileLoopBackendConfig_descriptor,
        new java.lang.String[] { "KnownTripCount", });
    internal_static_xla_WhileLoopBackendConfig_KnownTripCount_descriptor =
      internal_static_xla_WhileLoopBackendConfig_descriptor.getNestedTypes().get(0);
    internal_static_xla_WhileLoopBackendConfig_KnownTripCount_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_WhileLoopBackendConfig_KnownTripCount_descriptor,
        new java.lang.String[] { "N", });
    internal_static_xla_CustomCallOutputOperandAliasing_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_xla_CustomCallOutputOperandAliasing_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_CustomCallOutputOperandAliasing_descriptor,
        new java.lang.String[] { "OutputShapeIndex", "OperandIndex", "OperandShapeIndex", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
